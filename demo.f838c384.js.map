{"version":3,"sources":["../../../node_modules/chroma-js/chroma.js","../../../node_modules/hsluv/hsluv.js","../../../node_modules/mout/object/hasOwn.js","../../../node_modules/mout/object/forIn.js","../../../node_modules/mout/object/functions.js","../../../node_modules/mout/array/slice.js","../../../node_modules/mout/function/bind.js","../../../node_modules/mout/array/forEach.js","../../../node_modules/mout/object/bindAll.js","../../../node_modules/mout/object/forOwn.js","../../../node_modules/mout/function/identity.js","../../../node_modules/mout/function/prop.js","../../../node_modules/mout/lang/kindOf.js","../../../node_modules/mout/lang/isKind.js","../../../node_modules/mout/lang/isArray.js","../../../node_modules/mout/object/deepMatches.js","../../../node_modules/mout/function/makeIterator_.js","../../../node_modules/mout/object/some.js","../../../node_modules/mout/object/contains.js","../../../node_modules/mout/lang/isPlainObject.js","../../../node_modules/mout/object/deepFillIn.js","../../../node_modules/mout/object/deepMixIn.js","../../../node_modules/mout/object/every.js","../../../node_modules/mout/lang/isObject.js","../../../node_modules/mout/lang/is.js","../../../node_modules/mout/object/equals.js","../../../node_modules/mout/object/fillIn.js","../../../node_modules/mout/object/filter.js","../../../node_modules/mout/object/find.js","../../../node_modules/mout/object/flatten.js","../../../node_modules/mout/lang/isPrimitive.js","../../../node_modules/mout/object/get.js","../../../node_modules/mout/object/has.js","../../../node_modules/mout/object/keys.js","../../../node_modules/mout/object/map.js","../../../node_modules/mout/object/matches.js","../../../node_modules/mout/array/max.js","../../../node_modules/mout/object/values.js","../../../node_modules/mout/object/max.js","../../../node_modules/mout/object/mixIn.js","../../../node_modules/mout/lang/clone.js","../../../node_modules/mout/lang/deepClone.js","../../../node_modules/mout/object/merge.js","../../../node_modules/mout/array/min.js","../../../node_modules/mout/object/min.js","../../../node_modules/mout/object/namespace.js","../../../node_modules/mout/array/indexOf.js","../../../node_modules/mout/array/contains.js","../../../node_modules/mout/object/omit.js","../../../node_modules/mout/object/pick.js","../../../node_modules/mout/object/pluck.js","../../../node_modules/mout/object/size.js","../../../node_modules/mout/object/reduce.js","../../../node_modules/mout/object/reject.js","../../../node_modules/mout/lang/isFunction.js","../../../node_modules/mout/object/result.js","../../../node_modules/mout/object/set.js","../../../node_modules/mout/object/unset.js","../../../node_modules/mout/object.js","../../../node_modules/ciebase/dist/illuminant.js","../../../node_modules/ciebase/dist/workspace.js","../../../node_modules/ciebase/dist/matrix.js","../../../node_modules/ciebase/dist/degree.js","../../../node_modules/ciebase/dist/rgb.js","../../../node_modules/ciebase/dist/xyz.js","../../../node_modules/ciebase/index.js","../../../node_modules/ciecam02/dist/helpers.js","../../../node_modules/ciecam02/dist/gamut.js","../../../node_modules/ciecam02/dist/hq.js","../../../node_modules/ciecam02/dist/cam.js","../../../node_modules/ciecam02/dist/ucs.js","../../../node_modules/ciecam02/index.js","../../../node_modules/@adobe/leonardo-contrast-colors/chroma-plus.mjs","../../../node_modules/colorparsley/src/colorparsley.js","../../../node_modules/apca-w3/src/apca-w3.js","../../../node_modules/@adobe/leonardo-contrast-colors/curve.mjs","../../../node_modules/@adobe/leonardo-contrast-colors/utils.mjs","../../../node_modules/@adobe/leonardo-contrast-colors/color.mjs","../../../node_modules/@adobe/leonardo-contrast-colors/backgroundcolor.mjs","../../../node_modules/@adobe/leonardo-contrast-colors/theme.mjs","../../../node_modules/@adobe/leonardo-contrast-colors/index.mjs","demo.js"],"names":["cam","ciecam02","whitePoint","ciebase","illuminant","D65","adaptingLuminance","backgroundLuminance","surroundType","discounting","cfs","xyz","workspace","sRGB","jch2rgb","jch","toRgb","toXyz","J","C","h","rgb2jch","rgb","fromXyz","fromRgb","jch2jab","jab2jch","coefs","k_l","c1","c2","π","Math","PI","CIECAM02_la","CIECAM02_k","CIECAM02_fl","M","j","MPrime","log","a","cos","b","sin","jab","newMPrime","sqrt","newM","exp","atan2","jab2rgb","rgb2jab","con","console","color","text","col","chromajs","l","luminance","ramp","scale","length","getCSSGradient","online","x1","y1","x2","y2","x3","y3","ε","m","x4","y4","div","ƒ","dot1","dot2","split","from","to","step","points","i","push","dot","splice","round","x","r","deg","ptsr","gl","ptsg","ptsb","Array","Set","map","sort","hex","join","extendChroma","chroma","Color","prototype","_rgb","slice","c","args","floor","hsluv","rgbToHsluv","hsluvToRgb","oldInterpol","interpolate","RGB2","lerpH","t","d","abs","col1","col2","f","mode","xyz1","xyz2","grey1","Number","isNaN","hsl","grey2","X","Y","Z","alpha","colorParsley","colorIn","parseString","isArray","red","objArray","g","green","blue","space","colorSpace","colorspace","colorString","replace","toLowerCase","isValid","type","retArray","match","namedColors","gray0","gray1","gray2","gray3","gray4","gray5","gray6","gray7","gray8","gray9","graya","grayb","grayc","grayd","graye","grayf","midgray","grey0","grey3","grey4","grey5","grey6","grey7","grey8","grey9","greya","greyb","greyc","greyd","greye","greyf","midgrey","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","key","hexRex","rex","sprig","slices","parseInt","hexProc","exec","colorRex","parsley","slicePos","sliceLast","base","divisor","convertPct","parseFloat","k","sat","light","hwbFact","hue","n","min","max","slicesProc","colorToHex","rgba","allow3","R","toString","padStart","G","B","A","charAt","colorToRGB","trunc","SA98G","mainTRC","mainTRCencode","sRco","sGco","sBco","normBG","normTXT","revTXT","revBG","blkThrs","blkClmp","scaleBoW","scaleWoB","loBoWoffset","loWoBoffset","deltaYmin","loClip","mFactor","mFactInv","mOffsetIn","mExpAdj","mExp","mOffsetOut","APCAcontrast","txtY","bgY","places","icp","SAPC","outputContrast","polCat","pow","isInteger","toFixed","reverseAPCA","contrast","knownY","knownType","returnAs","unknownY","knownExp","unknownExp","offset","hexB","colorB","retUse","calcAPCA","textColor","bgColor","bgClr","txClr","hasAlpha","alphaBlend","sRGBtoY","fontLookupAPCA","fontMatrixAscend","fontDeltaAscend","weightArray","weightArrayLen","returnArray","returnArrayLen","contrastArrayAscend","contrastArrayLenAsc","tempFont","factor","index","w","scoreAdj","simpleExp","chan","displayP3toY","adobeRGBtoY","rgbaFG","rgbBG","compBlend","rgbOut","base3","p1","p2","p3","p4","t1","t2","bezlen","z","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","findDotsAtSegment","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","t12","t13","t3","y","catmullRom2bezier","crp","end","iLen","p","bezlen2","x0","y0","len","hypot","prepareCurve","fs","oldi","xy","s","colorSpaces","CAM02","CAM02p","HEX","HSL","HSLuv","HSV","LAB","LCH","RGB","OKLAB","OKLCH","ten","multiplyRatios","ratio","multiplier","cArray","String","hsluvArray","smoothScale","ColorsArray","domains","forEach","point","nans","safeJChHue","hcl","hsv","prev","addon","zero","plus","minus","prep","curve","ch","res","makePowScale","range","createScale","swatches","colorKeys","shift","fullScale","smooth","distributeLightness","sortColor","asFun","Error","concat","unshift","lums","lum","sqrtDomains","polynomial","percDomains","newDomains","sortedColor","data","lch","smoothScaleArray","stringColors","NaN","fill","_","constructor","domain","Colors","colors","filter","el","removeDuplicates","originalArray","prop","newArray","lookupObject","keys1","Object","keys","keys2","uniq","filterNaN","convertColorValue","format","object","colorObj","pop","colorObject","newColorObj","rnd","letter","lab","stringName","stringValue","v","getContrast","baseV","method","undefined","baseLightness","colorLum","baseLum","cr1","cr2","minPositive","formula","val","ratioName","minIndex","indexOf","nArr","rNeg","rPos","nVal","searchColors","bgRgbArray","ratioValues","colorLen","colorScale","_modifiedKeys","_colorspace","_smooth","ccache","getContrast2","colorSearch","first","last","dir","sign","counter","outputColors","name","ratios","output","saturation","_name","_colorKeys","_ratios","_output","_saturation","valid","_colorScale","_updateColorSaturation","_generateColorScale","newColorKeys","currentHsluv","currentSaturation","newSaturation","newHsluv","newColor","BackgroundColor","backgroundColorScale","_backgroundColorScale","call","value","colorObjFiltered","bgColorArrayFiltered","Theme","backgroundColor","lightness","_colors","_lightness","_formula","_setBackgroundColor","_setBackgroundColorValue","_contrast","_backgroundColor","_findContrastColors","_findContrastColorPairs","_findContrastColorValues","backgroundColorValue","_backgroundColorValue","addColor","removeColor","filteredColors","entry","updateColor","param","currentColor","element","contrastColors","_contrastColors","contrastColorPairs","_contrastColorPairs","contrastColorValues","_contrastColorValues","newBackgroundColor","calcLightness","calcBackgroundColorValue","convertedBackgroundColorValue","baseObj","background","returnColors","returnColorValues","returnColorPairs","swatchNames","newArr","values","clr","rVal","obj","baseRatios","uiRatios","purpleScale","Leo","blueScale","greenScale","redScale","goldScale","grayScale","myTheme","setup","br","document","getElementById","defaultValue","calendar","innerHTML","monthNames","Date","month","getMonth","colNum","createElement","className","id","head","today","date","getDate","appendChild","hours","half","full","createEvent","dur","title","meta","cat","pos","width","customClass","en","createTextNode","detail","classList","add","style","top","col0","col3","col4","createColors","brVal","conVal","satVal","checked","documentElement","setProperty","colorPairs","entries","addEventListener","window"],"mappingszlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACFA;;AACA;;AACA;;AACA;;;;AAfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA,MAAMA,GAAG,GAAGC,eAAA,CAASD,GAAT,CAAa;EACvBE,UAAU,EAAEC,gBAAA,CAAQC,UAAR,CAAmBC,GADR;EAEvBC,iBAAiB,EAAE,EAFI;EAGvBC,mBAAmB,EAAE,EAHE;EAIvBC,YAAY,EAAE,SAJS;EAKvBC,WAAW,EAAE;AALU,CAAb,EAMTR,eAAA,CAASS,GAAT,CAAa,KAAb,CANS,CAAZ;;AAQA,MAAMC,GAAG,GAAGR,gBAAA,CAAQQ,GAAR,CAAYR,gBAAA,CAAQS,SAAR,CAAkBC,IAA9B,EAAoCV,gBAAA,CAAQC,UAAR,CAAmBC,GAAvD,CAAZ;;AACA,MAAMS,OAAO,GAAIC,GAAD,IAASJ,GAAG,CAACK,KAAJ,CAAUhB,GAAG,CAACiB,KAAJ,CAAU;EAAEC,CAAC,EAAEH,GAAG,CAAC,CAAD,CAAR;EAAaI,CAAC,EAAEJ,GAAG,CAAC,CAAD,CAAnB;EAAwBK,CAAC,EAAEL,GAAG,CAAC,CAAD;A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","file":"demo.f838c384.js","sourceRoot":"../src","sourcesContent":["/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.chroma = factory());\n})(this, (function () { 'use strict';\n\n    var limit$2 = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var limit$1 = limit$2;\n\n    var clip_rgb$3 = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit$1(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit$1(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i$1 = 0, list$1 = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i$1 < list$1.length; i$1 += 1) {\n        var name = list$1[i$1];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type$p = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var type$o = type$p;\n\n    var unpack$B = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type$o(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var type$n = type$p;\n\n    var last$4 = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type$n(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI$2 = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb$3,\n    \tlimit: limit$2,\n    \ttype: type$p,\n    \tunpack: unpack$B,\n    \tlast: last$4,\n    \tPI: PI$2,\n    \tTWOPI: PI$2*2,\n    \tPITHIRD: PI$2/3,\n    \tDEG2RAD: PI$2 / 180,\n    \tRAD2DEG: 180 / PI$2\n    };\n\n    var input$h = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$3 = utils.last;\n    var clip_rgb$2 = utils.clip_rgb;\n    var type$m = utils.type;\n    var _input = input$h;\n\n    var Color$D = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$m(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$3(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!_input.sorted) {\n                _input.autodetect = _input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                _input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = _input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (_input.format[mode]) {\n            var rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$2(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color$D.prototype.toString = function toString () {\n        if (type$m(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color$D;\n\n    var chroma$k = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma$k.Color, [ null ].concat( args) ));\n    };\n\n    chroma$k.Color = Color_1;\n    chroma$k.version = '2.4.2';\n\n    var chroma_1 = chroma$k;\n\n    var unpack$A = utils.unpack;\n    var max$2 = Math.max;\n\n    var rgb2cmyk$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$A(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max$2(r,max$2(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk$1;\n\n    var unpack$z = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$z(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var chroma$j = chroma_1;\n    var Color$C = Color_1;\n    var input$g = input$h;\n    var unpack$y = utils.unpack;\n    var type$l = utils.type;\n\n    var rgb2cmyk = rgb2cmyk_1;\n\n    Color$C.prototype.cmyk = function() {\n        return rgb2cmyk(this._rgb);\n    };\n\n    chroma$j.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$C, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input$g.format.cmyk = cmyk2rgb_1;\n\n    input$g.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$y(args, 'cmyk');\n            if (type$l(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$x = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$x(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css$1;\n\n    var unpack$w = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl$3 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$w(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl$3;\n\n    var unpack$v = utils.unpack;\n    var last$1 = utils.last;\n    var hsl2css = hsl2css_1;\n    var rgb2hsl$2 = rgb2hsl_1;\n    var round$6 = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$v(args, 'rgba');\n        var mode = last$1(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css(rgb2hsl$2(rgba), mode);\n        }\n        rgba[0] = round$6(rgba[0]);\n        rgba[1] = round$6(rgba[1]);\n        rgba[2] = round$6(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css$1;\n\n    var unpack$u = utils.unpack;\n    var round$5 = Math.round;\n\n    var hsl2rgb$1 = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$u(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$5(c[0]*255),round$5(c[1]*255),round$5(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb$1;\n\n    var hsl2rgb = hsl2rgb_1;\n    var input$f = input$h;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$4 = Math.round;\n\n    var css2rgb$1 = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input$f.format.named) {\n            try {\n                return input$f.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$4(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$4(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb$1.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb$1;\n\n    var chroma$i = chroma_1;\n    var Color$B = Color_1;\n    var input$e = input$h;\n    var type$k = utils.type;\n\n    var rgb2css = rgb2css_1;\n    var css2rgb = css2rgb_1;\n\n    Color$B.prototype.css = function(mode) {\n        return rgb2css(this._rgb, mode);\n    };\n\n    chroma$i.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$B, [ null ].concat( args, ['css']) ));\n    };\n\n    input$e.format.css = css2rgb;\n\n    input$e.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$k(h) === 'string' && css2rgb.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var Color$A = Color_1;\n    var chroma$h = chroma_1;\n    var input$d = input$h;\n    var unpack$t = utils.unpack;\n\n    input$d.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$t(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma$h.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$A, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color$A.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$s = utils.unpack;\n\n    var rgb2hcg$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$s(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg$1;\n\n    var unpack$r = utils.unpack;\n    var floor$3 = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$r(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor$3(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$q = utils.unpack;\n    var type$j = utils.type;\n    var chroma$g = chroma_1;\n    var Color$z = Color_1;\n    var input$c = input$h;\n\n    var rgb2hcg = rgb2hcg_1;\n\n    Color$z.prototype.hcg = function() {\n        return rgb2hcg(this._rgb);\n    };\n\n    chroma$g.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$z, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input$c.format.hcg = hcg2rgb_1;\n\n    input$c.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$q(args, 'hcg');\n            if (type$j(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$p = utils.unpack;\n    var last = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$p(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex$2;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb$1 = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb$1;\n\n    var chroma$f = chroma_1;\n    var Color$y = Color_1;\n    var type$i = utils.type;\n    var input$b = input$h;\n\n    var rgb2hex$1 = rgb2hex_1;\n\n    Color$y.prototype.hex = function(mode) {\n        return rgb2hex$1(this._rgb, mode);\n    };\n\n    chroma$f.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$y, [ null ].concat( args, ['hex']) ));\n    };\n\n    input$b.format.hex = hex2rgb_1;\n    input$b.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$i(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$o = utils.unpack;\n    var TWOPI$2 = utils.TWOPI;\n    var min$2 = Math.min;\n    var sqrt$4 = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$o(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min$2(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt$4((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI$2 - h;\n            }\n            h /= TWOPI$2;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi$1;\n\n    var unpack$n = utils.unpack;\n    var limit = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos$4 = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$n(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit(i*r*3);\n        g = limit(i*g*3);\n        b = limit(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$m = utils.unpack;\n    var type$h = utils.type;\n    var chroma$e = chroma_1;\n    var Color$x = Color_1;\n    var input$a = input$h;\n\n    var rgb2hsi = rgb2hsi_1;\n\n    Color$x.prototype.hsi = function() {\n        return rgb2hsi(this._rgb);\n    };\n\n    chroma$e.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$x, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input$a.format.hsi = hsi2rgb_1;\n\n    input$a.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$m(args, 'hsi');\n            if (type$h(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$l = utils.unpack;\n    var type$g = utils.type;\n    var chroma$d = chroma_1;\n    var Color$w = Color_1;\n    var input$9 = input$h;\n\n    var rgb2hsl$1 = rgb2hsl_1;\n\n    Color$w.prototype.hsl = function() {\n        return rgb2hsl$1(this._rgb);\n    };\n\n    chroma$d.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$w, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input$9.format.hsl = hsl2rgb_1;\n\n    input$9.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$l(args, 'hsl');\n            if (type$g(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$k = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$k(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv$1 = rgb2hsl;\n\n    var unpack$j = utils.unpack;\n    var floor$2 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$j(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$2(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$i = utils.unpack;\n    var type$f = utils.type;\n    var chroma$c = chroma_1;\n    var Color$v = Color_1;\n    var input$8 = input$h;\n\n    var rgb2hsv = rgb2hsv$1;\n\n    Color$v.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma$c.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$v, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input$8.format.hsv = hsv2rgb_1;\n\n    input$8.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$i(args, 'hsv');\n            if (type$f(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var LAB_CONSTANTS$3 = labConstants;\n    var unpack$h = utils.unpack;\n    var pow$a = Math.pow;\n\n    var rgb2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$h(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow$a((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > LAB_CONSTANTS$3.t3) { return pow$a(t, 1 / 3); }\n        return t / LAB_CONSTANTS$3.t2 + LAB_CONSTANTS$3.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS$3.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS$3.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS$3.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab$2;\n\n    var LAB_CONSTANTS$2 = labConstants;\n    var unpack$g = utils.unpack;\n    var pow$9 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$g(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = LAB_CONSTANTS$2.Yn * lab_xyz(y);\n        x = LAB_CONSTANTS$2.Xn * lab_xyz(x);\n        z = LAB_CONSTANTS$2.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$9(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > LAB_CONSTANTS$2.t1 ? t * t * t : LAB_CONSTANTS$2.t2 * (t - LAB_CONSTANTS$2.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb$1;\n\n    var unpack$f = utils.unpack;\n    var type$e = utils.type;\n    var chroma$b = chroma_1;\n    var Color$u = Color_1;\n    var input$7 = input$h;\n\n    var rgb2lab$1 = rgb2lab_1;\n\n    Color$u.prototype.lab = function() {\n        return rgb2lab$1(this._rgb);\n    };\n\n    chroma$b.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$u, [ null ].concat( args, ['lab']) ));\n    };\n\n    input$7.format.lab = lab2rgb_1;\n\n    input$7.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'lab');\n            if (type$e(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$e = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$3 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var round$2 = Math.round;\n\n    var lab2lch$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$e(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$3(a * a + b * b);\n        var h = (atan2$2(b, a) * RAD2DEG + 360) % 360;\n        if (round$2(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch$2;\n\n    var unpack$d = utils.unpack;\n    var rgb2lab = rgb2lab_1;\n    var lab2lch$1 = lab2lch_1;\n\n    var rgb2lch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$d(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch$1(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch$1;\n\n    var unpack$c = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin$3 = Math.sin;\n    var cos$3 = Math.cos;\n\n    var lch2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$c(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$3(h) * c, sin$3(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab$2;\n\n    var unpack$b = utils.unpack;\n    var lch2lab$1 = lch2lab_1;\n    var lab2rgb = lab2rgb_1;\n\n    var lch2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$b(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab$1 (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb$1;\n\n    var unpack$a = utils.unpack;\n    var lch2rgb = lch2rgb_1;\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$a(args, 'hcl').reverse();\n        return lch2rgb.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$9 = utils.unpack;\n    var type$d = utils.type;\n    var chroma$a = chroma_1;\n    var Color$t = Color_1;\n    var input$6 = input$h;\n\n    var rgb2lch = rgb2lch_1;\n\n    Color$t.prototype.lch = function() { return rgb2lch(this._rgb); };\n    Color$t.prototype.hcl = function() { return rgb2lch(this._rgb).reverse(); };\n\n    chroma$a.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['lch']) ));\n    };\n    chroma$a.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input$6.format.lch = lch2rgb_1;\n    input$6.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input$6.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$9(args, m);\n            if (type$d(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11$1 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11$1;\n\n    var Color$s = Color_1;\n    var input$5 = input$h;\n    var type$c = utils.type;\n\n    var w3cx11 = w3cx11_1;\n    var hex2rgb = hex2rgb_1;\n    var rgb2hex = rgb2hex_1;\n\n    Color$s.prototype.name = function() {\n        var hex = rgb2hex(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input$5.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11[name]) { return hex2rgb(w3cx11[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input$5.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$c(h) === 'string' && w3cx11[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n\n    var rgb2num$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$8(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num$1;\n\n    var type$b = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$b(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var chroma$9 = chroma_1;\n    var Color$r = Color_1;\n    var input$4 = input$h;\n    var type$a = utils.type;\n\n    var rgb2num = rgb2num_1;\n\n    Color$r.prototype.num = function() {\n        return rgb2num(this._rgb);\n    };\n\n    chroma$9.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$r, [ null ].concat( args, ['num']) ));\n    };\n\n    input$4.format.num = num2rgb_1;\n\n    input$4.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$a(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var chroma$8 = chroma_1;\n    var Color$q = Color_1;\n    var input$3 = input$h;\n    var unpack$7 = utils.unpack;\n    var type$9 = utils.type;\n    var round$1 = Math.round;\n\n    Color$q.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$1);\n    };\n\n    Color$q.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$1(v)) : v;\n        });\n    };\n\n    chroma$8.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$q, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input$3.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$7(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input$3.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$7(args, 'rgba');\n            if (type$9(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$9(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log$1 = Math.log;\n\n    var temperature2rgb$1 = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = temp < 6 ? 0 : -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log$1(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log$1(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log$1(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log$1(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb$1;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n    var temperature2rgb = temperature2rgb_1;\n    var unpack$6 = utils.unpack;\n    var round = Math.round;\n\n    var rgb2temperature$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$6(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature$1;\n\n    var chroma$7 = chroma_1;\n    var Color$p = Color_1;\n    var input$2 = input$h;\n\n    var rgb2temperature = rgb2temperature_1;\n\n    Color$p.prototype.temp =\n    Color$p.prototype.kelvin =\n    Color$p.prototype.temperature = function() {\n        return rgb2temperature(this._rgb);\n    };\n\n    chroma$7.temp =\n    chroma$7.kelvin =\n    chroma$7.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$p, [ null ].concat( args, ['temp']) ));\n    };\n\n    input$2.format.temp =\n    input$2.format.kelvin =\n    input$2.format.temperature = temperature2rgb_1;\n\n    var unpack$5 = utils.unpack;\n    var cbrt = Math.cbrt;\n    var pow$8 = Math.pow;\n    var sign$1 = Math.sign;\n\n    var rgb2oklab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        // OKLab color space implementation taken from\n        // https://bottosson.github.io/posts/oklab/\n        var ref = unpack$5(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = [rgb2lrgb(r / 255), rgb2lrgb(g / 255), rgb2lrgb(b / 255)];\n        var lr = ref$1[0];\n        var lg = ref$1[1];\n        var lb = ref$1[2];\n        var l = cbrt(0.4122214708 * lr + 0.5363325363 * lg + 0.0514459929 * lb);\n        var m = cbrt(0.2119034982 * lr + 0.6806995451 * lg + 0.1073969566 * lb);\n        var s = cbrt(0.0883024619 * lr + 0.2817188376 * lg + 0.6299787005 * lb);\n\n        return [\n            0.2104542553 * l + 0.793617785 * m - 0.0040720468 * s,\n            1.9779984951 * l - 2.428592205 * m + 0.4505937099 * s,\n            0.0259040371 * l + 0.7827717662 * m - 0.808675766 * s\n        ];\n    };\n\n    var rgb2oklab_1 = rgb2oklab$2;\n\n    function rgb2lrgb(c) {\n        var abs = Math.abs(c);\n        if (abs < 0.04045) {\n            return c / 12.92;\n        }\n        return (sign$1(c) || 1) * pow$8((abs + 0.055) / 1.055, 2.4);\n    }\n\n    var unpack$4 = utils.unpack;\n    var pow$7 = Math.pow;\n    var sign = Math.sign;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var oklab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$4(args, 'lab');\n        var L = args[0];\n        var a = args[1];\n        var b = args[2];\n\n        var l = pow$7(L + 0.3963377774 * a + 0.2158037573 * b, 3);\n        var m = pow$7(L - 0.1055613458 * a - 0.0638541728 * b, 3);\n        var s = pow$7(L - 0.0894841775 * a - 1.291485548 * b, 3);\n\n        return [\n            255 * lrgb2rgb(+4.0767416621 * l - 3.3077115913 * m + 0.2309699292 * s),\n            255 * lrgb2rgb(-1.2684380046 * l + 2.6097574011 * m - 0.3413193965 * s),\n            255 * lrgb2rgb(-0.0041960863 * l - 0.7034186147 * m + 1.707614701 * s),\n            args.length > 3 ? args[3] : 1\n        ];\n    };\n\n    var oklab2rgb_1 = oklab2rgb$1;\n\n    function lrgb2rgb(c) {\n        var abs = Math.abs(c);\n        if (abs > 0.0031308) {\n            return (sign(c) || 1) * (1.055 * pow$7(abs, 1 / 2.4) - 0.055);\n        }\n        return c * 12.92;\n    }\n\n    var unpack$3 = utils.unpack;\n    var type$8 = utils.type;\n    var chroma$6 = chroma_1;\n    var Color$o = Color_1;\n    var input$1 = input$h;\n\n    var rgb2oklab$1 = rgb2oklab_1;\n\n    Color$o.prototype.oklab = function () {\n        return rgb2oklab$1(this._rgb);\n    };\n\n    chroma$6.oklab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$o, [ null ].concat( args, ['oklab']) ));\n    };\n\n    input$1.format.oklab = oklab2rgb_1;\n\n    input$1.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, 'oklab');\n            if (type$8(args) === 'array' && args.length === 3) {\n                return 'oklab';\n            }\n        }\n    });\n\n    var unpack$2 = utils.unpack;\n    var rgb2oklab = rgb2oklab_1;\n    var lab2lch = lab2lch_1;\n\n    var rgb2oklch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$2(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2oklab(r, g, b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch(l, a, b_);\n    };\n\n    var rgb2oklch_1 = rgb2oklch$1;\n\n    var unpack$1 = utils.unpack;\n    var lch2lab = lch2lab_1;\n    var oklab2rgb = oklab2rgb_1;\n\n    var oklch2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$1(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab(l, c, h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = oklab2rgb(L, a, b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var oklch2rgb_1 = oklch2rgb;\n\n    var unpack = utils.unpack;\n    var type$7 = utils.type;\n    var chroma$5 = chroma_1;\n    var Color$n = Color_1;\n    var input = input$h;\n\n    var rgb2oklch = rgb2oklch_1;\n\n    Color$n.prototype.oklch = function () {\n        return rgb2oklch(this._rgb);\n    };\n\n    chroma$5.oklch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$n, [ null ].concat( args, ['oklch']) ));\n    };\n\n    input.format.oklch = oklch2rgb_1;\n\n    input.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack(args, 'oklch');\n            if (type$7(args) === 'array' && args.length === 3) {\n                return 'oklch';\n            }\n        }\n    });\n\n    var Color$m = Color_1;\n    var type$6 = utils.type;\n\n    Color$m.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$6(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color$m([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    var Color$l = Color_1;\n\n    Color$l.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    var Color$k = Color_1;\n    var LAB_CONSTANTS$1 = labConstants;\n\n    Color$k.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= LAB_CONSTANTS$1.Kn * amount;\n    \treturn new Color$k(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color$k.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color$k.prototype.darker = Color$k.prototype.darken;\n    Color$k.prototype.brighter = Color$k.prototype.brighten;\n\n    var Color$j = Color_1;\n\n    Color$j.prototype.get = function (mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$i = Color_1;\n    var type$5 = utils.type;\n    var pow$6 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color$i.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$5(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color$i([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color$i([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color$i([0,0,0]), this) : test(this, new Color$i([255,255,255]))).rgb();\n            return new Color$i(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$6((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator$1 = {};\n\n    var Color$h = Color_1;\n    var type$4 = utils.type;\n    var interpolator = interpolator$1;\n\n    var mix$1 = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$4(col1) !== 'object') { col1 = new Color$h(col1); }\n        if (type$4(col2) !== 'object') { col2 = new Color$h(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    var Color$g = Color_1;\n    var mix = mix$1;\n\n    Color$g.prototype.mix =\n    Color$g.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    var Color$f = Color_1;\n\n    Color$f.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color$f([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    var Color$e = Color_1;\n    var LAB_CONSTANTS = labConstants;\n\n    Color$e.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += LAB_CONSTANTS.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color$e(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color$e.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var Color$d = Color_1;\n    var type$3 = utils.type;\n\n    Color$d.prototype.set = function (mc, value, mutate) {\n        if ( mutate === void 0 ) mutate = false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n            if (i > -1) {\n                if (type$3(value) == 'string') {\n                    switch (value.charAt(0)) {\n                        case '+':\n                            src[i] += +value;\n                            break;\n                        case '-':\n                            src[i] += +value;\n                            break;\n                        case '*':\n                            src[i] *= +value.substr(1);\n                            break;\n                        case '/':\n                            src[i] /= +value.substr(1);\n                            break;\n                        default:\n                            src[i] = +value;\n                    }\n                } else if (type$3(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color$d(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$c = Color_1;\n\n    var rgb = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color$c(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.rgb = rgb;\n\n    var Color$b = Color_1;\n    var sqrt$2 = Math.sqrt;\n    var pow$5 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color$b(\n            sqrt$2(pow$5(x1,2) * (1-f) + pow$5(x2,2) * f),\n            sqrt$2(pow$5(y1,2) * (1-f) + pow$5(y2,2) * f),\n            sqrt$2(pow$5(z1,2) * (1-f) + pow$5(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lrgb = lrgb;\n\n    var Color$a = Color_1;\n\n    var lab = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color$a(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lab = lab;\n\n    var Color$9 = Color_1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        } else if (m === 'oklch') {\n            xyz0 = col1.oklch().reverse();\n            xyz1 = col2.oklch().reverse();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h' || m === 'oklch') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1 - (hue0 + 360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1 + 360 - hue0;\n            } else {\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1 - lbv0);\n        return m === 'oklch' ? new Color$9([lbv, sat, hue], m) : new Color$9([hue, sat, lbv], m);\n    };\n\n    var interpolate_hsx$5 = _hsx;\n\n    var lch = function (col1, col2, f) {\n    \treturn interpolate_hsx$5(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator$1.lch = lch;\n    interpolator$1.hcl = lch;\n\n    var Color$8 = Color_1;\n\n    var num = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color$8(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator$1.num = num;\n\n    var interpolate_hsx$4 = _hsx;\n\n    var hcg = function (col1, col2, f) {\n    \treturn interpolate_hsx$4(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator$1.hcg = hcg;\n\n    var interpolate_hsx$3 = _hsx;\n\n    var hsi = function (col1, col2, f) {\n    \treturn interpolate_hsx$3(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator$1.hsi = hsi;\n\n    var interpolate_hsx$2 = _hsx;\n\n    var hsl = function (col1, col2, f) {\n    \treturn interpolate_hsx$2(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator$1.hsl = hsl;\n\n    var interpolate_hsx$1 = _hsx;\n\n    var hsv = function (col1, col2, f) {\n    \treturn interpolate_hsx$1(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator$1.hsv = hsv;\n\n    var Color$7 = Color_1;\n\n    var oklab = function (col1, col2, f) {\n        var xyz0 = col1.oklab();\n        var xyz1 = col2.oklab();\n        return new Color$7(\n            xyz0[0] + f * (xyz1[0] - xyz0[0]),\n            xyz0[1] + f * (xyz1[1] - xyz0[1]),\n            xyz0[2] + f * (xyz1[2] - xyz0[2]),\n            'oklab'\n        );\n    };\n\n    // register interpolator\n    interpolator$1.oklab = oklab;\n\n    var interpolate_hsx = _hsx;\n\n    var oklch = function (col1, col2, f) {\n        return interpolate_hsx(col1, col2, f, 'oklch');\n    };\n\n    // register interpolator\n    interpolator$1.oklch = oklch;\n\n    var Color$6 = Color_1;\n    var clip_rgb$1 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$1 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$2 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color$6(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$2(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$2(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color$6(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$1(xyz[0]);\n        xyz[1] = sqrt$1(xyz[1]);\n        xyz[2] = sqrt$1(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color$6(clip_rgb$1(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n    var chroma$4 = chroma_1;\n    var type$2 = utils.type;\n\n    var pow$3 = Math.pow;\n\n    var scale$2 = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma$4('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$2(colors) === 'string' && chroma$4.brewer &&\n                chroma$4.brewer[colors.toLowerCase()]) {\n                colors = chroma$4.brewer[colors.toLowerCase()];\n            }\n            if (type$2(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma$4(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$3(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$2(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma$4.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$2(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma$4(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$2(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma$4.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma$4.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$2(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma$4[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma$4(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n    var Color$5 = Color_1;\n\n    var scale$1 = scale$2;\n\n    // nth row of the pascal triangle\n    var binom_row = function(n) {\n        var row = [1, 1];\n        for (var i = 1; i < n; i++) {\n            var newrow = [1];\n            for (var j = 1; j <= row.length; j++) {\n                newrow[j] = (row[j] || 0) + row[j - 1];\n            }\n            row = newrow;\n        }\n        return row;\n    };\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color$5(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length >= 5) {\n            // general case (degree n bezier)\n            var labs, row, n;\n            labs = colors.map(function (c) { return c.lab(); });\n            n = colors.length - 1;\n            row = binom_row(n);\n            I = function (t) {\n                var u = 1 - t;\n                var lab = ([0, 1, 2].map(function (i) { return labs.reduce(function (sum, el, j) { return (sum + row[j] * Math.pow( u, (n - j) ) * Math.pow( t, j ) * el[i]); }, 0); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else {\n            throw new RangeError(\"No point in running bezier with only one color.\")\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale$1(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n    var chroma$3 = chroma_1;\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma$3(top).rgb();\n            var c1 = chroma$3(bottom).rgb();\n            return chroma$3.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$1 = utils.type;\n    var clip_rgb = utils.clip_rgb;\n    var TWOPI = utils.TWOPI;\n    var pow$2 = Math.pow;\n    var sin$1 = Math.sin;\n    var cos$1 = Math.cos;\n    var chroma$2 = chroma_1;\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$1(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI * (((start+120)/360) + (rotations * fract));\n            var l = pow$2(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$1(a);\n            var sin_a = sin$1(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma$2(clip_rgb([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$1(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$1(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma$2.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var Color$4 = Color_1;\n    var digits = '0123456789abcdef';\n\n    var floor$1 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$1(random() * 16));\n        }\n        return new Color$4(code, 'hex');\n    };\n\n    var type = type$p;\n    var log = Math.log;\n    var pow$1 = Math.pow;\n    var floor = Math.floor;\n    var abs$1 = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log(min);\n            var max_log = Math.LOG10E * log(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$1(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs$1(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var Color$3 = Color_1;\n\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color$3(a);\n        b = new Color$3(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var Color$2 = Color_1;\n    var sqrt = Math.sqrt;\n    var pow = Math.pow;\n    var min = Math.min;\n    var max = Math.max;\n    var atan2 = Math.atan2;\n    var abs = Math.abs;\n    var cos = Math.cos;\n    var sin = Math.sin;\n    var exp = Math.exp;\n    var PI = Math.PI;\n\n    var deltaE = function(a, b, Kl, Kc, Kh) {\n        if ( Kl === void 0 ) Kl=1;\n        if ( Kc === void 0 ) Kc=1;\n        if ( Kh === void 0 ) Kh=1;\n\n        // Delta E (CIE 2000)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n        var rad2deg = function(rad) {\n            return 360 * rad / (2 * PI);\n        };\n        var deg2rad = function(deg) {\n            return (2 * PI * deg) / 360;\n        };\n        a = new Color$2(a);\n        b = new Color$2(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var avgL = (L1 + L2)/2;\n        var C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n        var C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n        var avgC = (C1 + C2)/2;\n        var G = 0.5*(1-sqrt(pow(avgC, 7)/(pow(avgC, 7) + pow(25, 7))));\n        var a1p = a1*(1+G);\n        var a2p = a2*(1+G);\n        var C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n        var C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n        var avgCp = (C1p + C2p)/2;\n        var arctan1 = rad2deg(atan2(b1, a1p));\n        var arctan2 = rad2deg(atan2(b2, a2p));\n        var h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n        var h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n        var avgHp = abs(h1p - h2p) > 180 ? (h1p + h2p + 360)/2 : (h1p + h2p)/2;\n        var T = 1 - 0.17*cos(deg2rad(avgHp - 30)) + 0.24*cos(deg2rad(2*avgHp)) + 0.32*cos(deg2rad(3*avgHp + 6)) - 0.2*cos(deg2rad(4*avgHp - 63));\n        var deltaHp = h2p - h1p;\n        deltaHp = abs(deltaHp) <= 180 ? deltaHp : h2p <= h1p ? deltaHp + 360 : deltaHp - 360;\n        deltaHp = 2*sqrt(C1p*C2p)*sin(deg2rad(deltaHp)/2);\n        var deltaL = L2 - L1;\n        var deltaCp = C2p - C1p;    \n        var sl = 1 + (0.015*pow(avgL - 50, 2))/sqrt(20 + pow(avgL - 50, 2));\n        var sc = 1 + 0.045*avgCp;\n        var sh = 1 + 0.015*avgCp*T;\n        var deltaTheta = 30*exp(-pow((avgHp - 275)/25, 2));\n        var Rc = 2*sqrt(pow(avgCp, 7)/(pow(avgCp, 7) + pow(25, 7)));\n        var Rt = -Rc*sin(2*deg2rad(deltaTheta));\n        var result = sqrt(pow(deltaL/(Kl*sl), 2) + pow(deltaCp/(Kc*sc), 2) + pow(deltaHp/(Kh*sh), 2) + Rt*(deltaCp/(Kc*sc))*(deltaHp/(Kh*sh)));\n        return max(0, min(100, result));\n    };\n\n    var Color$1 = Color_1;\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color$1(a);\n        b = new Color$1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var Color = Color_1;\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n    var chroma$1 = chroma_1;\n\n    var scale = scale$2;\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma$1.hsl(180,1,.9), chroma$1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff']).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i = 0, list = Object.keys(colorbrewer); i < list.length; i += 1) {\n        var key = list[i];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    var chroma = chroma_1;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma.average = average;\n    chroma.bezier = bezier_1;\n    chroma.blend = blend_1;\n    chroma.cubehelix = cubehelix;\n    chroma.mix = chroma.interpolate = mix$1;\n    chroma.random = random_1;\n    chroma.scale = scale$2;\n\n    // other utility methods\n    chroma.analyze = analyze_1.analyze;\n    chroma.contrast = contrast;\n    chroma.deltaE = deltaE;\n    chroma.distance = distance;\n    chroma.limits = analyze_1.limits;\n    chroma.valid = valid;\n\n    // scale\n    chroma.scales = scales;\n\n    // colors\n    chroma.colors = w3cx11_1;\n    chroma.brewer = colorbrewer_1;\n\n    var chroma_js = chroma;\n\n    return chroma_js;\n\n}));\n","// Generated by Haxe 3.4.4\nvar hsluv = hsluv || {};\nhsluv.Geometry = function() { };\nhsluv.Geometry.intersectLineLine = function(a,b) {\n\tvar x = (a.intercept - b.intercept) / (b.slope - a.slope);\n\tvar y = a.slope * x + a.intercept;\n\treturn { x : x, y : y};\n};\nhsluv.Geometry.distanceFromOrigin = function(point) {\n\treturn Math.sqrt(Math.pow(point.x,2) + Math.pow(point.y,2));\n};\nhsluv.Geometry.distanceLineFromOrigin = function(line) {\n\treturn Math.abs(line.intercept) / Math.sqrt(Math.pow(line.slope,2) + 1);\n};\nhsluv.Geometry.perpendicularThroughPoint = function(line,point) {\n\tvar slope = -1 / line.slope;\n\tvar intercept = point.y - slope * point.x;\n\treturn { slope : slope, intercept : intercept};\n};\nhsluv.Geometry.angleFromOrigin = function(point) {\n\treturn Math.atan2(point.y,point.x);\n};\nhsluv.Geometry.normalizeAngle = function(angle) {\n\tvar m = 2 * Math.PI;\n\treturn (angle % m + m) % m;\n};\nhsluv.Geometry.lengthOfRayUntilIntersect = function(theta,line) {\n\treturn line.intercept / (Math.sin(theta) - line.slope * Math.cos(theta));\n};\nhsluv.Hsluv = function() { };\nhsluv.Hsluv.getBounds = function(L) {\n\tvar result = [];\n\tvar sub1 = Math.pow(L + 16,3) / 1560896;\n\tvar sub2 = sub1 > hsluv.Hsluv.epsilon ? sub1 : L / hsluv.Hsluv.kappa;\n\tvar _g = 0;\n\twhile(_g < 3) {\n\t\tvar c = _g++;\n\t\tvar m1 = hsluv.Hsluv.m[c][0];\n\t\tvar m2 = hsluv.Hsluv.m[c][1];\n\t\tvar m3 = hsluv.Hsluv.m[c][2];\n\t\tvar _g1 = 0;\n\t\twhile(_g1 < 2) {\n\t\t\tvar t = _g1++;\n\t\t\tvar top1 = (284517 * m1 - 94839 * m3) * sub2;\n\t\t\tvar top2 = (838422 * m3 + 769860 * m2 + 731718 * m1) * L * sub2 - 769860 * t * L;\n\t\t\tvar bottom = (632260 * m3 - 126452 * m2) * sub2 + 126452 * t;\n\t\t\tresult.push({ slope : top1 / bottom, intercept : top2 / bottom});\n\t\t}\n\t}\n\treturn result;\n};\nhsluv.Hsluv.maxSafeChromaForL = function(L) {\n\tvar bounds = hsluv.Hsluv.getBounds(L);\n\tvar min = Infinity;\n\tvar _g = 0;\n\twhile(_g < bounds.length) {\n\t\tvar bound = bounds[_g];\n\t\t++_g;\n\t\tvar length = hsluv.Geometry.distanceLineFromOrigin(bound);\n\t\tmin = Math.min(min,length);\n\t}\n\treturn min;\n};\nhsluv.Hsluv.maxChromaForLH = function(L,H) {\n\tvar hrad = H / 360 * Math.PI * 2;\n\tvar bounds = hsluv.Hsluv.getBounds(L);\n\tvar min = Infinity;\n\tvar _g = 0;\n\twhile(_g < bounds.length) {\n\t\tvar bound = bounds[_g];\n\t\t++_g;\n\t\tvar length = hsluv.Geometry.lengthOfRayUntilIntersect(hrad,bound);\n\t\tif(length >= 0) {\n\t\t\tmin = Math.min(min,length);\n\t\t}\n\t}\n\treturn min;\n};\nhsluv.Hsluv.dotProduct = function(a,b) {\n\tvar sum = 0;\n\tvar _g1 = 0;\n\tvar _g = a.length;\n\twhile(_g1 < _g) {\n\t\tvar i = _g1++;\n\t\tsum += a[i] * b[i];\n\t}\n\treturn sum;\n};\nhsluv.Hsluv.fromLinear = function(c) {\n\tif(c <= 0.0031308) {\n\t\treturn 12.92 * c;\n\t} else {\n\t\treturn 1.055 * Math.pow(c,0.416666666666666685) - 0.055;\n\t}\n};\nhsluv.Hsluv.toLinear = function(c) {\n\tif(c > 0.04045) {\n\t\treturn Math.pow((c + 0.055) / 1.055,2.4);\n\t} else {\n\t\treturn c / 12.92;\n\t}\n};\nhsluv.Hsluv.xyzToRgb = function(tuple) {\n\treturn [hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[0],tuple)),hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[1],tuple)),hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[2],tuple))];\n};\nhsluv.Hsluv.rgbToXyz = function(tuple) {\n\tvar rgbl = [hsluv.Hsluv.toLinear(tuple[0]),hsluv.Hsluv.toLinear(tuple[1]),hsluv.Hsluv.toLinear(tuple[2])];\n\treturn [hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[0],rgbl),hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[1],rgbl),hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[2],rgbl)];\n};\nhsluv.Hsluv.yToL = function(Y) {\n\tif(Y <= hsluv.Hsluv.epsilon) {\n\t\treturn Y / hsluv.Hsluv.refY * hsluv.Hsluv.kappa;\n\t} else {\n\t\treturn 116 * Math.pow(Y / hsluv.Hsluv.refY,0.333333333333333315) - 16;\n\t}\n};\nhsluv.Hsluv.lToY = function(L) {\n\tif(L <= 8) {\n\t\treturn hsluv.Hsluv.refY * L / hsluv.Hsluv.kappa;\n\t} else {\n\t\treturn hsluv.Hsluv.refY * Math.pow((L + 16) / 116,3);\n\t}\n};\nhsluv.Hsluv.xyzToLuv = function(tuple) {\n\tvar X = tuple[0];\n\tvar Y = tuple[1];\n\tvar Z = tuple[2];\n\tvar divider = X + 15 * Y + 3 * Z;\n\tvar varU = 4 * X;\n\tvar varV = 9 * Y;\n\tif(divider != 0) {\n\t\tvarU /= divider;\n\t\tvarV /= divider;\n\t} else {\n\t\tvarU = NaN;\n\t\tvarV = NaN;\n\t}\n\tvar L = hsluv.Hsluv.yToL(Y);\n\tif(L == 0) {\n\t\treturn [0,0,0];\n\t}\n\tvar U = 13 * L * (varU - hsluv.Hsluv.refU);\n\tvar V = 13 * L * (varV - hsluv.Hsluv.refV);\n\treturn [L,U,V];\n};\nhsluv.Hsluv.luvToXyz = function(tuple) {\n\tvar L = tuple[0];\n\tvar U = tuple[1];\n\tvar V = tuple[2];\n\tif(L == 0) {\n\t\treturn [0,0,0];\n\t}\n\tvar varU = U / (13 * L) + hsluv.Hsluv.refU;\n\tvar varV = V / (13 * L) + hsluv.Hsluv.refV;\n\tvar Y = hsluv.Hsluv.lToY(L);\n\tvar X = 0 - 9 * Y * varU / ((varU - 4) * varV - varU * varV);\n\tvar Z = (9 * Y - 15 * varV * Y - varV * X) / (3 * varV);\n\treturn [X,Y,Z];\n};\nhsluv.Hsluv.luvToLch = function(tuple) {\n\tvar L = tuple[0];\n\tvar U = tuple[1];\n\tvar V = tuple[2];\n\tvar C = Math.sqrt(U * U + V * V);\n\tvar H;\n\tif(C < 0.00000001) {\n\t\tH = 0;\n\t} else {\n\t\tvar Hrad = Math.atan2(V,U);\n\t\tH = Hrad * 180.0 / Math.PI;\n\t\tif(H < 0) {\n\t\t\tH = 360 + H;\n\t\t}\n\t}\n\treturn [L,C,H];\n};\nhsluv.Hsluv.lchToLuv = function(tuple) {\n\tvar L = tuple[0];\n\tvar C = tuple[1];\n\tvar H = tuple[2];\n\tvar Hrad = H / 360.0 * 2 * Math.PI;\n\tvar U = Math.cos(Hrad) * C;\n\tvar V = Math.sin(Hrad) * C;\n\treturn [L,U,V];\n};\nhsluv.Hsluv.hsluvToLch = function(tuple) {\n\tvar H = tuple[0];\n\tvar S = tuple[1];\n\tvar L = tuple[2];\n\tif(L > 99.9999999) {\n\t\treturn [100,0,H];\n\t}\n\tif(L < 0.00000001) {\n\t\treturn [0,0,H];\n\t}\n\tvar max = hsluv.Hsluv.maxChromaForLH(L,H);\n\tvar C = max / 100 * S;\n\treturn [L,C,H];\n};\nhsluv.Hsluv.lchToHsluv = function(tuple) {\n\tvar L = tuple[0];\n\tvar C = tuple[1];\n\tvar H = tuple[2];\n\tif(L > 99.9999999) {\n\t\treturn [H,0,100];\n\t}\n\tif(L < 0.00000001) {\n\t\treturn [H,0,0];\n\t}\n\tvar max = hsluv.Hsluv.maxChromaForLH(L,H);\n\tvar S = C / max * 100;\n\treturn [H,S,L];\n};\nhsluv.Hsluv.hpluvToLch = function(tuple) {\n\tvar H = tuple[0];\n\tvar S = tuple[1];\n\tvar L = tuple[2];\n\tif(L > 99.9999999) {\n\t\treturn [100,0,H];\n\t}\n\tif(L < 0.00000001) {\n\t\treturn [0,0,H];\n\t}\n\tvar max = hsluv.Hsluv.maxSafeChromaForL(L);\n\tvar C = max / 100 * S;\n\treturn [L,C,H];\n};\nhsluv.Hsluv.lchToHpluv = function(tuple) {\n\tvar L = tuple[0];\n\tvar C = tuple[1];\n\tvar H = tuple[2];\n\tif(L > 99.9999999) {\n\t\treturn [H,0,100];\n\t}\n\tif(L < 0.00000001) {\n\t\treturn [H,0,0];\n\t}\n\tvar max = hsluv.Hsluv.maxSafeChromaForL(L);\n\tvar S = C / max * 100;\n\treturn [H,S,L];\n};\nhsluv.Hsluv.rgbToHex = function(tuple) {\n\tvar h = \"#\";\n\tvar _g = 0;\n\twhile(_g < 3) {\n\t\tvar i = _g++;\n\t\tvar chan = tuple[i];\n\t\tvar c = Math.round(chan * 255);\n\t\tvar digit2 = c % 16;\n\t\tvar digit1 = (c - digit2) / 16 | 0;\n\t\th += hsluv.Hsluv.hexChars.charAt(digit1) + hsluv.Hsluv.hexChars.charAt(digit2);\n\t}\n\treturn h;\n};\nhsluv.Hsluv.hexToRgb = function(hex) {\n\thex = hex.toLowerCase();\n\tvar ret = [];\n\tvar _g = 0;\n\twhile(_g < 3) {\n\t\tvar i = _g++;\n\t\tvar digit1 = hsluv.Hsluv.hexChars.indexOf(hex.charAt(i * 2 + 1));\n\t\tvar digit2 = hsluv.Hsluv.hexChars.indexOf(hex.charAt(i * 2 + 2));\n\t\tvar n = digit1 * 16 + digit2;\n\t\tret.push(n / 255.0);\n\t}\n\treturn ret;\n};\nhsluv.Hsluv.lchToRgb = function(tuple) {\n\treturn hsluv.Hsluv.xyzToRgb(hsluv.Hsluv.luvToXyz(hsluv.Hsluv.lchToLuv(tuple)));\n};\nhsluv.Hsluv.rgbToLch = function(tuple) {\n\treturn hsluv.Hsluv.luvToLch(hsluv.Hsluv.xyzToLuv(hsluv.Hsluv.rgbToXyz(tuple)));\n};\nhsluv.Hsluv.hsluvToRgb = function(tuple) {\n\treturn hsluv.Hsluv.lchToRgb(hsluv.Hsluv.hsluvToLch(tuple));\n};\nhsluv.Hsluv.rgbToHsluv = function(tuple) {\n\treturn hsluv.Hsluv.lchToHsluv(hsluv.Hsluv.rgbToLch(tuple));\n};\nhsluv.Hsluv.hpluvToRgb = function(tuple) {\n\treturn hsluv.Hsluv.lchToRgb(hsluv.Hsluv.hpluvToLch(tuple));\n};\nhsluv.Hsluv.rgbToHpluv = function(tuple) {\n\treturn hsluv.Hsluv.lchToHpluv(hsluv.Hsluv.rgbToLch(tuple));\n};\nhsluv.Hsluv.hsluvToHex = function(tuple) {\n\treturn hsluv.Hsluv.rgbToHex(hsluv.Hsluv.hsluvToRgb(tuple));\n};\nhsluv.Hsluv.hpluvToHex = function(tuple) {\n\treturn hsluv.Hsluv.rgbToHex(hsluv.Hsluv.hpluvToRgb(tuple));\n};\nhsluv.Hsluv.hexToHsluv = function(s) {\n\treturn hsluv.Hsluv.rgbToHsluv(hsluv.Hsluv.hexToRgb(s));\n};\nhsluv.Hsluv.hexToHpluv = function(s) {\n\treturn hsluv.Hsluv.rgbToHpluv(hsluv.Hsluv.hexToRgb(s));\n};\nhsluv.Hsluv.m = [[3.240969941904521,-1.537383177570093,-0.498610760293],[-0.96924363628087,1.87596750150772,0.041555057407175],[0.055630079696993,-0.20397695888897,1.056971514242878]];\nhsluv.Hsluv.minv = [[0.41239079926595,0.35758433938387,0.18048078840183],[0.21263900587151,0.71516867876775,0.072192315360733],[0.019330818715591,0.11919477979462,0.95053215224966]];\nhsluv.Hsluv.refY = 1.0;\nhsluv.Hsluv.refU = 0.19783000664283;\nhsluv.Hsluv.refV = 0.46831999493879;\nhsluv.Hsluv.kappa = 903.2962962;\nhsluv.Hsluv.epsilon = 0.0088564516;\nhsluv.Hsluv.hexChars = \"0123456789abcdef\";\nvar root = {\n    \"hsluvToRgb\": hsluv.Hsluv.hsluvToRgb,\n    \"rgbToHsluv\": hsluv.Hsluv.rgbToHsluv,\n    \"hpluvToRgb\": hsluv.Hsluv.hpluvToRgb,\n    \"rgbToHpluv\": hsluv.Hsluv.rgbToHpluv,\n    \"hsluvToHex\": hsluv.Hsluv.hsluvToHex,\n    \"hexToHsluv\": hsluv.Hsluv.hexToHsluv,\n    \"hpluvToHex\": hsluv.Hsluv.hpluvToHex,\n    \"hexToHpluv\": hsluv.Hsluv.hexToHpluv,\n    \"lchToHpluv\": hsluv.Hsluv.lchToHpluv,\n    \"hpluvToLch\": hsluv.Hsluv.hpluvToLch,\n    \"lchToHsluv\": hsluv.Hsluv.lchToHsluv,\n    \"hsluvToLch\": hsluv.Hsluv.hsluvToLch,\n    \"lchToLuv\": hsluv.Hsluv.lchToLuv,\n    \"luvToLch\": hsluv.Hsluv.luvToLch,\n    \"xyzToLuv\": hsluv.Hsluv.xyzToLuv,\n    \"luvToXyz\": hsluv.Hsluv.luvToXyz,\n    \"xyzToRgb\": hsluv.Hsluv.xyzToRgb,\n    \"rgbToXyz\": hsluv.Hsluv.rgbToXyz,\n    \"lchToRgb\": hsluv.Hsluv.lchToRgb,\n    \"rgbToLch\": hsluv.Hsluv.rgbToLch\n};\n\nmodule.exports = root;\n","\n\n    /**\n     * Safer Object.hasOwnProperty\n     */\n     function hasOwn(obj, prop){\n         return Object.prototype.hasOwnProperty.call(obj, prop);\n     }\n\n     module.exports = hasOwn;\n\n\n","var hasOwn = require('./hasOwn');\n\n    var _hasDontEnumBug,\n        _dontEnums;\n\n    function checkDontEnum(){\n        _dontEnums = [\n                'toString',\n                'toLocaleString',\n                'valueOf',\n                'hasOwnProperty',\n                'isPrototypeOf',\n                'propertyIsEnumerable',\n                'constructor'\n            ];\n\n        _hasDontEnumBug = true;\n\n        for (var key in {'toString': null}) {\n            _hasDontEnumBug = false;\n        }\n    }\n\n    /**\n     * Similar to Array/forEach but works over object properties and fixes Don't\n     * Enum bug on IE.\n     * based on: http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\n     */\n    function forIn(obj, fn, thisObj){\n        var key, i = 0;\n        // no need to check if argument is a real object that way we can use\n        // it for arrays, functions, date, etc.\n\n        //post-pone check till needed\n        if (_hasDontEnumBug == null) checkDontEnum();\n\n        for (key in obj) {\n            if (exec(fn, obj, key, thisObj) === false) {\n                break;\n            }\n        }\n\n\n        if (_hasDontEnumBug) {\n            var ctor = obj.constructor,\n                isProto = !!ctor && obj === ctor.prototype;\n\n            while (key = _dontEnums[i++]) {\n                // For constructor, if it is a prototype object the constructor\n                // is always non-enumerable unless defined otherwise (and\n                // enumerated above).  For non-prototype objects, it will have\n                // to be defined on this object, since it cannot be defined on\n                // any prototype objects.\n                //\n                // For other [[DontEnum]] properties, check if the value is\n                // different than Object prototype value.\n                if (\n                    (key !== 'constructor' ||\n                        (!isProto && hasOwn(obj, key))) &&\n                    obj[key] !== Object.prototype[key]\n                ) {\n                    if (exec(fn, obj, key, thisObj) === false) {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    function exec(fn, obj, key, thisObj){\n        return fn.call(thisObj, obj[key], key, obj);\n    }\n\n    module.exports = forIn;\n\n\n","var forIn = require('./forIn');\n\n    /**\n     * return a list of all enumerable properties that have function values\n     */\n    function functions(obj){\n        var keys = [];\n        forIn(obj, function(val, key){\n            if (typeof val === 'function'){\n                keys.push(key);\n            }\n        });\n        return keys.sort();\n    }\n\n    module.exports = functions;\n\n\n","\n\n    /**\n     * Create slice of source array or array-like object\n     */\n    function slice(arr, start, end){\n        var len = arr.length;\n\n        if (start == null) {\n            start = 0;\n        } else if (start < 0) {\n            start = Math.max(len + start, 0);\n        } else {\n            start = Math.min(start, len);\n        }\n\n        if (end == null) {\n            end = len;\n        } else if (end < 0) {\n            end = Math.max(len + end, 0);\n        } else {\n            end = Math.min(end, len);\n        }\n\n        var result = [];\n        while (start < end) {\n            result.push(arr[start++]);\n        }\n\n        return result;\n    }\n\n    module.exports = slice;\n\n\n","var slice = require('../array/slice');\n\n    /**\n     * Return a function that will execute in the given context, optionally adding any additional supplied parameters to the beginning of the arguments collection.\n     * @param {Function} fn  Function.\n     * @param {object} context   Execution context.\n     * @param {rest} args    Arguments (0...n arguments).\n     * @return {Function} Wrapped Function.\n     */\n    function bind(fn, context, args){\n        var argsArr = slice(arguments, 2); //curried args\n        return function(){\n            return fn.apply(context, argsArr.concat(slice(arguments)));\n        };\n    }\n\n    module.exports = bind;\n\n\n","\n\n    /**\n     * Array forEach\n     */\n    function forEach(arr, callback, thisObj) {\n        if (arr == null) {\n            return;\n        }\n        var i = -1,\n            len = arr.length;\n        while (++i < len) {\n            // we iterate over sparse items since there is no way to make it\n            // work properly on IE 7-8. see #64\n            if ( callback.call(thisObj, arr[i], i, arr) === false ) {\n                break;\n            }\n        }\n    }\n\n    module.exports = forEach;\n\n\n","var functions = require('./functions');\nvar bind = require('../function/bind');\nvar forEach = require('../array/forEach');\nvar slice = require('../array/slice');\n\n    /**\n     * Binds methods of the object to be run in it's own context.\n     */\n    function bindAll(obj, rest_methodNames){\n        var keys = arguments.length > 1?\n                    slice(arguments, 1) : functions(obj);\n        forEach(keys, function(key){\n            obj[key] = bind(obj[key], obj);\n        });\n    }\n\n    module.exports = bindAll;\n\n\n","var hasOwn = require('./hasOwn');\nvar forIn = require('./forIn');\n\n    /**\n     * Similar to Array/forEach but works over object properties and fixes Don't\n     * Enum bug on IE.\n     * based on: http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\n     */\n    function forOwn(obj, fn, thisObj){\n        forIn(obj, function(val, key){\n            if (hasOwn(obj, key)) {\n                return fn.call(thisObj, obj[key], key, obj);\n            }\n        });\n    }\n\n    module.exports = forOwn;\n\n\n","\n\n    /**\n     * Returns the first argument provided to it.\n     */\n    function identity(val){\n        return val;\n    }\n\n    module.exports = identity;\n\n\n","\n\n    /**\n     * Returns a function that gets a property of the passed object\n     */\n    function prop(name){\n        return function(obj){\n            return obj[name];\n        };\n    }\n\n    module.exports = prop;\n\n\n","\n\n    var _rKind = /^\\[object (.*)\\]$/,\n        _toString = Object.prototype.toString,\n        UNDEF;\n\n    /**\n     * Gets the \"kind\" of value. (e.g. \"String\", \"Number\", etc)\n     */\n    function kindOf(val) {\n        if (val === null) {\n            return 'Null';\n        } else if (val === UNDEF) {\n            return 'Undefined';\n        } else {\n            return _rKind.exec( _toString.call(val) )[1];\n        }\n    }\n    module.exports = kindOf;\n\n","var kindOf = require('./kindOf');\n    /**\n     * Check if value is from a specific \"kind\".\n     */\n    function isKind(val, kind){\n        return kindOf(val) === kind;\n    }\n    module.exports = isKind;\n\n","var isKind = require('./isKind');\n    /**\n     */\n    var isArray = Array.isArray || function (val) {\n        return isKind(val, 'Array');\n    };\n    module.exports = isArray;\n\n","var forOwn = require('./forOwn');\nvar isArray = require('../lang/isArray');\n\n    function containsMatch(array, pattern) {\n        var i = -1, length = array.length;\n        while (++i < length) {\n            if (deepMatches(array[i], pattern)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    function matchArray(target, pattern) {\n        var i = -1, patternLength = pattern.length;\n        while (++i < patternLength) {\n            if (!containsMatch(target, pattern[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function matchObject(target, pattern) {\n        var result = true;\n        forOwn(pattern, function(val, key) {\n            if (!deepMatches(target[key], val)) {\n                // Return false to break out of forOwn early\n                return (result = false);\n            }\n        });\n\n        return result;\n    }\n\n    /**\n     * Recursively check if the objects match.\n     */\n    function deepMatches(target, pattern){\n        if (target && typeof target === 'object') {\n            if (isArray(target) && isArray(pattern)) {\n                return matchArray(target, pattern);\n            } else {\n                return matchObject(target, pattern);\n            }\n        } else {\n            return target === pattern;\n        }\n    }\n\n    module.exports = deepMatches;\n\n\n","var identity = require('./identity');\nvar prop = require('./prop');\nvar deepMatches = require('../object/deepMatches');\n\n    /**\n     * Converts argument into a valid iterator.\n     * Used internally on most array/object/collection methods that receives a\n     * callback/iterator providing a shortcut syntax.\n     */\n    function makeIterator(src, thisObj){\n        if (src == null) {\n            return identity;\n        }\n        switch(typeof src) {\n            case 'function':\n                // function is the first to improve perf (most common case)\n                // also avoid using `Function#call` if not needed, which boosts\n                // perf a lot in some cases\n                return (typeof thisObj !== 'undefined')? function(val, i, arr){\n                    return src.call(thisObj, val, i, arr);\n                } : src;\n            case 'object':\n                return function(val){\n                    return deepMatches(val, src);\n                };\n            case 'string':\n            case 'number':\n                return prop(src);\n        }\n    }\n\n    module.exports = makeIterator;\n\n\n","var forOwn = require('./forOwn');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Object some\n     */\n    function some(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var result = false;\n        forOwn(obj, function(val, key) {\n            if (callback(val, key, obj)) {\n                result = true;\n                return false; // break\n            }\n        });\n        return result;\n    }\n\n    module.exports = some;\n\n\n","var some = require('./some');\n\n    /**\n     * Check if object contains value\n     */\n    function contains(obj, needle) {\n        return some(obj, function(val) {\n            return (val === needle);\n        });\n    }\n    module.exports = contains;\n\n\n","\n\n    /**\n     * Checks if the value is created by the `Object` constructor.\n     */\n    function isPlainObject(value) {\n        return (!!value && typeof value === 'object' &&\n            value.constructor === Object);\n    }\n\n    module.exports = isPlainObject;\n\n\n","var forOwn = require('./forOwn');\nvar isPlainObject = require('../lang/isPlainObject');\n\n    /**\n     * Deeply copy missing properties in the target from the defaults.\n     */\n    function deepFillIn(target, defaults){\n        var i = 0,\n            n = arguments.length,\n            obj;\n\n        while(++i < n) {\n            obj = arguments[i];\n            if (obj) {\n                // jshint loopfunc: true\n                forOwn(obj, function(newValue, key) {\n                    var curValue = target[key];\n                    if (curValue == null) {\n                        target[key] = newValue;\n                    } else if (isPlainObject(curValue) &&\n                               isPlainObject(newValue)) {\n                        deepFillIn(curValue, newValue);\n                    }\n                });\n            }\n        }\n\n        return target;\n    }\n\n    module.exports = deepFillIn;\n\n\n","var forOwn = require('./forOwn');\nvar isPlainObject = require('../lang/isPlainObject');\n\n    /**\n     * Mixes objects into the target object, recursively mixing existing child\n     * objects.\n     */\n    function deepMixIn(target, objects) {\n        var i = 0,\n            n = arguments.length,\n            obj;\n\n        while(++i < n){\n            obj = arguments[i];\n            if (obj) {\n                forOwn(obj, copyProp, target);\n            }\n        }\n\n        return target;\n    }\n\n    function copyProp(val, key) {\n        var existing = this[key];\n        if (isPlainObject(val) && isPlainObject(existing)) {\n            deepMixIn(existing, val);\n        } else {\n            this[key] = val;\n        }\n    }\n\n    module.exports = deepMixIn;\n\n\n","var forOwn = require('./forOwn');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Object every\n     */\n    function every(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var result = true;\n        forOwn(obj, function(val, key) {\n            // we consider any falsy values as \"false\" on purpose so shorthand\n            // syntax can be used to check property existence\n            if (!callback(val, key, obj)) {\n                result = false;\n                return false; // break\n            }\n        });\n        return result;\n    }\n\n    module.exports = every;\n\n\n","var isKind = require('./isKind');\n    /**\n     */\n    function isObject(val) {\n        return isKind(val, 'Object');\n    }\n    module.exports = isObject;\n\n","\n\n    /**\n     * Check if both arguments are egal.\n     */\n    function is(x, y){\n        // implementation borrowed from harmony:egal spec\n        if (x === y) {\n          // 0 === -0, but they are not identical\n          return x !== 0 || 1 / x === 1 / y;\n        }\n\n        // NaN !== NaN, but they are identical.\n        // NaNs are the only non-reflexive value, i.e., if x !== x,\n        // then x is a NaN.\n        // isNaN is broken: it converts its argument to number, so\n        // isNaN(\"foo\") => true\n        return x !== x && y !== y;\n    }\n\n    module.exports = is;\n\n\n","var hasOwn = require('./hasOwn');\nvar every = require('./every');\nvar isObject = require('../lang/isObject');\nvar is = require('../lang/is');\n\n    // Makes a function to compare the object values from the specified compare\n    // operation callback.\n    function makeCompare(callback) {\n        return function(value, key) {\n            return hasOwn(this, key) && callback(value, this[key]);\n        };\n    }\n\n    function checkProperties(value, key) {\n        return hasOwn(this, key);\n    }\n\n    /**\n     * Checks if two objects have the same keys and values.\n     */\n    function equals(a, b, callback) {\n        callback = callback || is;\n\n        if (!isObject(a) || !isObject(b)) {\n            return callback(a, b);\n        }\n\n        return (every(a, makeCompare(callback), b) &&\n                every(b, checkProperties, a));\n    }\n\n    module.exports = equals;\n\n","var forEach = require('../array/forEach');\nvar slice = require('../array/slice');\nvar forOwn = require('./forOwn');\n\n    /**\n     * Copy missing properties in the obj from the defaults.\n     */\n    function fillIn(obj, var_defaults){\n        forEach(slice(arguments, 1), function(base){\n            forOwn(base, function(val, key){\n                if (obj[key] == null) {\n                    obj[key] = val;\n                }\n            });\n        });\n        return obj;\n    }\n\n    module.exports = fillIn;\n\n\n","var forOwn = require('./forOwn');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Creates a new object with all the properties where the callback returns\n     * true.\n     */\n    function filterValues(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var output = {};\n        forOwn(obj, function(value, key, obj) {\n            if (callback(value, key, obj)) {\n                output[key] = value;\n            }\n        });\n\n        return output;\n    }\n    module.exports = filterValues;\n\n","var some = require('./some');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Returns first item that matches criteria\n     */\n    function find(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var result;\n        some(obj, function(value, key, obj) {\n            if (callback(value, key, obj)) {\n                result = value;\n                return true; //break\n            }\n        });\n        return result;\n    }\n\n    module.exports = find;\n\n\n","var forOwn = require('./forOwn');\nvar isPlainObject = require('../lang/isPlainObject');\n\n    /*\n     * Helper function to flatten to a destination object.\n     * Used to remove the need to create intermediate objects while flattening.\n     */\n    function flattenTo(obj, result, prefix, level) {\n        forOwn(obj, function (value, key) {\n            var nestedPrefix = prefix ? prefix + '.' + key : key;\n\n            if (level !== 0 && isPlainObject(value)) {\n                flattenTo(value, result, nestedPrefix, level - 1);\n            } else {\n                result[nestedPrefix] = value;\n            }\n        });\n\n        return result;\n    }\n\n    /**\n     * Recursively flattens an object.\n     * A new object containing all the elements is returned.\n     * If level is specified, it will only flatten up to that level.\n     */\n    function flatten(obj, level) {\n        if (obj == null) {\n            return {};\n        }\n\n        level = level == null ? -1 : level;\n        return flattenTo(obj, {}, '', level);\n    }\n\n    module.exports = flatten;\n\n\n","\n\n    /**\n     * Checks if the object is a primitive\n     */\n    function isPrimitive(value) {\n        // Using switch fallthrough because it's simple to read and is\n        // generally fast: http://jsperf.com/testing-value-is-primitive/5\n        switch (typeof value) {\n            case \"string\":\n            case \"number\":\n            case \"boolean\":\n                return true;\n        }\n\n        return value == null;\n    }\n\n    module.exports = isPrimitive;\n\n\n","var isPrimitive = require('../lang/isPrimitive');\n\n    /**\n     * get \"nested\" object property\n     */\n    function get(obj, prop){\n        var parts = prop.split('.'),\n            last = parts.pop();\n\n        while (prop = parts.shift()) {\n            obj = obj[prop];\n            if (obj == null) return;\n        }\n\n        return obj[last];\n    }\n\n    module.exports = get;\n\n\n","var get = require('./get');\n\n    var UNDEF;\n\n    /**\n     * Check if object has nested property.\n     */\n    function has(obj, prop){\n        return get(obj, prop) !== UNDEF;\n    }\n\n    module.exports = has;\n\n\n\n","var forOwn = require('./forOwn');\n\n    /**\n     * Get object keys\n     */\n     var keys = Object.keys || function (obj) {\n            var keys = [];\n            forOwn(obj, function(val, key){\n                keys.push(key);\n            });\n            return keys;\n        };\n\n    module.exports = keys;\n\n\n","var forOwn = require('./forOwn');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Creates a new object where all the values are the result of calling\n     * `callback`.\n     */\n    function mapValues(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        var output = {};\n        forOwn(obj, function(val, key, obj) {\n            output[key] = callback(val, key, obj);\n        });\n\n        return output;\n    }\n    module.exports = mapValues;\n\n","var forOwn = require('./forOwn');\n\n    /**\n     * checks if a object contains all given properties/values\n     */\n    function matches(target, props){\n        // can't use \"object/every\" because of circular dependency\n        var result = true;\n        forOwn(props, function(val, key){\n            if (target[key] !== val) {\n                // break loop at first difference\n                return (result = false);\n            }\n        });\n        return result;\n    }\n\n    module.exports = matches;\n\n\n","var makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Return maximum value inside array\n     */\n    function max(arr, iterator, thisObj){\n        if (arr == null || !arr.length) {\n            return Infinity;\n        } else if (arr.length && !iterator) {\n            return Math.max.apply(Math, arr);\n        } else {\n            iterator = makeIterator(iterator, thisObj);\n            var result,\n                compare = -Infinity,\n                value,\n                temp;\n\n            var i = -1, len = arr.length;\n            while (++i < len) {\n                value = arr[i];\n                temp = iterator(value, i, arr);\n                if (temp > compare) {\n                    compare = temp;\n                    result = value;\n                }\n            }\n\n            return result;\n        }\n    }\n\n    module.exports = max;\n\n\n","var forOwn = require('./forOwn');\n\n    /**\n     * Get object values\n     */\n    function values(obj) {\n        var vals = [];\n        forOwn(obj, function(val, key){\n            vals.push(val);\n        });\n        return vals;\n    }\n\n    module.exports = values;\n\n\n","var arrMax = require('../array/max');\nvar values = require('./values');\n\n    /**\n     * Returns maximum value inside object.\n     */\n    function max(obj, compareFn) {\n        return arrMax(values(obj), compareFn);\n    }\n\n    module.exports = max;\n\n","var forOwn = require('./forOwn');\n\n    /**\n    * Combine properties from all the objects into first one.\n    * - This method affects target object in place, if you want to create a new Object pass an empty object as first param.\n    * @param {object} target    Target Object\n    * @param {...object} objects    Objects to be combined (0...n objects).\n    * @return {object} Target Object.\n    */\n    function mixIn(target, objects){\n        var i = 0,\n            n = arguments.length,\n            obj;\n        while(++i < n){\n            obj = arguments[i];\n            if (obj != null) {\n                forOwn(obj, copyProp, target);\n            }\n        }\n        return target;\n    }\n\n    function copyProp(val, key){\n        this[key] = val;\n    }\n\n    module.exports = mixIn;\n\n","var kindOf = require('./kindOf');\nvar isPlainObject = require('./isPlainObject');\nvar mixIn = require('../object/mixIn');\n\n    /**\n     * Clone native types.\n     */\n    function clone(val){\n        switch (kindOf(val)) {\n            case 'Object':\n                return cloneObject(val);\n            case 'Array':\n                return cloneArray(val);\n            case 'RegExp':\n                return cloneRegExp(val);\n            case 'Date':\n                return cloneDate(val);\n            default:\n                return val;\n        }\n    }\n\n    function cloneObject(source) {\n        if (isPlainObject(source)) {\n            return mixIn({}, source);\n        } else {\n            return source;\n        }\n    }\n\n    function cloneRegExp(r) {\n        var flags = '';\n        flags += r.multiline ? 'm' : '';\n        flags += r.global ? 'g' : '';\n        flags += r.ignoreCase ? 'i' : '';\n        return new RegExp(r.source, flags);\n    }\n\n    function cloneDate(date) {\n        return new Date(+date);\n    }\n\n    function cloneArray(arr) {\n        return arr.slice();\n    }\n\n    module.exports = clone;\n\n\n","var clone = require('./clone');\nvar forOwn = require('../object/forOwn');\nvar kindOf = require('./kindOf');\nvar isPlainObject = require('./isPlainObject');\n\n    /**\n     * Recursively clone native types.\n     */\n    function deepClone(val, instanceClone) {\n        switch ( kindOf(val) ) {\n            case 'Object':\n                return cloneObject(val, instanceClone);\n            case 'Array':\n                return cloneArray(val, instanceClone);\n            default:\n                return clone(val);\n        }\n    }\n\n    function cloneObject(source, instanceClone) {\n        if (isPlainObject(source)) {\n            var out = {};\n            forOwn(source, function(val, key) {\n                this[key] = deepClone(val, instanceClone);\n            }, out);\n            return out;\n        } else if (instanceClone) {\n            return instanceClone(source);\n        } else {\n            return source;\n        }\n    }\n\n    function cloneArray(arr, instanceClone) {\n        var out = [],\n            i = -1,\n            n = arr.length,\n            val;\n        while (++i < n) {\n            out[i] = deepClone(arr[i], instanceClone);\n        }\n        return out;\n    }\n\n    module.exports = deepClone;\n\n\n\n","var hasOwn = require('./hasOwn');\nvar deepClone = require('../lang/deepClone');\nvar isObject = require('../lang/isObject');\n\n    /**\n     * Deep merge objects.\n     */\n    function merge() {\n        var i = 1,\n            key, val, obj, target;\n\n        // make sure we don't modify source element and it's properties\n        // objects are passed by reference\n        target = deepClone( arguments[0] );\n\n        while (obj = arguments[i++]) {\n            for (key in obj) {\n                if ( ! hasOwn(obj, key) ) {\n                    continue;\n                }\n\n                val = obj[key];\n\n                if ( isObject(val) && isObject(target[key]) ){\n                    // inception, deep merge objects\n                    target[key] = merge(target[key], val);\n                } else {\n                    // make sure arrays, regexp, date, objects are cloned\n                    target[key] = deepClone(val);\n                }\n\n            }\n        }\n\n        return target;\n    }\n\n    module.exports = merge;\n\n\n","var makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Return minimum value inside array\n     */\n    function min(arr, iterator, thisObj){\n        if (arr == null || !arr.length) {\n            return -Infinity;\n        } else if (arr.length && !iterator) {\n            return Math.min.apply(Math, arr);\n        } else {\n            iterator = makeIterator(iterator, thisObj);\n            var result,\n                compare = Infinity,\n                value,\n                temp;\n\n            var i = -1, len = arr.length;\n            while (++i < len) {\n                value = arr[i];\n                temp = iterator(value, i, arr);\n                if (temp < compare) {\n                    compare = temp;\n                    result = value;\n                }\n            }\n\n            return result;\n        }\n    }\n\n    module.exports = min;\n\n\n","var arrMin = require('../array/min');\nvar values = require('./values');\n\n    /**\n     * Returns minimum value inside object.\n     */\n    function min(obj, iterator) {\n        return arrMin(values(obj), iterator);\n    }\n\n    module.exports = min;\n\n","var forEach = require('../array/forEach');\n\n    /**\n     * Create nested object if non-existent\n     */\n    function namespace(obj, path){\n        if (!path) return obj;\n        forEach(path.split('.'), function(key){\n            if (!obj[key]) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        });\n        return obj;\n    }\n\n    module.exports = namespace;\n\n\n","\n\n    /**\n     * Array.indexOf\n     */\n    function indexOf(arr, item, fromIndex) {\n        fromIndex = fromIndex || 0;\n        if (arr == null) {\n            return -1;\n        }\n\n        var len = arr.length,\n            i = fromIndex < 0 ? len + fromIndex : fromIndex;\n        while (i < len) {\n            // we iterate over sparse items since there is no way to make it\n            // work properly on IE 7-8. see #64\n            if (arr[i] === item) {\n                return i;\n            }\n\n            i++;\n        }\n\n        return -1;\n    }\n\n    module.exports = indexOf;\n\n","var indexOf = require('./indexOf');\n\n    /**\n     * If array contains values.\n     */\n    function contains(arr, val) {\n        return indexOf(arr, val) !== -1;\n    }\n    module.exports = contains;\n\n","var slice = require('../array/slice');\nvar contains = require('../array/contains');\n\n    /**\n     * Return a copy of the object, filtered to only contain properties except the blacklisted keys.\n     */\n    function omit(obj, var_keys){\n        var keys = typeof arguments[1] !== 'string'? arguments[1] : slice(arguments, 1),\n            out = {};\n\n        for (var property in obj) {\n            if (obj.hasOwnProperty(property) && !contains(keys, property)) {\n                out[property] = obj[property];\n            }\n        }\n        return out;\n    }\n\n    module.exports = omit;\n\n\n","var slice = require('../array/slice');\n\n    /**\n     * Return a copy of the object, filtered to only have values for the whitelisted keys.\n     */\n    function pick(obj, var_keys){\n        var keys = typeof arguments[1] !== 'string'? arguments[1] : slice(arguments, 1),\n            out = {},\n            i = 0, key;\n        while (key = keys[i++]) {\n            out[key] = obj[key];\n        }\n        return out;\n    }\n\n    module.exports = pick;\n\n\n","var map = require('./map');\nvar prop = require('../function/prop');\n\n    /**\n     * Extract a list of property values.\n     */\n    function pluck(obj, propName){\n        return map(obj, prop(propName));\n    }\n\n    module.exports = pluck;\n\n\n","var forOwn = require('./forOwn');\n\n    /**\n     * Get object size\n     */\n    function size(obj) {\n        var count = 0;\n        forOwn(obj, function(){\n            count++;\n        });\n        return count;\n    }\n\n    module.exports = size;\n\n\n","var forOwn = require('./forOwn');\nvar size = require('./size');\n\n    /**\n     * Object reduce\n     */\n    function reduce(obj, callback, memo, thisObj) {\n        var initial = arguments.length > 2;\n\n        if (!size(obj) && !initial) {\n            throw new Error('reduce of empty object with no initial value');\n        }\n\n        forOwn(obj, function(value, key, list) {\n            if (!initial) {\n                memo = value;\n                initial = true;\n            }\n            else {\n                memo = callback.call(thisObj, memo, value, key, list);\n            }\n        });\n\n        return memo;\n    }\n\n    module.exports = reduce;\n\n\n","var filter = require('./filter');\nvar makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Object reject\n     */\n    function reject(obj, callback, thisObj) {\n        callback = makeIterator(callback, thisObj);\n        return filter(obj, function(value, index, obj) {\n            return !callback(value, index, obj);\n        }, thisObj);\n    }\n\n    module.exports = reject;\n\n\n","var isKind = require('./isKind');\n    /**\n     */\n    function isFunction(val) {\n        return isKind(val, 'Function');\n    }\n    module.exports = isFunction;\n\n","var isFunction = require('../lang/isFunction');\n\n    function result(obj, prop) {\n        var property = obj[prop];\n\n        if(property === undefined) {\n            return;\n        }\n\n        return isFunction(property) ? property.call(obj) : property;\n    }\n\n    module.exports = result;\n\n","var namespace = require('./namespace');\n\n    /**\n     * set \"nested\" object property\n     */\n    function set(obj, prop, val){\n        var parts = (/^(.+)\\.(.+)$/).exec(prop);\n        if (parts){\n            namespace(obj, parts[1])[parts[2]] = val;\n        } else {\n            obj[prop] = val;\n        }\n    }\n\n    module.exports = set;\n\n\n","var has = require('./has');\n\n    /**\n     * Unset object property.\n     */\n    function unset(obj, prop){\n        if (has(obj, prop)) {\n            var parts = prop.split('.'),\n                last = parts.pop();\n            while (prop = parts.shift()) {\n                obj = obj[prop];\n            }\n            return (delete obj[last]);\n\n        } else {\n            // if property doesn't exist treat as deleted\n            return true;\n        }\n    }\n\n    module.exports = unset;\n\n\n","\n\n//automatically generated, do not edit!\n//run `node build` instead\nmodule.exports = {\n    'bindAll' : require('./object/bindAll'),\n    'contains' : require('./object/contains'),\n    'deepFillIn' : require('./object/deepFillIn'),\n    'deepMatches' : require('./object/deepMatches'),\n    'deepMixIn' : require('./object/deepMixIn'),\n    'equals' : require('./object/equals'),\n    'every' : require('./object/every'),\n    'fillIn' : require('./object/fillIn'),\n    'filter' : require('./object/filter'),\n    'find' : require('./object/find'),\n    'flatten' : require('./object/flatten'),\n    'forIn' : require('./object/forIn'),\n    'forOwn' : require('./object/forOwn'),\n    'functions' : require('./object/functions'),\n    'get' : require('./object/get'),\n    'has' : require('./object/has'),\n    'hasOwn' : require('./object/hasOwn'),\n    'keys' : require('./object/keys'),\n    'map' : require('./object/map'),\n    'matches' : require('./object/matches'),\n    'max' : require('./object/max'),\n    'merge' : require('./object/merge'),\n    'min' : require('./object/min'),\n    'mixIn' : require('./object/mixIn'),\n    'namespace' : require('./object/namespace'),\n    'omit' : require('./object/omit'),\n    'pick' : require('./object/pick'),\n    'pluck' : require('./object/pluck'),\n    'reduce' : require('./object/reduce'),\n    'reject' : require('./object/reject'),\n    'result' : require('./object/result'),\n    'set' : require('./object/set'),\n    'size' : require('./object/size'),\n    'some' : require('./object/some'),\n    'unset' : require('./object/unset'),\n    'values' : require('./object/values')\n};\n\n\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _object = require(\"mout/object\");\n\n// CIE 15-2004 Colorimetry, 3rd Edition\nvar coordinates = {\n\tA: { x: 0.44758, y: 0.40745 }, // tungsten lamp\n\tC: { x: 0.31006, y: 0.31616 }, // average daylight\n\tD50: { x: 0.34567, y: 0.35851 }, // horizon light\n\tD65: { x: 0.31272, y: 0.32903 }, // noon daylight\n\tD55: { x: 0.33243, y: 0.34744 }, // mid-morning / mid-afternoon daylight\n\tD75: { x: 0.29903, y: 0.31488 } // north sky daylight\n};\n\nvar illuminants = (0, _object.map)(coordinates, function (v) {\n\tvar X = 100 * (v.x / v.y),\n\t    Y = 100,\n\t    Z = 100 * (1 - v.x - v.y) / v.y;\n\treturn [X, Y, Z];\n});\n\nexports.default = illuminants;\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nvar _Math = Math;\nvar pow = _Math.pow;\nvar sign = _Math.sign;\nvar abs = _Math.abs;\n\nvar sRgbGamma = {\n\tdecode: function decode(v) {\n\t\treturn v <= 0.04045 ? v / 12.92 : pow((v + 0.055) / 1.055, 2.4);\n\t},\n\tencode: function encode(v) {\n\t\treturn v <= 0.0031308 ? 12.92 * v : 1.055 * pow(v, 1 / 2.4) - 0.055;\n\t}\n};\n\nvar proPhotoGamma = {\n\tencode: function encode(v) {\n\t\treturn v < 0.001953125 ? 16 * v : pow(v, 1 / 1.8);\n\t},\n\tdecode: function decode(v) {\n\t\treturn v < 16 * 0.001953125 ? v / 16 : pow(v, 1.8);\n\t}\n};\n\nfunction simpleGamma(g) {\n\treturn {\n\t\tdecode: function decode(v) {\n\t\t\treturn sign(v) * pow(abs(v), g);\n\t\t},\n\t\tencode: function encode(v) {\n\t\t\treturn sign(v) * pow(abs(v), 1 / g);\n\t\t}\n\t};\n}\n\nvar workspaces = {\n\t\"sRGB\": {\n\t\tr: { x: 0.64, y: 0.33 },\n\t\tg: { x: 0.30, y: 0.60 },\n\t\tb: { x: 0.15, y: 0.06 },\n\t\tgamma: sRgbGamma\n\t},\n\t\"Adobe RGB\": {\n\t\tr: { x: 0.64, y: 0.33 },\n\t\tg: { x: 0.21, y: 0.71 },\n\t\tb: { x: 0.15, y: 0.06 },\n\t\tgamma: simpleGamma(2.2)\n\t},\n\t\"Wide Gamut RGB\": {\n\t\tr: { x: 0.7347, y: 0.2653 },\n\t\tg: { x: 0.1152, y: 0.8264 },\n\t\tb: { x: 0.1566, y: 0.0177 },\n\t\tgamma: simpleGamma(563 / 256)\n\t},\n\t\"ProPhoto RGB\": {\n\t\tr: { x: 0.7347, y: 0.2653 },\n\t\tg: { x: 0.1596, y: 0.8404 },\n\t\tb: { x: 0.0366, y: 0.0001 },\n\t\tgamma: proPhotoGamma\n\t}\n};\n\nexports.default = workspaces;\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n// 3x3 matrices operations\n\nfunction transpose(M) {\n\treturn [[M[0][0], M[1][0], M[2][0]], [M[0][1], M[1][1], M[2][1]], [M[0][2], M[1][2], M[2][2]]];\n}\n\nfunction determinant(M) {\n\treturn M[0][0] * (M[2][2] * M[1][1] - M[2][1] * M[1][2]) + M[1][0] * (M[2][1] * M[0][2] - M[2][2] * M[0][1]) + M[2][0] * (M[1][2] * M[0][1] - M[1][1] * M[0][2]);\n}\n\nfunction inverse(M) {\n\tvar c = 1 / determinant(M);\n\treturn [[(M[2][2] * M[1][1] - M[2][1] * M[1][2]) * c, (M[2][1] * M[0][2] - M[2][2] * M[0][1]) * c, (M[1][2] * M[0][1] - M[1][1] * M[0][2]) * c], [(M[2][0] * M[1][2] - M[2][2] * M[1][0]) * c, (M[2][2] * M[0][0] - M[2][0] * M[0][2]) * c, (M[1][0] * M[0][2] - M[1][2] * M[0][0]) * c], [(M[2][1] * M[1][0] - M[2][0] * M[1][1]) * c, (M[2][0] * M[0][1] - M[2][1] * M[0][0]) * c, (M[1][1] * M[0][0] - M[1][0] * M[0][1]) * c]];\n}\n\nfunction multiply(M, v) {\n\treturn [M[0][0] * v[0] + M[0][1] * v[1] + M[0][2] * v[2], M[1][0] * v[0] + M[1][1] * v[1] + M[1][2] * v[2], M[2][0] * v[0] + M[2][1] * v[1] + M[2][2] * v[2]];\n}\n\nfunction scalar(M, v) {\n\treturn [[M[0][0] * v[0], M[0][1] * v[1], M[0][2] * v[2]], [M[1][0] * v[0], M[1][1] * v[1], M[1][2] * v[2]], [M[2][0] * v[0], M[2][1] * v[1], M[2][2] * v[2]]];\n}\n\nfunction product(M, N) {\n\treturn [[M[0][0] * N[0][0] + M[0][1] * N[1][0] + M[0][2] * N[2][0], M[0][0] * N[0][1] + M[0][1] * N[1][1] + M[0][2] * N[2][1], M[0][0] * N[0][2] + M[0][1] * N[1][2] + M[0][2] * N[2][2]], [M[1][0] * N[0][0] + M[1][1] * N[1][0] + M[1][2] * N[2][0], M[1][0] * N[0][1] + M[1][1] * N[1][1] + M[1][2] * N[2][1], M[1][0] * N[0][2] + M[1][1] * N[1][2] + M[1][2] * N[2][2]], [M[2][0] * N[0][0] + M[2][1] * N[1][0] + M[2][2] * N[2][0], M[2][0] * N[0][1] + M[2][1] * N[1][1] + M[2][2] * N[2][1], M[2][0] * N[0][2] + M[2][1] * N[1][2] + M[2][2] * N[2][2]]];\n}\n\nexports.transpose = transpose;\nexports.determinant = determinant;\nexports.inverse = inverse;\nexports.multiply = multiply;\nexports.scalar = scalar;\nexports.product = product;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nvar _Math = Math;\nvar PI = _Math.PI;\n\nfunction fromRadian(r) {\n\tvar d = r * 180 / PI;\n\twhile (d < 0) {\n\t\td += 360;\n\t}\n\twhile (d > 360) {\n\t\td -= 360;\n\t}\n\treturn d;\n}\n\nfunction toRadian(d) {\n\tvar r = PI * d / 180;\n\twhile (r < 0) {\n\t\tr += 2 * PI;\n\t}\n\twhile (r > 2 * PI) {\n\t\tr -= 2 * PI;\n\t}\n\treturn r;\n}\n\nexports.fromRadian = fromRadian;\nexports.toRadian = toRadian;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nvar _Math = Math;\nvar round = _Math.round;\n\nfunction fromHex(hex) {\n\tif (hex[0] == \"#\") {\n\t\thex = hex.slice(1);\n\t}\n\tif (hex.length < 6) {\n\t\thex = hex.split(\"\").map(function (v) {\n\t\t\treturn v + v;\n\t\t}).join(\"\");\n\t}\n\treturn hex.match(/../g).map(function (v) {\n\t\treturn parseInt(v, 16) / 255;\n\t});\n}\n\nfunction toHex(RGB) {\n\tvar hex = RGB.map(function (v) {\n\t\tv = round(255 * v).toString(16);\n\t\tif (v.length < 2) {\n\t\t\tv = \"0\" + v;\n\t\t}\n\t\treturn v;\n\t}).join(\"\");\n\treturn \"#\" + hex;\n}\n\nexports.fromHex = fromHex;\nexports.toHex = toHex;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _matrix = require(\"./matrix\");\n\nvar matrix = _interopRequireWildcard(_matrix);\n\nvar _illuminant = require(\"./illuminant\");\n\nvar _illuminant2 = _interopRequireDefault(_illuminant);\n\nvar _workspace = require(\"./workspace\");\n\nvar _workspace2 = _interopRequireDefault(_workspace);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n// http://www.brucelindbloom.com/Eqn_RGB_XYZ_Matrix.html\nfunction Converter() {\n\tvar rgbSpace = arguments.length <= 0 || arguments[0] === undefined ? _workspace2.default.sRGB : arguments[0];\n\tvar whitePoint = arguments.length <= 1 || arguments[1] === undefined ? _illuminant2.default.D65 : arguments[1];\n\n\tvar primaries = [rgbSpace.r, rgbSpace.g, rgbSpace.b];\n\n\tvar M_P = matrix.transpose(primaries.map(function (v) {\n\t\tvar X = v.x / v.y,\n\t\t    Y = 1,\n\t\t    Z = (1 - v.x - v.y) / v.y;\n\t\treturn [X, Y, Z];\n\t}));\n\n\tvar gamma = rgbSpace.gamma,\n\t    M_S = matrix.multiply(matrix.inverse(M_P), whitePoint),\n\t    M_RGB_XYZ = matrix.scalar(M_P, M_S),\n\t    M_XYZ_RGB = matrix.inverse(M_RGB_XYZ);\n\n\treturn {\n\t\tfromRgb: function fromRgb(RGB) {\n\t\t\treturn matrix.multiply(M_RGB_XYZ, RGB.map(gamma.decode));\n\t\t},\n\t\ttoRgb: function toRgb(XYZ) {\n\t\t\treturn matrix.multiply(M_XYZ_RGB, XYZ).map(gamma.encode);\n\t\t}\n\t};\n}\n\nexports.default = Converter;\nmodule.exports = exports['default'];","var illuminant = require(\"./dist/illuminant\"),\n    workspace = require(\"./dist/workspace\"),\n    matrix = require(\"./dist/matrix\"),\n    degree = require(\"./dist/degree\"),\n    rgb = require(\"./dist/rgb\"),\n    xyz = require(\"./dist/xyz\");\n\nmodule.exports = {\n\tilluminant: illuminant,\n\tworkspace: workspace,\n\tmatrix: matrix,\n\tdegree: degree,\n\trgb: rgb,\n\txyz: xyz\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.cfs = exports.distance = exports.lerp = exports.corLerp = undefined;\n\nvar _object = require(\"mout/object\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar _Math = Math;\nvar abs = _Math.abs;\nvar pow = _Math.pow;\nvar sqrt = _Math.sqrt;\n\nvar hueMax = {\n\th: 360,\n\tH: 400\n};\n\nfunction corLerp(a, b, t, cor) {\n\tvar m = hueMax[cor];\n\tif (m) {\n\t\tvar d = abs(a - b);\n\t\tif (d > m / 2) {\n\t\t\tif (a > b) {\n\t\t\t\tb += m;\n\t\t\t} else {\n\t\t\t\ta += m;\n\t\t\t}\n\t\t}\n\t}\n\treturn ((1 - t) * a + t * b) % (m || Infinity);\n}\n\nfunction lerp(start, end, t) {\n\tvar CAM = {};\n\tfor (var cor in start) {\n\t\tCAM[cor] = corLerp(start[cor], end[cor], t, cor);\n\t}\n\treturn CAM;\n}\n\nfunction distance(start, end) {\n\tvar d = 0;\n\tfor (var cor in start) {\n\t\td += pow(start[cor] - end[cor], 2);\n\t}\n\treturn sqrt(d);\n}\n\nfunction cfs(str) {\n\treturn _object.merge.apply(undefined, _toConsumableArray(str.split(\"\").map(function (v) {\n\t\treturn _defineProperty({}, v, true);\n\t})));\n}\n\nexports.corLerp = corLerp;\nexports.lerp = lerp;\nexports.distance = distance;\nexports.cfs = cfs;","\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _ciebase = require(\"ciebase\");\n\nvar _helpers = require(\"./helpers\");\n\nfunction Gamut(xyz, cam) {\n\tvar epsilon = arguments.length <= 2 || arguments[2] === undefined ? 1e-6 : arguments[2];\n\tvar ZERO = -epsilon;\n\tvar ONE = 1 + epsilon;\n\tvar _Math = Math;\n\tvar min = _Math.min;\n\tvar max = _Math.max;\n\n\tvar _map = [\"000\", \"fff\"].map(function (hex) {\n\t\treturn cam.fromXyz(xyz.fromRgb(_ciebase.rgb.fromHex(hex)));\n\t});\n\n\tvar _map2 = _slicedToArray(_map, 2);\n\n\tvar camBlack = _map2[0];\n\tvar camWhite = _map2[1];\n\n\tfunction contains(CAM) {\n\t\tvar RGB = xyz.toRgb(cam.toXyz(CAM)),\n\t\t    isInside = RGB.map(function (v) {\n\t\t\treturn v >= ZERO && v <= ONE;\n\t\t}).reduce(function (a, b) {\n\t\t\treturn a && b;\n\t\t}, true);\n\t\treturn [isInside, RGB];\n\t}\n\n\tfunction limit(camIn, camOut) {\n\t\tvar prec = arguments.length <= 2 || arguments[2] === undefined ? 1e-3 : arguments[2];\n\n\t\twhile ((0, _helpers.distance)(camIn, camOut) > prec) {\n\t\t\tvar camMid = (0, _helpers.lerp)(camIn, camOut, 0.5);\n\n\t\t\tvar _contains = contains(camMid);\n\n\t\t\tvar _contains2 = _slicedToArray(_contains, 1);\n\n\t\t\tvar isInside = _contains2[0];\n\n\t\t\tif (isInside) {\n\t\t\t\tcamIn = camMid;\n\t\t\t} else {\n\t\t\t\tcamOut = camMid;\n\t\t\t}\n\t\t}\n\t\treturn camIn;\n\t}\n\n\tfunction spine(t) {\n\t\treturn (0, _helpers.lerp)(camBlack, camWhite, t);\n\t}\n\n\tfunction crop(RGB) {\n\t\treturn RGB.map(function (v) {\n\t\t\treturn max(ZERO, min(ONE, v));\n\t\t});\n\t}\n\n\treturn { contains: contains, limit: limit, spine: spine, crop: crop };\n}\n\nexports.default = Gamut;\nmodule.exports = exports['default'];","\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.toNotation = exports.fromNotation = exports.toHue = exports.fromHue = undefined;\n\nvar _helpers = require(\"./helpers\");\n\nvar _Math = Math;\nvar floor = _Math.floor;\n\nvar uniqueHues = [{ s: \"R\", h: 20.14, e: 0.8, H: 0 }, { s: \"Y\", h: 90.00, e: 0.7, H: 100 }, { s: \"G\", h: 164.25, e: 1.0, H: 200 }, { s: \"B\", h: 237.53, e: 1.2, H: 300 }, { s: \"R\", h: 380.14, e: 0.8, H: 400 }];\n\nvar hueSymbols = uniqueHues.map(function (v) {\n\treturn v.s;\n}).slice(0, -1).join(\"\");\n\nfunction fromHue(h) {\n\tif (h < uniqueHues[0].h) {\n\t\th += 360;\n\t}\n\tvar j = 0;\n\twhile (uniqueHues[j + 1].h < h) {\n\t\tj++;\n\t}\n\tvar d_j = (h - uniqueHues[j].h) / uniqueHues[j].e,\n\t    d_k = (uniqueHues[j + 1].h - h) / uniqueHues[j + 1].e,\n\t    H_j = uniqueHues[j].H;\n\treturn H_j + 100 * d_j / (d_j + d_k);\n}\n\nfunction toHue(H) {\n\tvar j = floor(H / 100);\n\tvar amt = H % 100;\n\n\tvar _uniqueHues$slice = uniqueHues.slice(j, j + 2);\n\n\tvar _uniqueHues$slice2 = _slicedToArray(_uniqueHues$slice, 2);\n\n\tvar _uniqueHues$slice2$ = _uniqueHues$slice2[0];\n\tvar e_j = _uniqueHues$slice2$.e;\n\tvar h_j = _uniqueHues$slice2$.h;\n\tvar _uniqueHues$slice2$2 = _uniqueHues$slice2[1];\n\tvar e_k = _uniqueHues$slice2$2.e;\n\tvar h_k = _uniqueHues$slice2$2.h;\n\tvar h = (amt * (e_k * h_j - e_j * h_k) - 100 * h_j * e_k) / (amt * (e_k - e_j) - 100 * e_k);\n\treturn h;\n}\n\nvar shortcuts = {\n\tO: \"RY\",\n\tS: \"YG\",\n\tT: \"G25B\",\n\tC: \"GB\",\n\tA: \"B25G\",\n\tV: \"B25R\",\n\tM: \"BR\",\n\tP: \"R25B\"\n};\n\nfunction fromNotation(N) {\n\tvar _N$match = N.match(/^([a-z])(?:(.+)?([a-z]))?$/i);\n\n\tvar _N$match2 = _slicedToArray(_N$match, 4);\n\n\tvar H1 = _N$match2[1];\n\tvar P = _N$match2[2];\n\tvar H2 = _N$match2[3];\n\n\tif (H2 === undefined) {\n\t\tH2 = H1;\n\t}\n\tif (P === undefined) {\n\t\tP = \"50\";\n\t}\n\n\tvar _map = [H1, H2].map(function (v) {\n\t\tv = v.toUpperCase();\n\t\tvar sc = shortcuts[v];\n\t\treturn sc ? fromNotation(sc) : 100 * hueSymbols.indexOf(v);\n\t});\n\n\tvar _map2 = _slicedToArray(_map, 2);\n\n\tH1 = _map2[0];\n\tH2 = _map2[1];\n\n\tP = parseFloat(P) / 100;\n\treturn (0, _helpers.corLerp)(H1, H2, P, \"H\");\n}\n\nfunction toNotation(H) {\n\tvar i = floor(H / 100),\n\t    j = (i + 1) % hueSymbols.length,\n\t    p = H - i * 100;\n\tif (p > 50) {\n\t\tvar _ref = [j, i];\n\t\ti = _ref[0];\n\t\tj = _ref[1];\n\n\t\tp = 100 - p;\n\t}\n\tif (p < 1) {\n\t\treturn hueSymbols[i];\n\t} else {\n\t\treturn hueSymbols[i] + p.toFixed() + hueSymbols[j];\n\t}\n}\n\nexports.fromHue = fromHue;\nexports.toHue = toHue;\nexports.fromNotation = fromNotation;\nexports.toNotation = toNotation;","\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _ciebase = require(\"ciebase\");\n\nvar _hq = require(\"./hq\");\n\nvar hq = _interopRequireWildcard(_hq);\n\nvar _helpers = require(\"./helpers\");\n\nvar _object = require(\"mout/object\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar _Math = Math;\nvar pow = _Math.pow;\nvar sqrt = _Math.sqrt;\nvar exp = _Math.exp;\nvar abs = _Math.abs;\nvar sign = _Math.sign;\nvar _Math2 = Math;\nvar sin = _Math2.sin;\nvar cos = _Math2.cos;\nvar atan2 = _Math2.atan2;\n\nvar surrounds = {\n\taverage: { F: 1.0, c: 0.69, N_c: 1.0 },\n\tdim: { F: 0.9, c: 0.59, N_c: 0.9 },\n\tdark: { F: 0.8, c: 0.535, N_c: 0.8 }\n};\n\nvar M_CAT02 = [[0.7328, 0.4296, -0.1624], [-0.7036, 1.6975, 0.0061], [0.0030, 0.0136, 0.9834]];\n\nvar M_HPE = [[0.38971, 0.68898, -0.07868], [-0.22981, 1.18340, 0.04641], [0.00000, 0.00000, 1.00000]];\n\nvar XYZ_to_CAT02 = M_CAT02,\n    CAT02_to_XYZ = _ciebase.matrix.inverse(M_CAT02),\n    CAT02_to_HPE = _ciebase.matrix.product(M_HPE, _ciebase.matrix.inverse(M_CAT02)),\n    HPE_to_CAT02 = _ciebase.matrix.product(M_CAT02, _ciebase.matrix.inverse(M_HPE));\n\nvar defaultViewingConditions = {\n\twhitePoint: _ciebase.illuminant.D65,\n\tadaptingLuminance: 40,\n\tbackgroundLuminance: 20,\n\tsurroundType: \"average\",\n\tdiscounting: false\n};\n\nvar defaultCorrelates = (0, _helpers.cfs)(\"QJMCshH\"),\n    vitalCorrelates = (0, _helpers.cfs)(\"JCh\");\n\n// CIECAM02 and Its Recent Developments - Ming Ronnier Luo and Changjun Li\nfunction Converter() {\n\tvar viewingConditions = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\tvar correlates = arguments.length <= 1 || arguments[1] === undefined ? defaultCorrelates : arguments[1];\n\n\tviewingConditions = (0, _object.merge)(defaultViewingConditions, viewingConditions);\n\n\tvar XYZ_w = viewingConditions.whitePoint;\n\tvar L_A = viewingConditions.adaptingLuminance;\n\tvar Y_b = viewingConditions.backgroundLuminance;\n\tvar _surrounds$viewingCon = surrounds[viewingConditions.surroundType];\n\tvar F = _surrounds$viewingCon.F;\n\tvar c = _surrounds$viewingCon.c;\n\tvar N_c = _surrounds$viewingCon.N_c;\n\tvar Y_w = XYZ_w[1];\n\n\tvar k = 1 / (5 * L_A + 1),\n\t    F_L = 0.2 * pow(k, 4) * 5 * L_A + 0.1 * pow(1 - pow(k, 4), 2) * pow(5 * L_A, 1 / 3),\n\t    n = Y_b / Y_w,\n\t    N_bb = 0.725 * pow(1 / n, 0.2),\n\t    N_cb = N_bb,\n\t    z = 1.48 + sqrt(n),\n\t    D = viewingConditions.discounting ? 1 : F * (1 - 1 / 3.6 * exp(-(L_A + 42) / 92));\n\n\tvar RGB_w = _ciebase.matrix.multiply(M_CAT02, XYZ_w);\n\n\tvar _RGB_w$map = RGB_w.map(function (v) {\n\t\treturn D * Y_w / v + 1 - D;\n\t});\n\n\tvar _RGB_w$map2 = _slicedToArray(_RGB_w$map, 3);\n\n\tvar D_R = _RGB_w$map2[0];\n\tvar D_G = _RGB_w$map2[1];\n\tvar D_B = _RGB_w$map2[2];\n\tvar RGB_cw = correspondingColors(XYZ_w);\n\tvar RGB_aw = adaptedResponses(RGB_cw);\n\tvar A_w = achromaticResponse(RGB_aw);\n\n\tfunction correspondingColors(XYZ) {\n\t\tvar _matrix$multiply = _ciebase.matrix.multiply(XYZ_to_CAT02, XYZ);\n\n\t\tvar _matrix$multiply2 = _slicedToArray(_matrix$multiply, 3);\n\n\t\tvar R = _matrix$multiply2[0];\n\t\tvar G = _matrix$multiply2[1];\n\t\tvar B = _matrix$multiply2[2];\n\n\t\treturn [D_R * R, D_G * G, D_B * B];\n\t}\n\n\tfunction reverseCorrespondingColors(RGB_c) {\n\t\tvar _RGB_c = _slicedToArray(RGB_c, 3);\n\n\t\tvar R_c = _RGB_c[0];\n\t\tvar G_c = _RGB_c[1];\n\t\tvar B_c = _RGB_c[2];\n\n\t\treturn _ciebase.matrix.multiply(CAT02_to_XYZ, [R_c / D_R, G_c / D_G, B_c / D_B]);\n\t}\n\n\tfunction adaptedResponses(RGB_c) {\n\t\treturn _ciebase.matrix.multiply(CAT02_to_HPE, RGB_c).map(function (v) {\n\t\t\tvar x = pow(F_L * abs(v) / 100, 0.42);\n\t\t\treturn sign(v) * 400 * x / (27.13 + x) + 0.1;\n\t\t});\n\t}\n\n\tfunction reverseAdaptedResponses(RGB_a) {\n\t\treturn _ciebase.matrix.multiply(HPE_to_CAT02, RGB_a.map(function (v) {\n\t\t\tvar x = v - 0.1;\n\t\t\treturn sign(x) * 100 / F_L * pow(27.13 * abs(x) / (400 - abs(x)), 1 / 0.42);\n\t\t}));\n\t}\n\n\tfunction achromaticResponse(RGB_a) {\n\t\tvar _RGB_a = _slicedToArray(RGB_a, 3);\n\n\t\tvar R_a = _RGB_a[0];\n\t\tvar G_a = _RGB_a[1];\n\t\tvar B_a = _RGB_a[2];\n\n\t\treturn (R_a * 2 + G_a + B_a / 20 - 0.305) * N_bb;\n\t}\n\n\tfunction brightness(J) {\n\t\treturn 4 / c * sqrt(J / 100) * (A_w + 4) * pow(F_L, 0.25);\n\t}\n\n\tfunction lightness(Q) {\n\t\treturn 6.25 * pow(c * Q / ((A_w + 4) * pow(F_L, 0.25)), 2);\n\t}\n\n\tfunction colorfulness(C) {\n\t\treturn C * pow(F_L, 0.25);\n\t}\n\n\tfunction chromaFromSaturationBrightness(s, Q) {\n\t\treturn pow(s / 100, 2) * Q / pow(F_L, 0.25);\n\t}\n\n\tfunction chromaFromColorfulness(M) {\n\t\treturn M / pow(F_L, 0.25);\n\t}\n\n\tfunction saturation(M, Q) {\n\t\treturn 100 * sqrt(M / Q);\n\t}\n\n\tfunction fillOut(correlates, inputs) {\n\t\tvar Q = inputs.Q;\n\t\tvar J = inputs.J;\n\t\tvar M = inputs.M;\n\t\tvar C = inputs.C;\n\t\tvar s = inputs.s;\n\t\tvar h = inputs.h;\n\t\tvar H = inputs.H;\n\t\tvar outputs = {};\n\n\t\tif (correlates.J) {\n\t\t\toutputs.J = isNaN(J) ? lightness(Q) : J;\n\t\t}\n\t\tif (correlates.C) {\n\t\t\tif (isNaN(C)) {\n\t\t\t\tif (isNaN(M)) {\n\t\t\t\t\tQ = isNaN(Q) ? brightness(J) : Q;\n\t\t\t\t\toutputs.C = chromaFromSaturationBrightness(s, Q);\n\t\t\t\t} else {\n\t\t\t\t\toutputs.C = chromaFromColorfulness(M);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutputs.C = inputs.C;\n\t\t\t}\n\t\t}\n\t\tif (correlates.h) {\n\t\t\toutputs.h = isNaN(h) ? hq.toHue(H) : h;\n\t\t}\n\t\tif (correlates.Q) {\n\t\t\toutputs.Q = isNaN(Q) ? brightness(J) : Q;\n\t\t}\n\t\tif (correlates.M) {\n\t\t\toutputs.M = isNaN(M) ? colorfulness(C) : M;\n\t\t}\n\t\tif (correlates.s) {\n\t\t\tif (isNaN(s)) {\n\t\t\t\tQ = isNaN(Q) ? brightness(J) : Q;\n\t\t\t\tM = isNaN(M) ? colorfulness(C) : M;\n\t\t\t\toutputs.s = saturation(M, Q);\n\t\t\t} else {\n\t\t\t\toutputs.s = s;\n\t\t\t}\n\t\t}\n\t\tif (correlates.H) {\n\t\t\toutputs.H = isNaN(H) ? hq.fromHue(h) : H;\n\t\t}\n\n\t\treturn outputs;\n\t}\n\n\tfunction fromXyz(XYZ) {\n\t\tvar RGB_c = correspondingColors(XYZ);\n\t\tvar RGB_a = adaptedResponses(RGB_c);\n\n\t\tvar _RGB_a2 = _slicedToArray(RGB_a, 3);\n\n\t\tvar R_a = _RGB_a2[0];\n\t\tvar G_a = _RGB_a2[1];\n\t\tvar B_a = _RGB_a2[2];\n\n\t\tvar a = R_a - G_a * 12 / 11 + B_a / 11,\n\t\t    b = (R_a + G_a - 2 * B_a) / 9,\n\t\t    h_rad = atan2(b, a),\n\t\t    h = _ciebase.degree.fromRadian(h_rad),\n\t\t    e_t = 1 / 4 * (cos(h_rad + 2) + 3.8),\n\t\t    A = achromaticResponse(RGB_a),\n\t\t    J = 100 * pow(A / A_w, c * z),\n\t\t    t = 5e4 / 13 * N_c * N_cb * e_t * sqrt(a * a + b * b) / (R_a + G_a + 21 / 20 * B_a),\n\t\t    C = pow(t, 0.9) * sqrt(J / 100) * pow(1.64 - pow(0.29, n), 0.73);\n\n\t\treturn fillOut(correlates, { J: J, C: C, h: h });\n\t}\n\n\tfunction toXyz(CAM) {\n\t\tvar _fillOut = fillOut(vitalCorrelates, CAM);\n\n\t\tvar J = _fillOut.J;\n\t\tvar C = _fillOut.C;\n\t\tvar h = _fillOut.h;\n\t\tvar h_rad = _ciebase.degree.toRadian(h);\n\t\tvar t = pow(C / (sqrt(J / 100) * pow(1.64 - pow(0.29, n), 0.73)), 10 / 9);\n\t\tvar e_t = 1 / 4 * (cos(h_rad + 2) + 3.8);\n\t\tvar A = A_w * pow(J / 100, 1 / c / z);\n\n\t\tvar p_1 = 5e4 / 13 * N_c * N_cb * e_t / t,\n\t\t    p_2 = A / N_bb + 0.305,\n\t\t    q_1 = p_2 * 61 / 20 * 460 / 1403,\n\t\t    q_2 = 61 / 20 * 220 / 1403,\n\t\t    q_3 = 21 / 20 * 6300 / 1403 - 27 / 1403;\n\n\t\tvar sin_h = sin(h_rad),\n\t\t    cos_h = cos(h_rad);\n\n\t\tvar a, b;\n\n\t\tif (t === 0 || isNaN(t)) {\n\t\t\ta = b = 0;\n\t\t} else if (abs(sin_h) >= abs(cos_h)) {\n\t\t\tb = q_1 / (p_1 / sin_h + q_2 * cos_h / sin_h + q_3);\n\t\t\ta = b * cos_h / sin_h;\n\t\t} else {\n\t\t\ta = q_1 / (p_1 / cos_h + q_2 + q_3 * sin_h / cos_h);\n\t\t\tb = a * sin_h / cos_h;\n\t\t}\n\n\t\tvar RGB_a = [20 / 61 * p_2 + 451 / 1403 * a + 288 / 1403 * b, 20 / 61 * p_2 - 891 / 1403 * a - 261 / 1403 * b, 20 / 61 * p_2 - 220 / 1403 * a - 6300 / 1403 * b];\n\n\t\tvar RGB_c = reverseAdaptedResponses(RGB_a),\n\t\t    XYZ = reverseCorrespondingColors(RGB_c);\n\n\t\treturn XYZ;\n\t}\n\n\treturn { fromXyz: fromXyz, toXyz: toXyz, fillOut: fillOut };\n}\n\nexports.default = Converter;\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _ciebase = require(\"ciebase\");\n\nvar _Math = Math;\nvar sqrt = _Math.sqrt;\nvar pow = _Math.pow;\nvar exp = _Math.exp;\nvar log = _Math.log;\nvar cos = _Math.cos;\nvar sin = _Math.sin;\nvar atan2 = _Math.atan2;\n\nvar uniformSpaces = {\n\tLCD: { K_L: 0.77, c_1: 0.007, c_2: 0.0053 },\n\tSCD: { K_L: 1.24, c_1: 0.007, c_2: 0.0363 },\n\tUCS: { K_L: 1.00, c_1: 0.007, c_2: 0.0228 }\n};\n\nfunction Converter() {\n\tvar name = arguments.length <= 0 || arguments[0] === undefined ? \"UCS\" : arguments[0];\n\tvar _uniformSpaces$name = uniformSpaces[name];\n\tvar K_L = _uniformSpaces$name.K_L;\n\tvar c_1 = _uniformSpaces$name.c_1;\n\tvar c_2 = _uniformSpaces$name.c_2;\n\n\tfunction fromCam(CAM) {\n\t\tvar J = CAM.J;\n\t\tvar M = CAM.M;\n\t\tvar h = CAM.h;\n\t\tvar h_rad = _ciebase.degree.toRadian(h);\n\t\tvar J_p = (1 + 100 * c_1) * J / (1 + c_1 * J);\n\t\tvar M_p = 1 / c_2 * log(1 + c_2 * M);\n\t\tvar a_p = M_p * cos(h_rad);\n\t\tvar b_p = M_p * sin(h_rad);\n\t\treturn { J_p: J_p, a_p: a_p, b_p: b_p };\n\t}\n\n\tfunction toCam(UCS) {\n\t\tvar J_p = UCS.J_p;\n\t\tvar a_p = UCS.a_p;\n\t\tvar b_p = UCS.b_p;\n\t\tvar J = -J_p / (c_1 * J_p - 100 * c_1 - 1);\n\t\tvar M_p = sqrt(pow(a_p, 2) + pow(b_p, 2));\n\t\tvar M = (exp(c_2 * M_p) - 1) / c_2;\n\t\tvar h_rad = atan2(b_p, a_p);\n\t\tvar h = _ciebase.degree.fromRadian(h_rad);\n\t\treturn { J: J, M: M, h: h };\n\t}\n\n\tfunction distance(UCS1, UCS2) {\n\t\treturn sqrt(pow((UCS1.J_p - UCS2.J_p) / K_L, 2) + pow(UCS1.a_p - UCS2.a_p, 2) + pow(UCS1.b_p - UCS2.b_p, 2));\n\t}\n\n\treturn { fromCam: fromCam, toCam: toCam, distance: distance };\n}\n\nexports.default = Converter;\nmodule.exports = exports['default'];","var helpers = require(\"./dist/helpers\"),\n    gamut = require(\"./dist/gamut\"),\n    cam = require(\"./dist/cam\"),\n    ucs = require(\"./dist/ucs\"),\n    hq = require(\"./dist/hq\");\n\nmodule.exports = {\n\tgamut: gamut,\n\tcfs: helpers.cfs,\n\tlerp: helpers.lerp,\n\tcam: cam,\n\tucs: ucs,\n\thq: hq\n};\n","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport chromajs from \"chroma-js\";\nimport hsluv from \"hsluv\";\nimport ciebase from \"ciebase\";\nimport ciecam02 from \"ciecam02\";\n\nconst cam = ciecam02.cam({\n  whitePoint: ciebase.illuminant.D65,\n  adaptingLuminance: 40,\n  backgroundLuminance: 20,\n  surroundType: 'average',\n  discounting: false,\n}, ciecam02.cfs('JCh'));\n\nconst xyz = ciebase.xyz(ciebase.workspace.sRGB, ciebase.illuminant.D65);\nconst jch2rgb = (jch) => xyz.toRgb(cam.toXyz({ J: jch[0], C: jch[1], h: jch[2] }));\nconst rgb2jch = (rgb) => {\n  const jch = cam.fromXyz(xyz.fromRgb(rgb));\n  return [jch.J, jch.C, jch.h];\n};\nconst [jch2jab, jab2jch] = (() => {\n  const coefs = { k_l: 1, c1: 0.007, c2: 0.0228 };\n  const π = Math.PI;\n  const CIECAM02_la = (64 / π) / 5;\n  const CIECAM02_k = 1 / ((5 * CIECAM02_la) + 1);\n  const CIECAM02_fl = (0.2 * (CIECAM02_k ** 4) * (5 * CIECAM02_la)) + 0.1 * ((1 - (CIECAM02_k ** 4)) ** 2) * ((5 * CIECAM02_la) ** (1 / 3));\n  return [(jch) => {\n    const [J, C, h] = jch;\n    const M = C * (CIECAM02_fl ** 0.25);\n    let j = ((1 + 100 * coefs.c1) * J) / (1 + coefs.c1 * J);\n    j /= coefs.k_l;\n    const MPrime = (1 / coefs.c2) * Math.log(1.0 + coefs.c2 * M);\n    const a = MPrime * Math.cos(h * (π / 180));\n    const b = MPrime * Math.sin(h * (π / 180));\n    return [j, a, b];\n  }, (jab) => {\n    const [j, a, b] = jab;\n    const newMPrime = Math.sqrt(a * a + b * b);\n    const newM = (Math.exp(newMPrime * coefs.c2) - 1) / coefs.c2;\n    const h = ((180 / π) * Math.atan2(b, a) + 360) % 360;\n    const C = newM / (CIECAM02_fl ** 0.25);\n    const J = j / (1 + coefs.c1 * (100 - j));\n    return [J, C, h];\n  }];\n})();\n\nconst jab2rgb = (jab) => jch2rgb(jab2jch(jab));\nconst rgb2jab = (rgb) => jch2jab(rgb2jch(rgb));\n\nconst con = console;\n\n// Usage:\n// console.color('rebeccapurple');\ncon.color = (color, text = '') => {\n  const col = chromajs(color);\n  const l = col.luminance();\n  con.log(`%c${color} ${text}`, `background-color: ${color};padding: 5px; border-radius: 5px; color: ${l > .5 ? '#000' : '#fff'}`);\n};\n\n// Usage:\n// console.ramp(chroma.scale(['yellow', 'navy']).mode('hsluv'));\n// console.ramp(scale, 3000); // if you need to specify the length of the scale\ncon.ramp = (scale, length = 1) => {\n  con.log('%c ', `font-size: 1px;line-height: 16px;background: ${chromajs.getCSSGradient(scale, length)};padding: 0 0 0 200px; border-radius: 2px;`);\n};\n\nconst online = (x1, y1, x2, y2, x3, y3, ε = .1) => {\n  if (x1 === x2 || y1 === y2) {\n    return true;\n  }\n  const m = (y2 - y1) / (x2 - x1);\n  const x4 = (y3 + x3 / m - y1 + m * x1) / (m + 1 / m);\n  const y4 = y3 + x3 / m - x4 / m;\n  return (x3 - x4) ** 2 + (y3 - y4) ** 2 < ε ** 2;\n};\n\nconst div = (ƒ, dot1, dot2, ε) => {\n  const x3 = (dot1[0] + dot2[0]) / 2;\n  const y3 = ƒ(x3);\n  if (online(...dot1, ...dot2, x3, y3, ε)) {\n    return null;\n  }\n  return [x3, y3];\n};\n\nconst split = (ƒ, from, to, ε = .1) => {\n  const step = (to - from) / 10;\n  const points = [];\n  for (let i = from; i < to; i += step) {\n    points.push([i, ƒ(i)]);\n  }\n  points.push([to, ƒ(to)]);\n  for (let i = 0; i < points.length - 1; i++) {\n    const dot = div(ƒ, points[i], points[i + 1], ε);\n    if (dot) {\n      points.splice(i + 1, 0, dot);\n      i--;\n    }\n  }\n  for (let i = 0; i < points.length - 2; i++) {\n    if (online(...points[i], ...points[i + 2], ...points[i + 1], ε)) {\n      points.splice(i + 1, 1);\n      i--;\n    }\n  }\n  return points;\n};\n\nconst round = (x, r = 4) => Math.round(x * 10 ** r) / 10 ** r;\n\nconst getCSSGradient = (scale, length = 1, deg = 90, ε = .005) => {\n  const ptsr = split((x) => scale(x).gl()[0], 0, length, ε);\n  const ptsg = split((x) => scale(x).gl()[1], 0, length, ε);\n  const ptsb = split((x) => scale(x).gl()[2], 0, length, ε);\n  const points = Array.from(\n    new Set(\n      [\n        ...ptsr.map((a) => round(a[0])),\n        ...ptsg.map((a) => round(a[0])),\n        ...ptsb.map((a) => round(a[0])),\n      ].sort((a, b) => a - b),\n    ),\n  );\n  return `linear-gradient(${deg}deg, ${points.map((x) => `${scale(x).hex()} ${round(x * 100)}%`).join()});`;\n};\n\nconst extendChroma = (chroma) => {\n  // JCH\n  chroma.Color.prototype.jch = function () {\n    return rgb2jch(this._rgb.slice(0, 3).map((c) => c / 255));\n  };\n\n  chroma.jch = (...args) => new chroma.Color(...jch2rgb(args).map((c) => Math.floor(c * 255)), 'rgb');\n\n  // JAB\n  chroma.Color.prototype.jab = function () {\n    return rgb2jab(this._rgb.slice(0, 3).map((c) => c / 255));\n  };\n\n  chroma.jab = (...args) => new chroma.Color(...jab2rgb(args).map((c) => Math.floor(c * 255)), 'rgb');\n\n  // HSLuv\n  chroma.Color.prototype.hsluv = function () {\n    return hsluv.rgbToHsluv(this._rgb.slice(0, 3).map((c) => c / 255));\n  };\n\n  chroma.hsluv = (...args) => new chroma.Color(...hsluv.hsluvToRgb(args).map((c) => Math.floor(c * 255)), 'rgb');\n\n  const oldInterpol = chroma.interpolate;\n  const RGB2 = {\n    jch: rgb2jch,\n    jab: rgb2jab,\n    hsluv: hsluv.rgbToHsluv,\n  };\n  const lerpH = (a, b, t) => {\n    const m = 360;\n    const d = Math.abs(a - b);\n    if (d > m / 2) {\n      if (a > b) {\n        b += m;\n      } else {\n        a += m;\n      }\n    }\n    return ((1 - t) * a + t * b) % m;\n  };\n\n  chroma.interpolate = (col1, col2, f = 0.5, mode = 'lrgb') => {\n    if (RGB2[mode]) {\n      if (typeof col1 !== 'object') {\n        col1 = new chroma.Color(col1);\n      }\n      if (typeof col2 !== 'object') {\n        col2 = new chroma.Color(col2);\n      }\n      const xyz1 = RGB2[mode](col1.gl());\n      const xyz2 = RGB2[mode](col2.gl());\n      const grey1 = Number.isNaN(col1.hsl()[0]);\n      const grey2 = Number.isNaN(col2.hsl()[0]);\n      let X;\n      let Y;\n      let Z;\n      switch (mode) {\n        case 'hsluv':\n          if (xyz1[1] < 1e-10) {\n            xyz1[0] = xyz2[0];\n          }\n          if (xyz1[1] === 0) { // black or white\n            xyz1[1] = xyz2[1];\n          }\n          if (xyz2[1] < 1e-10) {\n            xyz2[0] = xyz1[0];\n          }\n          if (xyz2[1] === 0) { // black or white\n            xyz2[1] = xyz1[1];\n          }\n          X = lerpH(xyz1[0], xyz2[0], f);\n          Y = xyz1[1] + (xyz2[1] - xyz1[1]) * f;\n          Z = xyz1[2] + (xyz2[2] - xyz1[2]) * f;\n          break;\n        case 'jch':\n          if (grey1) {\n            xyz1[2] = xyz2[2];\n          }\n          if (grey2) {\n            xyz2[2] = xyz1[2];\n          }\n          X = xyz1[0] + (xyz2[0] - xyz1[0]) * f;\n          Y = xyz1[1] + (xyz2[1] - xyz1[1]) * f;\n          Z = lerpH(xyz1[2], xyz2[2], f);\n          break;\n        default:\n          X = xyz1[0] + (xyz2[0] - xyz1[0]) * f;\n          Y = xyz1[1] + (xyz2[1] - xyz1[1]) * f;\n          Z = xyz1[2] + (xyz2[2] - xyz1[2]) * f;\n      }\n      return chroma[mode](X, Y, Z).alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    }\n    return oldInterpol(col1, col2, f, mode);\n  };\n\n  chroma.getCSSGradient = getCSSGradient;\n};\n\nexport {extendChroma}","///////////////////////////////////////////////////////////////////////////////\n/** @preserve\n/////    CoLoR PaRsLeY  a simple set of color parsing thingies!\n/////           Beta 0.1.8   Revision date: June 04, 2022\n/////\n/////    Functions to parse color values and return array\n/////    Copyright (c) 2019-2022 by Andrew Somers. All Rights Reserved.\n/////    LICENSE: AGPL 3\n/////    CONTACT: Please use the ISSUES or DISCUSSIONS tab at:\n/////    https://github.com/Myndex/colorparsley/\n/////\n///////////////////////////////////////////////////////////////////////////////\n/////\n/////    IMPORT:\n/////    import { colorParsley } from 'colorparsley';\n/////\n/////    let rgbaArray = colorParsley('#abcdef');\n/////\n/////    Output as array:  [r,g,b,a,isValid,colorspace]\n/////    Example: [123,123,123,1.0,true,'sRGB']\n// */\n///////////////////////////////////////////////////////////////////////////////\n\n// ==ClosureCompiler==\n// @compilation_level SIMPLE_OPTIMIZATIONS\n// @output_file_name colorparsley.min.js\n// @code_url https://raw.githubusercontent.com/Myndex/colorparsley/master/src/colorparsley.js\n// ==/ClosureCompiler==\n\n// \n////////////////////////////////////////////////////////////////////////////////\n\n\n\n////////////////////////////////////////////////////////////////////////////////\n/////  BEGIN COLOR PARSLEY 0.1.8  BLOCK  \\/////////////////////////////////////\n////                                      \\///////////////////////////////////\n///                                        \\/////////////////////////////////\n\n\n/////  ƒ  colorParsley()  ///////////////////////////////////////////////////\n\nexport function colorParsley (colorIn) {\n\n    if (typeof colorIn === 'string') {\n        return parseString(colorIn);\n    } else if (typeof colorIn === 'number') {\n        return [(colorIn & 0xFF0000) >> 16,\n                (colorIn & 0x00FF00) >> 8,\n                (colorIn & 0x0000FF), 1, true, 'unknown'];\n    } else if (typeof colorIn === 'object') {\n       if (Array.isArray(colorIn)) {\n          return colorIn;\n       } else if (!isNaN(colorIn.r) || !isNaN(colorIn.red)){\n              // validate object & return array\n         let objArray = [0,0,0,0,false,'unknown'];\n             // takes object with r g b or red green blue etc...\n         objArray[0] = (colorIn.r)?colorIn.r:(colorIn.red)?\n                        colorIn.red:false;\n         objArray[1] = (colorIn.g)?colorIn.g:(colorIn.green)?\n                        colorIn.green:false;\n         objArray[2] = (colorIn.b)?colorIn.b:(colorIn.blue)?\n                        colorIn.blue:false;\n         objArray[3] = (colorIn.a)?colorIn.a:(colorIn.alpha)?\n                        colorIn.alpha:1;\n         objArray[4] = (objArray[0]&&objArray[1]&&objArray[2]) ? true : false;\n         objArray[5] =\n            (colorIn.space)?colorIn.space:\n            (colorIn.colorSpace)?colorIn.colorSpace:\n            (colorIn.colorspace)?colorIn.colorspace:\n            'unknown';\n         \n         return objArray;\n       }\n    }; // End if statement\n        console.log('colorParsley error: invalid input')\n        return [0,0,0,0,false,'inputError'] // throw 'InvalidInput' // return error \n};\n\n\n/////  ƒ  parseString()  ///////////////////////////////////////////////////\n\n// private\nfunction parseString (colorString = '#abcdef') {\n\n                 // strip junk and make a clean string (replace unmatched)\n                // This retains all alphanumeric and , . # % ( ) /\n  colorString = colorString.replace(/[^\\w,.#%()\\/ -]/g,'');\n  colorString = colorString.toLowerCase();   // set lowercase\n  \n  let isValid = false; // validation flag, in array element [4]\n  let type = 'sRGB'; // Default colorspace flag in element [5]\n  let retArray = [0,0,0,0,isValid,type]; // init the return array\n\n\n      // test for named color before iterating array\n  if (colorString.match(/^(?:(?!rgb|l.h|hs|col|\\d|#).{0,4})(?=[g-z])/)) {\n\n\n    ///// CSS4 NAMED COLORS plus a bonus set of GREYS and GRAYS //////////\n    \n        // If name is matched, parse and return the color values\n    let namedColors = {\n    gray0:'000000',gray1:'111111',gray2:'222222',gray3:'333333',gray4:'444444',gray5:'555555',gray6:'666666',gray7:'777777',gray8:'888888',gray9:'999999',graya:'aaaaaa',grayb:'bbbbbb',grayc:'cccccc',grayd:'dddddd',graye:'eeeeee',grayf:'ffffff',midgray:'a0a0a0',\n    grey0:'000000',grey1:'111111',grey2:'222222',grey3:'333333',grey4:'444444',grey5:'555555',grey6:'666666',grey7:'777777',grey8:'888888',grey9:'999999',greya:'aaaaaa',greyb:'bbbbbb',greyc:'cccccc',greyd:'dddddd',greye:'eeeeee',greyf:'ffffff',midgrey:'a0a0a0',\n    aliceblue:'f0f8ff',antiquewhite:'faebd7',aqua:'00ffff',aquamarine:'7fffd4',azure:'f0ffff',\n    beige:'f5f5dc',bisque:'ffe4c4',black:'000000',blanchedalmond:'ffebcd',blue:'0000ff',blueviolet:'8a2be2',brown:'a52a2a',burlywood:'deb887',\n    cadetblue:'5f9ea0',chartreuse:'7fff00',chocolate:'d2691e',coral:'ff7f50',cornflowerblue:'6495ed',cornsilk:'fff8dc',crimson:'dc143c',cyan:'00ffff',\n    darkblue:'00008b',darkcyan:'008b8b',darkgoldenrod:'b8860b',darkgray:'a9a9a9',darkgreen:'006400',darkgrey:'a9a9a9',darkkhaki:'bdb76b',darkmagenta:'8b008b',darkolivegreen:'556b2f',darkorange:'ff8c00',darkorchid:'9932cc',darkred:'8b0000',darksalmon:'e9967a',darkseagreen:'8fbc8f',darkslateblue:'483d8b',darkslategray:'2f4f4f',darkslategrey:'2f4f4f',darkturquoise:'00ced1',darkviolet:'9400d3',deeppink:'ff1493',deepskyblue:'00bfff',dimgray:'696969',dimgrey:'696969',dodgerblue:'1e90ff',\n    firebrick:'b22222',floralwhite:'fffaf0',forestgreen:'228b22',fuchsia:'ff00ff',\n    gainsboro:'dcdcdc',ghostwhite:'f8f8ff',gold:'ffd700',goldenrod:'daa520',gray:'808080',green:'008000',greenyellow:'adff2f',grey:'808080',\n    honeydew:'f0fff0',hotpink:'ff69b4',\n    indianred:'cd5c5c',indigo:'4b0082',ivory:'fffff0',\n    khaki:'f0e68c',\n    lavender:'e6e6fa',lavenderblush:'fff0f5',lawngreen:'7cfc00',lemonchiffon:'fffacd',lightblue:'add8e6',lightcoral:'f08080',lightcyan:'e0ffff',lightgoldenrodyellow:'fafad2',lightgray:'d3d3d3',lightgreen:'90ee90',lightgrey:'d3d3d3',lightpink:'ffb6c1',lightsalmon:'ffa07a',lightseagreen:'20b2aa',lightskyblue:'87cefa',lightslategray:'778899',lightslategrey:'778899',lightsteelblue:'b0c4de',lightyellow:'ffffe0',lime:'00ff00',limegreen:'32cd32',linen:'faf0e6',\n    magenta:'ff00ff',maroon:'800000',mediumaquamarine:'66cdaa',mediumblue:'0000cd',mediumorchid:'ba55d3',mediumpurple:'9370db',mediumseagreen:'3cb371',mediumslateblue:'7b68ee',mediumspringgreen:'00fa9a',mediumturquoise:'48d1cc',mediumvioletred:'c71585',midnightblue:'191970',mintcream:'f5fffa',mistyrose:'ffe4e1',moccasin:'ffe4b5',\n    navajowhite:'ffdead',navy:'000080',\n    oldlace:'fdf5e6',olive:'808000',olivedrab:'6b8e23',orange:'ffa500',orangered:'ff4500',orchid:'da70d6',\n    palegoldenrod:'eee8aa',palegreen:'98fb98',paleturquoise:'afeeee',palevioletred:'db7093',papayawhip:'ffefd5',peachpuff:'ffdab9',peru:'cd853f',pink:'ffc0cb',plum:'dda0dd',powderblue:'b0e0e6',purple:'800080',\n    rebeccapurple:'663399',red:'ff0000',rosybrown:'bc8f8f',royalblue:'4169e1',\n    saddlebrown:'8b4513',salmon:'fa8072',sandybrown:'f4a460',seagreen:'2e8b57',seashell:'fff5ee',sienna:'a0522d',silver:'c0c0c0',skyblue:'87ceeb',slateblue:'6a5acd',slategray:'708090',slategrey:'708090',snow:'fffafa',springgreen:'00ff7f',steelblue:'4682b4',\n    tan:'d2b48c',teal:'008080',thistle:'d8bfd8',tomato:'ff6347',turquoise:'40e0d0',\n    violet:'ee82ee',\n    wheat:'f5deb3',white:'ffffff',whitesmoke:'f5f5f5',\n    yellow:'ffff00',yellowgreen:'9acd32'\n    };\n\n    for (let key in namedColors) {\n      if (colorString == key) {\n\n        let hexRex = {  \n          rex: /^([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})$/,\n          sprig: function (slices) {\n            for (let i = 0; i < 3; i++) {\n              retArray[i] = parseInt(slices[i+1],16);\n            }\n            retArray[3] = 1;\n            return true;\n          }\n        };\n\n        let hexProc = hexRex.rex.exec(namedColors[key]);\n        retArray[4] = isValid = hexRex.sprig(hexProc);\n\n        return retArray;\n      }\n    }\n  };   // end of named colors section\n\n\n       // NEW regex  0.1.6 - still current for use with with 0.1.8+\n      // See docs for breakdown of regex pattern\n  let colorRex = {\n    rex: /(?:^(?:#|0x|)(?:(?:([\\da-f])([\\da-f])([\\da-f])([\\da-f])?)(?!\\S)|(?:([\\da-f]{2})(?:([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})?)?))|(?:(?:^(?:rgba?|)\\(? ?(?:(?:(?:(255|(?:25[0-4]|2[0-4]\\d|1?\\d{1,2})(?:\\.\\d{1,24})?)))(?:,[^\\S]*$|(?:(?:, ?| )(255|(?:25[0-4]|2[0-4]\\d|1?\\d{1,2})(?:\\.\\d{1,24})?)(?:, ?| )(255|(?:25[0-4]|2[0-4]\\d|1?\\d{1,2})(?:\\.\\d{1,24})?)))|(100%|\\d{1,2}(?:\\.\\d{1,24})?%)(?:,?[^\\S]*$|(?:(?:, ?| )(?:(100%|\\d{1,2}(?:\\.\\d{1,24})?%)(?:, ?| )(100%|\\d{1,2}(?:\\.\\d{1,24})?%)))))|^(?:color\\((srgb|srgb-linear|display-p3|a98-rgb|prophoto-rgb|rec2020|xyz|xyz-d50|xyz-d65) (?:(100%|\\d{1,2}(?:\\.\\d{1,24})?%|[0 ]\\.\\d{1,24}|[01])) (?:(100%|\\d{1,2}(?:\\.\\d{1,24})?%|[0 ]\\.\\d{1,24}|[01])) (?:(100%|\\d{1,2}(?:\\.\\d{1,24})?%|[0 ]\\.\\d{1,24}|[01])))|^(?:((?:r(?!gb)|c(?!olor)|[abd-qs-z])[a-z]{2,5})\\( ?((?:\\d{0,3}\\.|)\\d{1,24}%?)(?:, ?| )((?:\\d{0,3}\\.|)\\d{1,24}%?)(?:, ?| )((?:\\d{0,3}\\.|)\\d{1,24}%?))))(?:(?:,| \\/| ) ?(?:(100%|\\d{1,2}(?:\\.\\d{1,24})?%|[0 ]\\.\\d{1,24}|[01])))?(?:\\)| |))[^\\S]*$/,\n\n\n    parsley: function (slices) {\n\n      let slicePos = 0;\n      let sliceLast = 0;\n      let base = 10;\n      let divisor = 100.0;\n      let convertPct = 2.55;\n      let alpha = '1';\n\n\n      if (slices[23]) {\n        alpha = slices[23];\n        delete slices[23];\n      }\n                     // Set alpha before anything else\n      retArray[3] = (alpha.match(/%/g)) ?\n                    parseFloat(alpha) / divisor :\n                    parseFloat(alpha);\n\n                    //  determine first and last element\n      for (let k=1; k < slices.length; k++) { \n        if (slices[k]) {\n          slicePos = (slicePos) ? slicePos : k;\n          sliceLast = k;\n        }\n      }\n\n  switch (sliceLast) {\n\n    case 4:  // This is the 3-4 digit hex parsing\n      base = 16;\n      divisor = 15.0;\n      retArray[3] = parseInt(slices[sliceLast],base) / divisor ;\n    case 3:\n      base = 16;\n      for (let i = 0; i < 3; i++) {\n        retArray[i] = parseInt(slices[slicePos+i] + slices[slicePos+i],base);\n      }\n    break;\n\n    case 5:    // allows two digit hex to become grey\n      base = 16;\n    case 9:  // allows 1-3 digit INT with comma to become grey\n      retArray[0] = retArray[1] = retArray[2] = \n        (base == 10) ? parseFloat(slices[sliceLast]) : \n                       parseInt(slices[sliceLast],base);\n    break;\n\n    case 12:  // allows single percentage to become grey\n      retArray[0] = retArray[1] = retArray[2] = \n         parseFloat(slices[sliceLast]) * convertPct;\n    break;\n\n    case 8:  // These are the main parsings for hex and rgb()\n      base = 16;\n      divisor = 255.0;\n      retArray[3] = parseInt(slices[8],base) / divisor ;\n    case 7:\n      base = 16;\n    case 11:\n      for (let i = 0; i < 3; i++) {\n        retArray[i] = (base == 10) ? parseFloat(slices[slicePos+i]) :\n                                  parseInt(slices[slicePos+i],base);\n      }\n    break;\n\n    case 14: //  rgb() percentage\n      for (let i = 0; i < 3; i++) {\n        retArray[i] = parseFloat(slices[slicePos+i]) * convertPct;\n      }\n    break;\n    \n    case 18:  // This is for color() CSS 4\n      retArray[5] = slices[15];\n\n      for (let i = 0; i < 3; i++) { // color() is converted to 0.0-255.0\n        slicePos++;\n        retArray[i] = (slices[slicePos].match(/%/g)) ?\n            parseFloat(slices[slicePos]) * 2.55:\n            parseFloat(slices[slicePos]) * 255;  \n      }\n    break;\n\n    case 22: // This is the \"wild west\" section\n\n      retArray[5] = slices[slicePos];\n\n      for (let i = 0; i < 3; i++ ) {\n        slicePos++;\n        retArray[i] = (slices[slicePos]) ? (slices[slicePos].match(/%/g)) ?\n            parseFloat(slices[slicePos]) / divisor :\n            parseFloat(slices[slicePos]) : 0.0 ;\n      }\n\n          // Process for HSL and HWB\n      if (retArray[5].match(/^(?:hsla?|hwba?)/i) ) {\n        let sat,light,white,black,hwbFact;\n\n        let hue = retArray[0] % 360.0;\n        if (hue < 0) { hue += 360.0; }\n\n        if (retArray[5].match(/^hsla?/i) ) {\n          sat   = retArray[1];\n          light = retArray[2];\n          white = 0;\n          hwbFact = 1; \n        } else if (retArray[5].match(/^hwba?/i) ) {\n          white = retArray[1];\n          black = retArray[2];\n\n          if (white + black >= 1) {\n            retArray[0] = retArray[1] = retArray[2] = white / (white + black);\n            retArray[5] = 'sRGB';\n            break;\n          }\n\n          sat = 1.0;\n          light = 0.5;\n          hwbFact = (1.0 - white - black);\n        }\n\n        function f(n) {  // from CSS reference implementation\n          let k = (n + hue/30) % 12;\n          let a = sat * Math.min(light, 1 - light);\n          return light - a * Math.max(-1, Math.min(k - 3, 9 - k, 1));\n        }\n\n        retArray[0] = Math.round(255 * (f(0) * hwbFact + white));\n        retArray[1] = Math.round(255 * (f(8) * hwbFact + white));\n        retArray[2] = Math.round(255 * (f(4) * hwbFact + white));\n        retArray[5] = 'sRGB';\n      }\n      break;\n      }\n      return true;\n    }  // close parsley sub-function\n  };  // close colorRex obj\n\n\n      //  The main call\n  let slicesProc = colorRex.rex.exec(colorString);\n\n  if (slicesProc) { // Error catch\n    \n    retArray[4] = isValid = colorRex.parsley(slicesProc); // set the isValid flag\n\n    return retArray;\n\n  } else {\n    isValid = false;\n    console.log('colorParsley error: unable to parse string')\n    return [0,0,0,0,isValid,'parsleyError']  // throw 'InvalidString'\n  }\n};\n\n\n\n\n////////////////////////////////////////////////////////////////////////////////\n/////  BONUS STRING FORMATTING UTILITIES  \\////////////////////////////////////\n\n\n/////  ƒ  colorToHex()  ///////////////////////////////////////////////////\n\n    // returns hex string, 3,4,6, or 8 chars if that was entered, no #\n    // If alpha is 1 or empty, no alpha is returned i.e. abcf returns abc\n    \nexport function colorToHex (rgba = [0,0,0,''], allow3 = true) {\n    let R = Math.round(rgba[0]).toString(16).padStart(2, '0');\n    let G = Math.round(rgba[1]).toString(16).padStart(2, '0');\n    let B = Math.round(rgba[2]).toString(16).padStart(2, '0');\n    let A = (rgba[3] == '' || rgba[3] == 1) ? '' :\n             Math.round(rgba[3] * 255).toString(16).padStart(2, '0') ;\n\n         // this if returns a 3 character hex if possible - aabbcc becomes abc\n    if ( allow3 &&\n         parseInt(A, 16) % 17 == 0 &&\n         parseInt(A, 16) % 17 == 0 &&\n         parseInt(A, 16) % 17 == 0 &&\n         (parseInt(A, 16) % 17 == 0 || A == '')\n         ) {\n         return R.charAt(0) + G.charAt(0) + B.charAt(0) + A.charAt(0);\n    } else {\n      return R + G + B + A;\n    }\n}\n\n\n\n\n/////  ƒ  colorToRGB()  ///////////////////////////////////////////////////\n\n    // RGBAstr — returns rgb() or rgba() INT value string (0-255) no spaces\n    // If alpha is 1 or empty, no alpha is returned \n    \nexport function colorToRGB (rgba = [0,0,0,''], round = true) {\n    if (round) {\n      for (let i=0; i < 3; i++) {\n        rgba[i] = Math.round(rgba[i]);\n      } \n                // while RGB tuples round to int, A needs additional precision\n      rgba[3] = ( rgba[3] == '' || rgba[3] == 1) ? 1 :\n                  Math.trunc(rgba[3]*1000)*0.001; \n    }\n\n    return ( rgba[3] == '' || rgba[3] == 1) ? \n      'rgb(' + rgba[0] + ',' + rgba[1] + ',' + rgba[2] + ')' :\n      'rgba(' + rgba[0] + ',' + rgba[1] + ',' + rgba[2] + ',' + rgba[3] + ')';\n}\n\n\n/////\\  END UTILITIES  ///////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////\n\n\n///\\                                      //////////////////////////////////////\n////\\                                    //////////////////////////////////////\n/////\\  END COLOR PARSLEY 0.1.8  BLOCK  //////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////\n\n","///////////////////////////////////////////////////////////////////////////////\n/** @preserve\n/////    SAPC APCA - Advanced Perceptual Contrast Algorithm\n/////           Beta 0.1.9 W3 • contrast function only\n/////           DIST: W3 • Revision date: July 3, 2022\n/////    Function to parse color values and determine Lc contrast\n/////    Copyright © 2019-2022 by Andrew Somers. All Rights Reserved.\n/////    LICENSE: W3 LICENSE\n/////    CONTACT: Please use the ISSUES or DISCUSSIONS tab at:\n/////    https://github.com/Myndex/SAPC-APCA/\n/////\n///////////////////////////////////////////////////////////////////////////////\n/////\n/////    MINIMAL IMPORTS:\n/////      import { APCAcontrast, sRGBtoY, displayP3toY,\n/////               calcAPCA, fontLookupAPCA } from 'apca-w3';\n/////      import { colorParsley } from 'colorparsley';\n/////\n/////    FORWARD CONTRAST USAGE:\n/////      Lc = APCAcontrast( sRGBtoY( TEXTcolor ) , sRGBtoY( BACKGNDcolor ) );\n/////    Where the colors are sent as an rgba array [255,255,255,1]\n/////\n/////    Retrieving an array of font sizes for the contrast:\n/////      fontArray = fontLookupAPCA(Lc);\n/////\n/////    Live Demonstrator at https://www.myndex.com/APCA/\n// */\n///////////////////////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////////////////////////\n/////\n/////                  SAPC Method and APCA Algorithm\n/////   W3 Licensed Version: https://github.com/Myndex/apca-w3\n/////   GITHUB MAIN REPO: https://github.com/Myndex/SAPC-APCA\n/////   DEVELOPER SITE: https://git.myndex.com/\n/////\n/////   Acknowledgments and Thanks To:\n/////   • This project references the research & work of M.Fairchild, R.W.Hunt,\n/////     Drs. Bailey/Lovie-Kitchin, G.Legge, A.Arditi, M.Stone, C.Poynton, \n/////     L.Arend, M.Luo, E.Burns, R.Blackwell, P.Barton, M.Brettel, and many \n/////     others — see refs at https://www.myndex.com/WEB/WCAG_CE17polarity\n/////   • Bruce Bailey of USAccessBoard for his encouragement, ideas, & feedback\n/////   • Chris Lilly of W3C for continued review, examination, & oversight\n/////   • Chris Loiselle of Oracle for getting us back on track in a pandemic\n/////   • The many volunteer test subjects for participating in the studies.\n/////   • The many early adopters, beta testers, and code/issue contributors\n/////   • Principal research conducted at Myndex by A.Somers.\n/////\n////////////////////////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////////////////////////\n/////\n/////   *****  SAPC BLOCK  *****\n/////\n/////   For Evaluations, refer to this as: SAPC-8, 0.0.98G-series constant 4g\n/////            SAPC • S-LUV Advanced Predictive Color\n/////\n/////   SIMPLE VERSION — Only the basic APCA contrast predictor.\n/////\n/////   Included Extensions & Model Features in this file:\n/////       • SAPC-8 Core Contrast (Base APCA, non-clinical use only) \n/////       • G series constants, group \"G-4g\" using a 2.4 monitor exponent\n/////       • sRGB to Y, parses numeric sRGB color to luminance\n/////       • SoftToe black level soft clamp and flare compensation.\n/////\n/////\n////////////////////////////////////////////////////////////////////////////////\n/////\n/////               DISCLAIMER AND LIMITATIONS OF USE\n/////     APCA is an embodiment of certain suprathreshold contrast\n/////     prediction technologies and it is licensed to the W3 on a\n/////     limited basis for use in certain specific accessibility\n/////     guidelines for web content only. APCA may be used for \n/////     predicting colors for web content use without royalty.\n/////\n/////     However, Any such license excludes other use cases\n/////     not related to web content. Prohibited uses include\n/////     medical, clinical evaluation, human safety related,\n/////     aerospace, transportation, military applications, \n/////     and uses which are not specific to web based content\n/////     presented on self-illuminated displays or devices.\n/////\n////////////////////////////////////////////////////////////////////////////////\n\n//////////   APCA 0.1.9  G 4g USAGE  ///////////////////////////////////////////\n///\n///  The API for \"APCA 0.1.9\" is trivially simple.\n///  Send text and background sRGB numeric values to the sRGBtoY() function,\n///  and send the resulting text-Y and background-Y to the APCAcontrast function\n///  it returns a signed float with the numeric Lc contrast result.\n///  \n///  The two inputs are TEXT color and BACKGROUND color in that order.\n///  Each must be a numeric NOT a string, as this simple version has\n///  no string parsing utilities. EXAMPLE:\n///  ________________________________________________________________________\n///\n///     txtColor = colorParsley(0x123456); // color of the text\n///     bgColor  = colorParsley(0xabcdef); // color for the background\n///\n///     contrastLc = APCAcontrast( sRGBtoY(txtColor) , sRGBtoY(bgColor) );\n///  ________________________________________________________________________\n///\n///                  **********   QUICK START   **********\n///\n///  Each color must be a 24bit color (8 bit per channel) as a single integer\n///  (or 0x) sRGB encoded color, i.e. White is either the integer 16777216 or\n///  the hex 0xffffff. A float is returned with a positive or negative value.\n///  Negative values mean light text and a dark background, positive values\n///  mean dark text and a light background. 60.0, or -60.0 is a contrast\n///  \"sort of like\" the old WCAG 2's 4.5:1. NOTE: the total range is now less\n///  than ± 110, so output can be rounded to a signed INT but DO NOT output\n///  an absolute value - light text on dark BG should return a negative number.\n///\n///     *****  IMPORTANT: Do Not Mix Up Text and Background inputs.  *****\n///     ****************   APCA is polarity sensitive!   *****************\n///  \n////////////////////////////////////////////////////////////////////////////////\n\n\n////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n/////    BEGIN APCA  0.1.9  BLOCK       \\/////////////////////////////////////\n////                                     \\///////////////////////////////////\n///                                       \\/////////////////////////////////\n//                                         \\///////////////////////////////\n\n\n/////  DEPENDENCIES  /////\n\n// The following imports are not needed for the main APCA function,\n// but are needed for the shortcut/alias calcAPCA(), and for the\n// future invertAPCA function, which examines hue.\n\n       ////  (add slash to line start for local test mode, remove before push)\n/*    ////  LOCAL TESTING SWITCH for using test.html\n    import{colorParsley}from'../node_modules/colorparsley/src/colorparsley.js';\n/*/   //// TOGGLE\n    import { colorParsley } from 'colorparsley';\n// */ //// END LOCAL TESTING SWITCH\n\n\n/////  Module Scope Object Containing Constants  /////\n/////   APCA   0.0.98G - 4g - W3 Compatible Constants\n\n/////  𝒦 SA98G  ///////////////////////////////////\n    const SA98G = {\n\n        mainTRC: 2.4, // 2.4 exponent for emulating actual monitor perception\n\n            // For reverseAPCA\n        get mainTRCencode() { return 1 / this.mainTRC },\n\n              // sRGB coefficients\n        sRco: 0.2126729, \n        sGco: 0.7151522, \n        sBco: 0.0721750, \n\n              // G-4g constants for use with 2.4 exponent\n        normBG: 0.56, \n        normTXT: 0.57,\n        revTXT: 0.62,\n        revBG: 0.65,\n\n              // G-4g Clamps and Scalers\n        blkThrs: 0.022,\n        blkClmp: 1.414, \n        scaleBoW: 1.14,\n        scaleWoB: 1.14,\n        loBoWoffset: 0.027,\n        loWoBoffset: 0.027,\n        deltaYmin: 0.0005,\n        loClip: 0.1,\n\n          ///// MAGIC NUMBERS for UNCLAMP, for use with 0.022 & 1.414 /////\n         // Magic Numbers for reverseAPCA\n        mFactor: 1.94685544331710,\n        get mFactInv() { return 1 / this.mFactor},\n        mOffsetIn: 0.03873938165714010,\n        mExpAdj: 0.2833433964208690,\n        get mExp() { return this.mExpAdj / this.blkClmp},\n        mOffsetOut: 0.3128657958707580,\n      }\n\n\n\n\n//////////////////////////////////////////////////////////////////////////////\n//////////  APCA CALCULATION FUNCTIONS \\/////////////////////////////////////\n\n//////////  ƒ  APCAcontrast()  ////////////////////////////////////////////\nexport function APCAcontrast (txtY,bgY,places = -1) {\n                 // send linear Y (luminance) for text and background.\n                // txtY and bgY must be between 0.0-1.0\n               // IMPORTANT: Do not swap, polarity is important.\n\n  const icp = [0.0,1.1];     // input range clamp / input error check\n\n  if(isNaN(txtY)||isNaN(bgY)||Math.min(txtY,bgY)<icp[0]||\n                              Math.max(txtY,bgY)>icp[1]){\n    return 0.0;  // return zero on error\n    // return 'error'; // optional string return for error\n  };\n\n//////////   SAPC LOCAL VARS   /////////////////////////////////////////\n\n  let SAPC = 0.0;            // For raw SAPC values\n  let outputContrast = 0.0; // For weighted final values\n  let polCat = 'BoW';      // Alternate Polarity Indicator. N normal R reverse\n\n  // TUTORIAL\n\n  // Use Y for text and BG, and soft clamp black,\n  // return 0 for very close luminances, determine\n  // polarity, and calculate SAPC raw contrast\n  // Then scale for easy to remember levels.\n\n  // Note that reverse contrast (white text on black)\n  // intentionally returns a negative number\n  // Proper polarity is important!\n\n//////////   BLACK SOFT CLAMP   ////////////////////////////////////////\n\n          // Soft clamps Y for either color if it is near black.\n  txtY = (txtY > SA98G.blkThrs) ? txtY :\n                         txtY + Math.pow(SA98G.blkThrs - txtY, SA98G.blkClmp);\n  bgY = (bgY > SA98G.blkThrs) ? bgY :\n                          bgY + Math.pow(SA98G.blkThrs - bgY, SA98G.blkClmp);\n\n       ///// Return 0 Early for extremely low ∆Y\n  if ( Math.abs(bgY - txtY) < SA98G.deltaYmin ) { return 0.0; }\n\n\n//////////   APCA/SAPC CONTRAST - LOW CLIP (W3 LICENSE)  ///////////////\n\n  if ( bgY > txtY ) {  // For normal polarity, black text on white (BoW)\n\n              // Calculate the SAPC contrast value and scale\n    SAPC = ( Math.pow(bgY, SA98G.normBG) - \n             Math.pow(txtY, SA98G.normTXT) ) * SA98G.scaleBoW;\n\n            // Low Contrast smooth rollout to prevent polarity reversal\n           // and also a low-clip for very low contrasts\n    outputContrast = (SAPC < SA98G.loClip) ? 0.0 : SAPC - SA98G.loBoWoffset;\n\n  } else {  // For reverse polarity, light text on dark (WoB)\n           // WoB should always return negative value.\n    polCat = 'WoB';\n\n    SAPC = ( Math.pow(bgY, SA98G.revBG) - \n             Math.pow(txtY, SA98G.revTXT) ) * SA98G.scaleWoB;\n\n    outputContrast = (SAPC > -SA98G.loClip) ? 0.0 : SAPC + SA98G.loWoBoffset;\n  }\n\n         // return Lc (lightness contrast) as a signed numeric value \n        // Round to the nearest whole number as string is optional.\n       // Rounded can be a signed INT as output will be within ± 127 \n      // places = -1 returns signed float, 1 or more set that many places\n     // 0 returns rounded string, uses BoW or WoB instead of minus sign\n\n  if(places < 0 ){  // Default (-1) number out, all others are strings\n    return  outputContrast * 100.0;\n  } else if(places == 0 ){\n    return  Math.round(Math.abs(outputContrast)*100.0)+'<sub>'+polCat+'</sub>';\n  } else if(Number.isInteger(places)){\n    return  (outputContrast * 100.0).toFixed(places);\n  } else { return 0.0 }\n\n} // End APCAcontrast()\n\n\n\n\n/*  SWITCH -- WORK IN PROGRESS DO NOT USE\n//////////  ƒ  invertAPCA()  //////////////////////////////////////////////////\nexport function invertAPCA (\n      {knownColor: [128,128,128], knownType: 'bg', targetCnst: 75,\n       returnAs: 'object', unknownType: 'txt', hueInvert: false,\n       hueRange: 5, preserveSat: false }) {\n\n  //if (Math.abs(targetCnst) < 15) { return false }; // abs contrast must be > 15\n\n  let knownY = sRGBtoY (knownColor);\n  let unknownY = knownY, knownExp, unknownExp;\n  let min,max,knownLs,isBG = true;\n\n\n  if (knownType == 'bg' || knownType == 'background') {\n    knownLs = Math.pow(knownY, );\n    black = APCAcontrast(0,knownY);\n    white = APCAcontrast(1,knownY);\n  } else if  (knownType == 'txt' || knownType == 'text') {\n    isBG = false;\n    black = APCAcontrast(knownY,0);\n    white = APCAcontrast(knownY,1);\n  } else { return false } // return false on error\n\n\n/////   APCA   0.0.98G - 4g - W3 Compatible Constants   ////////////////////\n\n  const scale = contrast > 0 ? SA98G.scaleBoW : SA98G.scaleWoB;\n  const offset = contrast > 0 ? SA98G.loBoWoffset : -SA98G.loWoBoffset;\n\n\n    targetCnst = ( parseFloat(targetCnst) * 0.01 + offset ) / scale;\n\n              // Soft clamps Y if it is near black.\n    knownY = (knownY > SA98G.blkThrs) ? knownY :\n              knownY + Math.pow(SA98G.blkThrs - knownY, SA98G.blkClmp);\n                                  \n       // set the known and unknown exponents\n    if (isBG) {\n        knownExp = targetCnst > 0 ? SA98G.normBG : SA98G.revBG;\n        unknownExp = targetCnst > 0 ? SA98G.normTXT : SA98G.revTXT;\n        unknownY = Math.pow( Math.pow(knownY,knownExp) - targetCnst, 1/unknownExp );\n        if (isNaN(unknownY)) return false;\n    } else if (!isBG) {\n        knownExp = targetCnst > 0 ? SA98G.normTXT : SA98G.revTXT;\n        unknownExp = targetCnst > 0 ? SA98G.normBG : SA98G.revBG;\n        unknownY = Math.pow(targetCnst + Math.pow(knownY,knownExp), 1/unknownExp );\n        if (isNaN(unknownY)) return false;\n    }\n\n    //return contrast +'----'+unknownY;\n\n    if (unknownY > 1.06 || unknownY < 0) { return false } // return false on overflow\n    // if (unknownY < 0) { return false } // return false on underflow\n    //unknownY = Math.max(unknownY,0.0);\n    \n                //  unclamp\n    unknownY = (unknownY > SA98G.blkThrs) ? unknownY : \n    (Math.pow(((unknownY + SA98G.mOffsetIn)m* SA98G.mFactor),\n                           SA98G.mExp) * SA98G.mFactInv) - SA98G.mOffsetOut;\n    \n//    unknownY - 0.22 * Math.pow(unknownY*0.5, 1/blkClmp);\n\n    unknownY = Math.max(Math.min(unknownY,1.0),0.0);\n\n    let testedCnst = (isBG) ? APCAcontrast(unknownY,knownY) : \n                              APCAcontrast(knownY,unknownY);\n\n  if (returnAs === 'object') {\n    let hexB = ( Math.round(Math.pow(unknownY,SA98G.mainTRCencode) * 255)\n                ).toString(16).padStart(2,'0');\n    hexB = '#' + hexB + hexB + hexB;\n    return  {color: hexB, Lc: testedCnst, whiteLc: white, blackLc: black};\n  } else if (returnAs === 'hex') {\n    let hexB = ( Math.round(Math.pow(unknownY,SA98G.mainTRCencode) * 255)\n                ).toString(16).padStart(2,'0');\n    return  '#' + hexB + hexB + hexB;\n  } else if (returnAs === 'array') {\n    let colorB = Math.round(Math.pow(unknownY,SA98G.mainTRCencode) * 255);\n    let retUse = (knownType == 'bg') ? 'txtColor' : 'bgColor'\n    return  [colorB,colorB,colorB,1,retUse];\n  } else if (returnAs === 'Y' || returnAs === 'y') {\n    return  Math.max(0.0,unknownY);\n  } else { return false } // return knownY on error\n}\n//  */  // END SWITCH\n\n\n\n\n//////////  ƒ  reverseAPCA() DEPRECATED SOON ///////////////////////////////\nexport function reverseAPCA (contrast = 0,knownY = 1.0,\n                             knownType = 'bg',returnAs = 'hex') {\n    \n  if (Math.abs(contrast) < 9) { return false }; // abs contrast must be > 9\n  \n  let unknownY = knownY, knownExp, unknownExp;\n  \n/////   APCA   0.0.98G - 4g - W3 Compatible Constants   ////////////////////\n\n  const scale = contrast > 0 ? SA98G.scaleBoW : SA98G.scaleWoB;\n  const offset = contrast > 0 ? SA98G.loBoWoffset : -SA98G.loWoBoffset;\n\n\n  contrast = ( parseFloat(contrast) * 0.01 + offset ) / scale;\n\n            // Soft clamps Y if it is near black.\n  knownY = (knownY > SA98G.blkThrs) ? knownY :\n            knownY + Math.pow(SA98G.blkThrs - knownY, SA98G.blkClmp);\n                                \n     // set the known and unknown exponents\n  if (knownType == 'bg' || knownType == 'background') {\n      knownExp = contrast > 0 ? SA98G.normBG : SA98G.revBG;\n      unknownExp = contrast > 0 ? SA98G.normTXT : SA98G.revTXT;\n      unknownY = Math.pow( Math.pow(knownY,knownExp) - contrast, 1/unknownExp );\n      if (isNaN(unknownY)) return false;\n  } else if (knownType == 'txt' || knownType == 'text') {\n      knownExp = contrast > 0 ? SA98G.normTXT : SA98G.revTXT;\n      unknownExp = contrast > 0 ? SA98G.normBG : SA98G.revBG;\n      unknownY = Math.pow(contrast + Math.pow(knownY,knownExp), 1/unknownExp );\n      if (isNaN(unknownY)) return false;\n  } else { return false } // return false on error\n\n  //return contrast +'----'+unknownY;\n\n  if (unknownY > 1.06 || unknownY < 0) { return false } // return false on overflow\n  // if (unknownY < 0) { return false } // return false on underflow\n  //unknownY = Math.max(unknownY,0.0);\n  \n              //  unclamp\n  unknownY = (unknownY > SA98G.blkThrs) ? unknownY : \n  (Math.pow(((unknownY + SA98G.mOffsetIn) * SA98G.mFactor),\n                         SA98G.mExp) * SA98G.mFactInv) - SA98G.mOffsetOut;\n  \n//    unknownY - 0.22 * Math.pow(unknownY*0.5, 1/blkClmp);\n\n  unknownY = Math.max(Math.min(unknownY,1.0),0.0);\n\n  if (returnAs === 'hex') {\n    let hexB = ( Math.round(Math.pow(unknownY,SA98G.mainTRCencode) * 255)\n                ).toString(16).padStart(2,'0');\n\n    return  '#' + hexB + hexB + hexB;\n  } else if (returnAs === 'color') {\n    let colorB = Math.round(Math.pow(unknownY,SA98G.mainTRCencode) * 255);\n    let retUse = (knownType == 'bg') ? 'txtColor' : 'bgColor'\n    return  [colorB,colorB,colorB,1,retUse];\n  } else if (returnAs === 'Y' || returnAs === 'y') {\n    return  Math.max(0.0,unknownY);\n  } else { return false } // return knownY on error\n}\n\n\n\n\n//////////  ƒ  calcAPCA()  /////////////////////////////////////////////\nexport function calcAPCA (textColor, bgColor, places = -1, round = true) {\n\n        // Note that this function requires colorParsley !!\n\tlet bgClr = colorParsley(bgColor);\n\tlet txClr = colorParsley(textColor);\n\tlet hasAlpha = (txClr[3] == '' || txClr[3] == 1) ? false : true ;\n\n\tif (hasAlpha) { txClr = alphaBlend( txClr, bgClr, round); };\n\n\treturn APCAcontrast( sRGBtoY(txClr), sRGBtoY(bgClr), places)\n} // End calcAPCA()\n\n\n\n\n//////////////////////////////////////////////////////////////////////////////\n//////////  ƒ  fontLookupAPCA()  0.1.7 (G)  \\////////////////////////////////\n/////////                                    \\//////////////////////////////\n\nexport function fontLookupAPCA (contrast,places=2) {\n\n////////////////////////////////////////////////////////////////////////////\n/////  CONTRAST * FONT WEIGHT & SIZE  /////////////////////////////////////\n\n// Font size interpolations. Here the chart was re-ordered to put\n// the main contrast levels each on one line, instead of font size per line.\n// First column is LC value, then each following column is font size by weight\n\n// G G G G G G  Public Beta 0.1.7 (G) • MAY 28 2022\n\n// Lc values under 70 should have Lc 15 ADDED if used for body text\n// All font sizes are in px and reference font is Barlow\n\n// 999: prohibited - too low contrast\n// 777: NON TEXT at this minimum weight stroke\n// 666 - this is for spot text, not fluent-Things like copyright or placeholder.\n// 5xx - minimum font at this weight for content, 5xx % 500 for font-size\n// 4xx - minimum font at this weight for any purpose], 4xx % 400 for font-size\n\n// MAIN FONT SIZE LOOKUP\n\n//// ASCENDING SORTED  Public Beta 0.1.7 (G) • MAY 28 2022  ////\n\n//// Lc 45 * 0.2 = 9 which is the index for the row for Lc 45\n\n// MAIN FONT LOOKUP May 28 2022 EXPANDED\n// Sorted by Lc Value\n// First row is standard weights 100-900\n// First column is font size in px\n// All other values are the Lc contrast \n// 999 = too low. 777 = non-text and spot text only\n\n\nconst fontMatrixAscend = [\n    ['Lc',100,200,300,400,500,600,700,800,900],\n    [0,999,999,999,999,999,999,999,999,999],\n    [10,999,999,999,999,999,999,999,999,999],\n    [15,777,777,777,777,777,777,777,777,777],\n    [20,777,777,777,777,777,777,777,777,777],\n    [25,777,777,777,120,120,108,96,96,96],\n    [30,777,777,120,108,108,96,72,72,72],\n    [35,777,120,108,96,72,60,48,48,48],\n    [40,120,108,96,60,48,42,32,32,32],\n    [45,108,96,72,42,32,28,24,24,24],\n    [50,96,72,60,32,28,24,21,21,21],\n    [55,80,60,48,28,24,21,18,18,18],\n    [60,72,48,42,24,21,18,16,16,18],\n    [65,68,46,32,21.75,19,17,15,16,18],\n    [70,64,44,28,19.5,18,16,14.5,16,18],\n    [75,60,42,24,18,16,15,14,16,18],\n    [80,56,38.25,23,17.25,15.81,14.81,14,16,18],\n    [85,52,34.5,22,16.5,15.625,14.625,14,16,18],\n    [90,48,32,21,16,15.5,14.5,14,16,18],\n    [95,45,28,19.5,15.5,15,14,13.5,16,18],\n    [100,42,26.5,18.5,15,14.5,13.5,13,16,18],\n    [105,39,25,18,14.5,14,13,12,16,18],\n    [110,36,24,18,14,13,12,11,16,18],\n    [115,34.5,22.5,17.25,12.5,11.875,11.25,10.625,14.5,16.5],\n    [120,33,21,16.5,11,10.75,10.5,10.25,13,15],\n    [125,32,20,16,10,10,10,10,12,14],\n    ];\n\n\n// ASCENDING SORTED  Public Beta 0.1.7 (G) • MAY 28 2022 ////\n\n// DELTA - MAIN FONT LOOKUP May 28 2022 EXPANDED\n// EXPANDED  Sorted by Lc Value ••  DELTA\n// The pre-calculated deltas of the above array\n\nconst fontDeltaAscend = [\n    ['∆Lc',100,200,300,400,500,600,700,800,900],\n    [0,0,0,0,0,0,0,0,0,0],\n    [10,0,0,0,0,0,0,0,0,0],\n    [15,0,0,0,0,0,0,0,0,0],\n    [20,0,0,0,0,0,0,0,0,0],\n    [25,0,0,0,12,12,12,24,24,24],\n    [30,0,0,12,12,36,36,24,24,24],\n    [35,0,12,12,36,24,18,16,16,16],\n    [40,12,12,24,18,16,14,8,8,8],\n    [45,12,24,12,10,4,4,3,3,3],\n    [50,16,12,12,4,4,3,3,3,3],\n    [55,8,12,6,4,3,3,2,2,0],\n    [60,4,2,10,2.25,2,1,1,0,0],\n    [65,4,2,4,2.25,1,1,0.5,0,0],\n    [70,4,2,4,1.5,2,1,0.5,0,0],\n    [75,4,3.75,1,0.75,0.188,0.188,0,0,0],\n    [80,4,3.75,1,0.75,0.188,0.188,0,0,0],\n    [85,4,2.5,1,0.5,0.125,0.125,0,0,0],\n    [90,3,4,1.5,0.5,0.5,0.5,0.5,0,0],\n    [95,3,1.5,1,0.5,0.5,0.5,0.5,0,0],\n    [100,3,1.5,0.5,0.5,0.5,0.5,1,0,0],\n    [105,3,1,0,0.5,1,1,1,0,0],\n    [110,1.5,1.5,0.75,1.5,1.125,0.75,0.375,1.5,1.5],\n    [115,1.5,1.5,0.75,1.5,1.125,0.75,0.375,1.5,1.5],\n    [120,1,1,0.5,1,0.75,0.5,0.25,1,1],\n    [125,0,0,0,0,0,0,0,0,0],\n    ];\n\n  // APCA CONTRAST FONT LOOKUP TABLES\n  // Copyright © 2022 by Myndex Research and Andrew Somers. All Rights Reserved\n  // Public Beta 0.1.7 (G) • MAY 28 2022\n  // For the following arrays, the Y axis is contrastArrayLen\n  // The two x axis are weightArrayLen and scoreArrayLen\n\n  // MAY 28 2022\n\n  const weightArray = [0,100,200,300,400,500,600,700,800,900];\n  const weightArrayLen = weightArray.length; // X axis\n\n  let returnArray = [contrast.toFixed(places),0,0,0,0,0,0,0,0,0,];\n  const returnArrayLen = returnArray.length; // X axis\n\n\n  const contrastArrayAscend = ['lc',0,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,125,];\n  const contrastArrayLenAsc = contrastArrayAscend.length; // Y azis\n\n//// Lc 45 * 0.2 = 9, and 9 is the index for the row for Lc 45\n\n  let tempFont = 777;\n  contrast = Math.abs(contrast); // Polarity unneeded for LUT\n  const factor = 0.2; // 1/5 as LUT is in increments of 5\n  const index = (contrast == 0) ?\n                 1 : (contrast * factor) | 0 ; // LUT row... n|0 is bw floor\n  let w = 0; \n    // scoreAdj interpolates the needed font side per the Lc\n  let scoreAdj = (contrast - fontMatrixAscend[index][w]) * factor;\n\n  w++; // determines column in font matrix LUT\n\n\n/////////  Font and Score Interpolation  \\/////////////////////////////////\n\n// populate returnArray with interpolated values\n\n  for (; w < weightArrayLen; w++) {\n\n    tempFont = fontMatrixAscend[index][w]; \n\n    if (tempFont > 400) { // declares a specific minimum for the weight.\n        returnArray[w] = tempFont;\n    } else if (contrast < 14.5 ) {\n        returnArray[w] = 999; //  999 = do not use for anything\n    } else if (contrast < 29.5 ) {\n        returnArray[w] = 777; // 777 =  non-text only\n    } else {\n                // INTERPOLATION OF FONT SIZE\n               // sets level for 0.5px size increments of smaller fonts\n              // Note bitwise (n|0) instead of floor\n      (tempFont > 24) ?\n        returnArray[w] =\n            Math.round(tempFont - (fontDeltaAscend[index][w] * scoreAdj)) :\n        returnArray[w] =\n            tempFont - ((2.0 * fontDeltaAscend[index][w] * scoreAdj) | 0) * 0.5;\n                                                      // (n|0) is bitwise floor\n    }\n  }\n/////////  End Interpolation  ////////////////////////////////////////////\n\n  return returnArray\n} // end fontLookupAPCA\n\n/////////\\                                      ///////////////////////////\\\n//////////\\  END  fontLookupAPCA()  0.1.7 (G)  /////////////////////////////\\\n/////////////////////////////////////////////////////////////////////////////\\\n\n\n\n\n//////////////////////////////////////////////////////////////////////////////\n//////////  LUMINANCE CONVERTERS  |//////////////////////////////////////////\n\n\n//////////  ƒ  sRGBtoY()  //////////////////////////////////////////////////\nexport function sRGBtoY (rgb = [0,0,0]) { // send sRGB 8bpc (0xFFFFFF) or string\n\n// NOTE: Currently expects 0-255\n\n/////   APCA   0.0.98G - 4g - W3 Compatible Constants   ////////////////////\n/*\nconst mainTRC = 2.4; // 2.4 exponent emulates actual monitor perception\n    \nconst sRco = 0.2126729, \n      sGco = 0.7151522, \n      sBco = 0.0721750; // sRGB coefficients\n      */\n// Future:\n// 0.2126478133913640\t0.7151791475336150\t0.0721730390750208\n// Derived from:\n// xW\tyW\tK\txR\tyR\txG\tyG\txB\tyB\n// 0.312720\t0.329030\t6504\t0.640\t0.330\t0.300\t0.600\t0.150\t0.060\n\n         // linearize r, g, or b then apply coefficients\n        // and sum then return the resulting luminance\n\n  function simpleExp (chan) { return Math.pow(chan/255.0, SA98G.mainTRC); };\n\n  return SA98G.sRco * simpleExp(rgb[0]) +\n         SA98G.sGco * simpleExp(rgb[1]) +\n         SA98G.sBco * simpleExp(rgb[2]);\n         \n} // End sRGBtoY()\n\n\n\n\n//////////  ƒ  displayP3toY()  /////////////////////////////////////////////\nexport function displayP3toY (rgb = [0,0,0]) { // send rgba array\n\n// NOTE: Currently Apple has the tuple as 0.0 to 1.0, NOT 255\n\n/////   APCA   0.0.98G - 4g - W3 Compatible Constants   ////////////////////\n\nconst mainTRC = 2.4; // 2.4 exponent emulates actual monitor perception\n                    // Pending evaluation, because, Apple...\n    \nconst sRco = 0.2289829594805780, \n      sGco = 0.6917492625852380, \n      sBco = 0.0792677779341829; // displayP3 coefficients\n\n// Derived from:\n// xW\tyW\tK\txR\tyR\txG\tyG\txB\tyB\n// 0.312720\t0.329030\t6504\t0.680\t0.320\t0.265\t0.690\t0.150\t0.060\n\n         // linearize r, g, or b then apply coefficients\n        // and sum then return the resulting luminance\n\n  function simpleExp (chan) { return Math.pow(chan, mainTRC); };\n\n  return sRco * simpleExp(rgb[0]) +\n         sGco * simpleExp(rgb[1]) +\n         sBco * simpleExp(rgb[2]);\n\n} // End displayP3toY()\n\n\n\n\n//////////  ƒ  adobeRGBtoY()  /////////////////////////////////////////////\nexport function adobeRGBtoY (rgb = [0,0,0]) { // send rgba array\n\n// NOTE: Currently expects 0-255\n\n/////   APCA   0.0.98G - 4g - W3 Compatible Constants   ////////////////////\n\nconst mainTRC = 2.35; // 2.35 exponent emulates actual monitor perception\n                     // Pending evaluation...\n    \nconst sRco = 0.2973550227113810, \n      sGco = 0.6273727497145280, \n      sBco = 0.0752722275740913; // adobeRGB coefficients\n\n// Derived from:\n// xW\tyW\tK\txR\tyR\txG\tyG\txB\tyB\n// 0.312720\t0.329030\t6504\t0.640\t0.330\t0.210\t0.710\t0.150\t0.060\n\n         // linearize r, g, or b then apply coefficients\n        // and sum then return the resulting luminance\n\n  function simpleExp (chan) { return Math.pow(chan/255.0, mainTRC); };\n\n  return sRco * simpleExp(rgb[0]) +\n         sGco * simpleExp(rgb[1]) +\n         sBco * simpleExp(rgb[2]);\n\n} // End displayP3toY()\n\n\n\n\n////////////////////////////////////////////////////////////////////////////\n//////////  UTILITIES  \\///////////////////////////////////////////////////\n\n\n//////////  ƒ  alphaBlend()  /////////////////////////////////////////////\n\n                      // send rgba array for text/icon, rgb for background.\n                     // Only foreground allows alpha of 0.0 to 1.0 \n                    // This blends using gamma encoded space (standard)\n                   // rounded 0-255 or set round=false for number 0.0-255.0\nexport function alphaBlend (rgbaFG=[0,0,0,1.0], rgbBG=[0,0,0], round = true ) {\n\t\n\trgbaFG[3] = Math.max(Math.min(rgbaFG[3], 1.0), 0.0); // clamp alpha 0-1\n\tlet compBlend = 1.0 - rgbaFG[3];\n\tlet rgbOut = [0,0,0,1,true]; // or just use rgbBG to retain other elements?\n\t\n\tfor (let i=0;i<3;i++) {\n\t\trgbOut[i] = rgbBG[i] * compBlend + rgbaFG[i] * rgbaFG[3];\n\t\tif (round) rgbOut[i] = Math.min(Math.round(rgbOut[i]),255);\n\t};\n  return rgbOut;\n} // End alphaBlend()\n\n\n\n\n//\\                                     ////////////////////////////////////////\n///\\                                   ////////////////////////////////////////\n////\\                                 ////////////////////////////////////////\n/////\\  END APCA 0.1.9  G-4g  BLOCK  ////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////\n","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nconst base3 = (t, p1, p2, p3, p4) => {\n  const t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4;\n  const t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n  return t * t2 - 3 * p1 + 3 * p2;\n};\n\nconst bezlen = (x1, y1, x2, y2, x3, y3, x4, y4, z) => {\n  if (z == null) {\n    z = 1;\n  }\n  z = Math.max(0, Math.min(z, 1));\n  const z2 = z / 2;\n  const n = 12;\n  const Tvalues = [-.1252, .1252, -.3678, .3678, -.5873, .5873, -.7699, .7699, -.9041, .9041, -.9816, .9816];\n  const Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472];\n  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    const ct = z2 * Tvalues[i] + z2;\n    const xbase = base3(ct, x1, x2, x3, x4);\n    const ybase = base3(ct, y1, y2, y3, y4);\n    const comb = xbase * xbase + ybase * ybase;\n    sum += Cvalues[i] * Math.sqrt(comb);\n  }\n  return z2 * sum;\n};\n\nconst findDotsAtSegment = (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) => {\n  const t1 = 1 - t;\n  const t12 = t1 * t1;\n  const t13 = t12 * t1;\n  const t2 = t * t;\n  const t3 = t2 * t;\n  const x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x;\n  const y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y;\n  return { x, y };\n};\n\nconst catmullRom2bezier = (crp, z) => {\n  const d = [];\n  let end = { x: +crp[0], y: +crp[1] };\n  for (let i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n    const p = [\n      { x: +crp[i - 2], y: +crp[i - 1] },\n      { x: +crp[i], y: +crp[i + 1] },\n      { x: +crp[i + 2], y: +crp[i + 3] },\n      { x: +crp[i + 4], y: +crp[i + 5] },\n    ];\n    if (z) {\n      if (!i) {\n        p[0] = { x: +crp[iLen - 2], y: +crp[iLen - 1] };\n      } else if (iLen - 4 === i) {\n        p[3] = { x: +crp[0], y: +crp[1] };\n      } else if (iLen - 2 === i) {\n        p[2] = { x: +crp[0], y: +crp[1] };\n        p[3] = { x: +crp[2], y: +crp[3] };\n      }\n    } else if (iLen - 4 === i) {\n      p[3] = p[2];\n    } else if (!i) {\n      p[0] = { x: +crp[i], y: +crp[i + 1] };\n    }\n    d.push([\n      end.x,\n      end.y,\n      (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n      (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n      (p[1].x + 6 * p[2].x - p[3].x) / 6,\n      (p[1].y + 6 * p[2].y - p[3].y) / 6,\n      p[2].x,\n      p[2].y,\n    ]);\n    end = p[2];\n  }\n\n  return d;\n};\n\nconst bezlen2 = (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) => {\n  const n = 5;\n  let x0 = p1x;\n  let y0 = p1y;\n  let len = 0;\n  for (let i = 1; i < n; i++) {\n    const { x, y } = findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, i / n);\n    len += Math.hypot(x - x0, y - y0);\n    x0 = x;\n    y0 = y;\n  }\n  len += Math.hypot(p2x - x0, p2y - y0);\n  return len;\n};\n\nconst prepareCurve = (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) => {\n  const len = Math.floor(bezlen2(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) * .75);\n  const fs = [];\n  let oldi = 0;\n  for (let i = 0; i <= len; i++) {\n    const t = i / len;\n    const xy = findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t);\n    const index = Math.round(xy.x);\n    fs[index] = xy.y;\n    if (index - oldi > 1) {\n      const s = fs[oldi];\n      const f = fs[index];\n      for (let j = oldi + 1; j < index; j++) {\n        fs[j] = s + ((f - s) / (index - oldi)) * (j - oldi);\n      }\n    }\n    oldi = index;\n  }\n  return (x) => fs[Math.round(x)] || null;\n};\n\n\nexport {\n  bezlen,\n  findDotsAtSegment,\n  prepareCurve,\n  catmullRom2bezier\n};\n\n","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { APCAcontrast, sRGBtoY } from \"apca-w3\";\nimport chroma from \"chroma-js\";\nimport { catmullRom2bezier, prepareCurve } from \"./curve\";\n\nconst colorSpaces = {\n  CAM02: 'jab',\n  CAM02p: 'jch',\n  HEX: 'hex',\n  HSL: 'hsl',\n  HSLuv: 'hsluv',\n  HSV: 'hsv',\n  LAB: 'lab',\n  LCH: 'lch', // named per correct color definition order\n  RGB: 'rgb',\n  OKLAB: 'oklab',\n  OKLCH: 'oklch'\n};\n\nfunction round(x, n = 0) {\n  const ten = 10 ** n;\n  return Math.round(x * ten) / ten;\n}\n\nfunction multiplyRatios(ratio, multiplier) {\n  let r;\n  // Normalize contrast ratios before multiplying by this._contrast\n  // by making 1 = 0. This ensures consistent application of increase/decrease\n  // in contrast ratios. Then add 1 back to number for contextual ratio value.\n  if (ratio > 1) {\n    r = (ratio - 1) * multiplier + 1;\n  } else if (ratio < -1) {\n    r = (ratio + 1) * multiplier - 1;\n  } else {\n    r = 1;\n  }\n\n  return round(r, 2);\n}\n\nfunction cArray(c) {\n  return chroma(String(c)).jch();\n}\n\nfunction hsluvArray(c) {\n  return chroma(String(c)).hsluv();\n}\n\nfunction smoothScale(ColorsArray, domains, space) {\n  const points = [[], [], []];\n  ColorsArray.forEach((color, i) => points.forEach((point, j) => point.push(domains[i], color[j])));\n  if (space === 'hcl') {\n    const point = points[1];\n    for (let i = 1; i < point.length; i += 2) {\n      if (Number.isNaN(point[i])) {\n        point[i] = 0;\n      }\n    }\n  }\n  points.forEach((point) => {\n    const nans = [];\n    // leading NaNs\n    for (let i = 1; i < point.length; i += 2) {\n      if (Number.isNaN(point[i])) {\n        nans.push(i);\n      } else {\n        nans.forEach((j) => { point[j] = point[i]; });\n        nans.length = 0;\n        break;\n      }\n    }\n    // all are grey case\n    if (nans.length) {\n      // hue is not important except for JCh\n      const safeJChHue = chroma('#ccc').jch()[2];\n      nans.forEach((j) => { point[j] = safeJChHue; });\n    }\n    nans.length = 0;\n    // trailing NaNs\n    for (let i = point.length - 1; i > 0; i -= 2) {\n      if (Number.isNaN(point[i])) {\n        nans.push(i);\n      } else {\n        nans.forEach((j) => { point[j] = point[i]; });\n        break;\n      }\n    }\n    // other NaNs\n    for (let i = 1; i < point.length; i += 2) {\n      if (Number.isNaN(point[i])) {\n        point.splice(i - 1, 2);\n        i -= 2;\n      }\n    }\n    // force hue to go on the shortest route\n    if (space in { hcl: 1, hsl: 1, hsluv: 1, hsv: 1, jch: 1 }) {\n      let prev = point[1];\n      let addon = 0;\n      for (let i = 3; i < point.length; i += 2) {\n        const p = point[i] + addon;\n        const zero = Math.abs(prev - p);\n        const plus = Math.abs(prev - (p + 360));\n        const minus = Math.abs(prev - (p - 360));\n        if (plus < zero && plus < minus) {\n          addon += 360;\n        }\n        if (minus < zero && minus < plus) {\n          addon -= 360;\n        }\n        point[i] += addon;\n        prev = point[i];\n      }\n    }\n  });\n  const prep = points.map((point) => catmullRom2bezier(point).map((curve) => prepareCurve(...curve)));\n  return (d) => {\n    const ch = prep.map((p) => {\n      for (let i = 0; i < p.length; i++) {\n        const res = p[i](d);\n        if (res != null) {\n          return res;\n        }\n      }\n      return null;\n    });\n\n    if (space === 'jch' && ch[1] < 0) {\n      ch[1] = 0;\n    }\n\n    return chroma[space](...ch).hex();\n  };\n}\n\nfunction makePowScale(exp = 1, domains = [0, 1], range = [0, 1]) {\n  const m = (range[1] - range[0]) / (domains[1] ** exp - domains[0] ** exp);\n  const c = range[0] - m * domains[0] ** exp;\n  return (x) => m * x ** exp + c;\n}\n\nfunction createScale({\n  swatches,\n  colorKeys,\n  colorspace = 'LAB',\n  shift = 1,\n  fullScale = true,\n  smooth = false,\n  distributeLightness = 'linear',\n  sortColor = true,\n  asFun = false,\n} = {}) {\n  const space = colorSpaces[colorspace];\n  if (!space) {\n    throw new Error(`Colorspace “${colorspace}” not supported`);\n  }\n  if (!colorKeys) {\n    throw new Error(`Colorkeys missing: returned “${colorKeys}”`);\n  }\n\n  let domains;\n  \n  if(fullScale) {\n    // Set domain of each color key based on percentage (as HSLuv lightness)\n    // against the full scale of black to white\n    domains = colorKeys\n      .map((key) => swatches - swatches * (chroma(key).jch()[0] / 100))\n      .sort((a, b) => a - b)\n      .concat(swatches);\n      \n    domains.unshift(0);\n  } else {\n    // Domains need to be a percentage of the available luminosity range\n    let lums = colorKeys.map((c) => chroma(c).jch()[0] / 100)\n    let min = Math.min(...lums);\n    let max = Math.max(...lums);\n\n    domains = lums\n      .map((lum) => { \n        if(lum === 0 || isNaN((lum - min) / (max - min))) return 0;\n        else return swatches - (lum - min) / (max - min) * swatches;\n      })\n      .sort((a, b) => a - b)\n  }\n\n  // Test logarithmic domain (for non-contrast-based scales)\n  let sqrtDomains = makePowScale(shift, [1, swatches], [1, swatches]);\n  sqrtDomains = domains.map((d) => Math.max(0, sqrtDomains(d)));\n\n  // Transform square root in order to smooth gradient\n  domains = sqrtDomains;\n  // if(distributeLightness === 'parabolic') {\n  //   const parabola = (x) => {return (Math.sqrt(x, 2))} \n  //   let percDomains = sqrtDomains.map((d) => {return d/swatches})\n  //   let newDomains = percDomains.map((d) => {return parabola(d) * swatches})\n  //   domains = newDomains;\n  // }\n  if(distributeLightness === 'polynomial') {\n    // Equation based on polynomial mapping of lightness values in CIECAM02 \n    // of the RgBu diverging color scale.\n    // const polynomial = (x) => { return 2.53906249999454 * Math.pow(x,4) - 6.08506944443434 * Math.pow(x,3) + 5.11197916665992 * Math.pow(x,2) - 2.56537698412552 * x + 0.999702380952327; }\n    // const polynomial = (x) => { return Math.sqrt(Math.sqrt(x)) }\n    const polynomial = (x) => { return Math.sqrt(Math.sqrt((Math.pow(x, 2.25) + Math.pow(x, 4))/2)) }\n\n    let percDomains = sqrtDomains.map((d) => {return d/swatches})\n    let newDomains = percDomains.map((d) => {return polynomial(d) * swatches})\n    domains = newDomains;\n  }\n\n  const sortedColor = colorKeys\n    // Convert to HSLuv and keep track of original indices\n    .map((c, i) => ({ colorKeys: cArray(c), index: i }))\n    // Sort by lightness\n    .sort((c1, c2) => c2.colorKeys[0] - c1.colorKeys[0])\n    // Retrieve original RGB color\n    .map((data) => colorKeys[data.index]);\n\n  let ColorsArray = [];\n\n  let scale;\n  if (fullScale) {\n    const white = space === 'lch' ? chroma.lch(...chroma('#fff').lch()) : '#ffffff';\n    const black = space === 'lch' ? chroma.lch(...chroma('#000').lch()) : '#000000';\n    ColorsArray = [\n      white,\n      ...sortedColor,\n      black,\n    ];\n  } else {\n    if(sortColor) ColorsArray = sortedColor;\n    else ColorsArray = colorKeys;\n  }\n\n  let smoothScaleArray;\n  if (smooth) {\n    const stringColors = ColorsArray;\n    ColorsArray = ColorsArray.map((d) => chroma(String(d))[space]());\n    if (space === 'hcl') {\n      // special case for HCL if C is NaN we should treat it as 0\n      ColorsArray.forEach((c) => { c[1] = Number.isNaN(c[1]) ? 0 : c[1]; });\n    }\n    if (space === 'jch') {\n      // JCh has some “random” hue for grey colors.\n      // Replacing it to NaN, so we can apply the same method of dealing with them.\n      for (let i = 0; i < stringColors.length; i++) {\n        const color = chroma(stringColors[i]).hcl();\n        if (Number.isNaN(color[0])) {\n          ColorsArray[i][2] = NaN;\n        }\n      }\n    }\n    scale = smoothScale(ColorsArray, domains, space);\n\n    smoothScaleArray = new Array(swatches).fill().map((_, d) => scale(d));\n  } else {\n    scale = chroma.scale(ColorsArray.map((color) => {\n      if (typeof color === 'object' && color.constructor === chroma.Color) {\n        return color;\n      }\n      return String(color);\n    })).domain(domains).mode(space);\n  }\n  if (asFun) {\n    return scale;\n  } \n\n  // const Colors = new Array(swatches).fill().map((_, d) => chroma(scale(d)).hex());\n  const Colors = \n    (!smooth || smooth === false) ? \n    scale.colors(swatches) : \n    smoothScaleArray;\n\n  const colors = Colors.filter((el) => el != null);\n\n  return colors;\n}\n\nfunction removeDuplicates(originalArray, prop) {\n  const newArray = [];\n  const lookupObject = {};\n  const keys1 = Object.keys(originalArray);\n\n  keys1.forEach((i) => { lookupObject[originalArray[i][prop]] = originalArray[i]; });\n\n  const keys2 = Object.keys(lookupObject);\n  keys2.forEach((i) => newArray.push(lookupObject[i]));\n  return newArray;\n}\n\nfunction uniq(a) {\n  return Array.from(new Set(a));\n}\n\n// Helper function to change any NaN to a zero\nfunction filterNaN(x) {\n  if (Number.isNaN(x)) {\n    return 0;\n  }\n  return x;\n}\n\n// Helper function for rounding color values to whole numbers\nfunction convertColorValue(color, format, object = false) {\n  if (!color) {\n    throw new Error(`Cannot convert color value of “${color}”`);\n  }\n  if (!colorSpaces[format]) {\n    throw new Error(`Cannot convert to colorspace “${format}”`);\n  }\n  const space = colorSpaces[format];\n  const colorObj = chroma(String(color))[space]();\n  if (format === 'HSL') {\n    colorObj.pop();\n  }\n  if (format === 'HEX') {\n    if (object) {\n      const rgb = chroma(String(color)).rgb();\n      return { r: rgb[0], g: rgb[1], b: rgb[2] };\n    }\n    return colorObj;\n  }\n\n  const colorObject = {};\n  let newColorObj = colorObj.map(filterNaN);\n\n  newColorObj = newColorObj.map((ch, i) => {\n    let rnd = round(ch);\n    let j = i;\n    if (space === 'hsluv') {\n      j += 2;\n    }\n    let letter = space.charAt(j);\n    if (space === 'jch' && letter === 'c') {\n      letter = 'C';\n    }\n    colorObject[letter === 'j' ? 'J' : letter] = rnd;\n    if (space in { lab: 1, lch: 1, jab: 1, jch: 1 }) {\n      if (!object) {\n        if (letter === 'l' || letter === 'j') {\n          rnd += '%';\n        }\n        if (letter === 'h') {\n          rnd += 'deg';\n        }\n      }\n    } else if (space !== 'hsluv') {\n      if (letter === 's' || letter === 'l' || letter === 'v') {\n        colorObject[letter] = round(ch, 2);\n        if (!object) {\n          rnd = round(ch * 100);\n          rnd += '%';\n        }\n      } else if (letter === 'h' && !object) {\n        rnd += 'deg';\n      }\n    }\n    return rnd;\n  });\n\n  const stringName = space;\n  const stringValue = `${stringName}(${newColorObj.join(', ')})`;\n\n  if (object) {\n    return colorObject;\n  }\n  return stringValue;\n}\n\nfunction luminance(r, g, b) {\n  const a = [r, g, b].map((v) => {\n    v /= 255;\n    return v <= 0.03928 ? v / 12.92 : ((v + 0.055) / 1.055) ** 2.4;\n  });\n  return (a[0] * 0.2126) + (a[1] * 0.7152) + (a[2] * 0.0722);\n}\n\nfunction getContrast(color, base, baseV, method='wcag2') {\n  if (baseV === undefined) { // If base is an array and baseV undefined\n    const baseLightness = chroma.rgb(...base).hsluv()[2];\n    baseV = round(baseLightness / 100, 2);\n  }\n\n  if(method === 'wcag2') {\n    const colorLum = luminance(color[0], color[1], color[2]);\n    const baseLum = luminance(base[0], base[1], base[2]);\n  \n    const cr1 = (colorLum + 0.05) / (baseLum + 0.05); // will return value >=1 if color is darker than background\n    const cr2 = (baseLum + 0.05) / (colorLum + 0.05); // will return value >=1 if color is lighter than background\n  \n    if (baseV < 0.5) { // Dark themes\n      // If color is darker than background, return cr1 which will be whole number\n      if (cr1 >= 1) {\n        return cr1;\n      }\n      // If color is lighter than background, return cr2 as negative whole number\n      return -cr2;\n    }\n    // Light themes\n    // If color is lighter than background, return cr2 which will be whole number\n    if (cr1 < 1) {\n      return cr2;\n    }\n    // If color is darker than background, return cr1 as negative whole number\n    if (cr1 === 1) {\n      return cr1;\n    }\n    return -cr1;\n  } else if (method === 'wcag3') {\n    return (baseV < 0.5) ? APCAcontrast( sRGBtoY( color ), sRGBtoY( base ) ) * -1 : APCAcontrast( sRGBtoY( color ), sRGBtoY( base ) );\n  } else {\n    throw new Error(`Contrast calculation method ${method} unsupported; use 'wcag2' or 'wcag3'`);\n  }\n}\n\nfunction minPositive(r, formula) {\n  if (!r) { throw new Error('Array undefined'); }\n  if (!Array.isArray(r)) { throw new Error('Passed object is not an array'); }\n  const min = (formula === 'wcag2') ? 0 : 1;\n  return Math.min(...r.filter((val) => val >= min));\n}\n\nfunction ratioName(r, formula) {\n  if (!r) { throw new Error('Ratios undefined'); }\n  r = r.sort((a, b) => a - b); // sort ratio array in case unordered\n\n  const min = minPositive(r, formula);\n  const minIndex = r.indexOf(min);\n  const nArr = []; // names array\n\n  const rNeg = r.slice(0, minIndex);\n  const rPos = r.slice(minIndex, r.length);\n\n  // Name the negative values\n  for (let i = 0; i < rNeg.length; i++) {\n    const d = 1 / (rNeg.length + 1);\n    const m = d * 100;\n    const nVal = m * (i + 1);\n    nArr.push(round(nVal));\n  }\n  // Name the positive values\n  for (let i = 0; i < rPos.length; i++) {\n    nArr.push((i + 1) * 100);\n  }\n  nArr.sort((a, b) => a - b); // just for safe measure\n\n  return nArr;\n}\n\nconst searchColors = (color, bgRgbArray, baseV, ratioValues, formula) => {\n  const colorLen = 3000;\n  const colorScale = createScale({\n    swatches: colorLen,\n    colorKeys: color._modifiedKeys,\n    colorspace: color._colorspace,\n    shift: 1,\n    smooth: color._smooth,\n    asFun: true,\n  });\n  const ccache = {};\n  // let ccounter = 0;\n  const getContrast2 = (i) => {\n    if (ccache[i]) {\n      return ccache[i];\n    }\n    const rgb = chroma(colorScale(i)).rgb();\n    const c = getContrast(rgb, bgRgbArray, baseV, formula);\n    ccache[i] = c;\n    // ccounter++;\n    return c;\n  };\n  const colorSearch = (x) => {\n    const first = getContrast2(0);\n    const last = getContrast2(colorLen);\n    const dir = first < last ? 1 : -1;\n    const ε = 0.01;\n    x += 0.005 * Math.sign(x);\n    let step = colorLen / 2;\n    let dot = step;\n    let val = getContrast2(dot);\n    let counter = 100;\n    while (Math.abs(val - x) > ε && counter) {\n      counter--;\n      step /= 2;\n      if (val < x) {\n        dot += step * dir;\n      } else {\n        dot -= step * dir;\n      }\n      val = getContrast2(dot);\n    }\n    return round(dot, 3);\n  };\n  const outputColors = [];\n  ratioValues.forEach((ratio) => outputColors.push(colorScale(colorSearch(+ratio))));\n  return outputColors;\n};\n\nexport {\n  cArray,\n  hsluvArray,\n  colorSpaces,\n  convertColorValue,\n  createScale,\n  getContrast,\n  luminance,\n  minPositive,\n  multiplyRatios,\n  ratioName,\n  removeDuplicates,\n  round,\n  searchColors,\n  uniq,\n};\n","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport chroma from \"chroma-js\";\nimport { colorSpaces, createScale } from \"./utils\";\n\nclass Color {\n  constructor({ name, colorKeys, colorspace = 'RGB', ratios, smooth = false, output = 'HEX', saturation = 100 }) {\n    this._name = name;\n    this._colorKeys = colorKeys;\n    this._modifiedKeys = colorKeys;\n    this._colorspace = colorspace;\n    this._ratios = ratios;\n    this._smooth = smooth;\n    this._output = output;\n    this._saturation = saturation;\n    \n    if (!this._name) {\n      throw new Error('Color missing name');\n    }\n    if (!this._colorKeys) {\n      throw new Error('Color Keys are undefined');\n    }\n    if (!colorSpaces[this._colorspace]) {\n      throw new Error(`Colorspace “${colorspace}” not supported`);\n    }\n    if (!colorSpaces[this._output]) {\n      throw new Error(`Output “${colorspace}” not supported`);\n    }\n    // validate color keys\n    for (let i = 0; i < this._colorKeys.length; i++) {\n      if (!chroma.valid(this._colorKeys[i])) {\n        throw new Error(`Invalid Color Key “${this._colorKeys[i]}”`);\n      }\n    }\n\n    // Run function to generate this array of colors:\n    this._colorScale = null;\n  }\n\n  // Setting and getting properties of the Color class\n  set colorKeys(colorKeys) {\n    this._colorKeys = colorKeys;\n    this._updateColorSaturation();\n  }\n\n  get colorKeys() {\n    return this._colorKeys;\n  }\n\n  set saturation(saturation) {\n    this._saturation = saturation;\n    this._updateColorSaturation();\n  }\n\n  get saturation() {\n    return this._saturation;\n  }\n\n  set colorspace(colorspace) {\n    this._colorspace = colorspace;\n    this._generateColorScale();\n  }\n\n  get colorspace() {\n    return this._colorspace;\n  }\n\n  set ratios(ratios) {\n    this._ratios = ratios;\n  }\n\n  get ratios() {\n    return this._ratios;\n  }\n\n  set name(name) {\n    this._name = name;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  set smooth(smooth) {\n    if(smooth === true || smooth === 'true') this._smooth = smooth;\n    else this._smooth = false;\n    \n    this._generateColorScale();\n  }\n\n  get smooth() {\n    return this._smooth;\n  }\n\n  set output(output) {\n    this._output = output;\n    this._colorScale = null;\n  }\n\n  get output() {\n    return this._output;\n  }\n\n  get colorScale() {\n    if (!this._colorScale) {\n      this._generateColorScale();\n    }\n    return this._colorScale;\n  }\n\n  _updateColorSaturation() {\n    let newColorKeys = [];\n    this._colorKeys.forEach(key => {\n      let currentHsluv = chroma(`${key}`).hsluv();\n      let currentSaturation = currentHsluv[1];\n      let newSaturation = currentSaturation * (this._saturation / 100);\n      let newHsluv = chroma.hsluv(currentHsluv[0], newSaturation, currentHsluv[2]);\n      let newColor = chroma.rgb(newHsluv).hex();\n      newColorKeys.push(newColor);\n    });\n    // set color keys with new modified array\n    this._modifiedKeys = newColorKeys;\n\n    this._generateColorScale();\n  }\n\n  _generateColorScale() {\n    // This would create 3000 color values based on all parameters\n    // and return an array of colors:\n    this._colorScale = createScale({\n      swatches: 3000,\n      colorKeys: this._modifiedKeys,\n      colorspace: this._colorspace,\n      shift: 1,\n      smooth: this._smooth,\n      asFun: true,\n    });\n  }\n}\nexport { Color };\n","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { hsluvArray, convertColorValue, createScale, removeDuplicates } from \"./utils\";\n\nimport { Color } from \"./color\";\n\nclass BackgroundColor extends Color {\n  get backgroundColorScale() {\n    if (!this._backgroundColorScale) {\n      this._generateColorScale();\n    }\n    return this._backgroundColorScale;\n  }\n\n  _generateColorScale() {\n    // This would create a 100 color value array based on all parameters,\n    // which can be used for sliding lightness as a background color\n\n    // Call original generateColorScale method in the context of our background color\n    // Then we can run the code for Color, but we've added in more below.\n    Color.prototype._generateColorScale.call(this);\n\n    // create massive scale\n    const backgroundColorScale = createScale({ swatches: 1000, colorKeys: this._colorKeys, colorspace: this._colorspace, shift: 1, smooth: this._smooth });\n\n    // Inject original keycolors to ensure they are present in the background options\n    backgroundColorScale.push(...this.colorKeys);\n    \n    const colorObj = backgroundColorScale\n      // Convert to HSLuv and keep track of original indices\n      .map((c, i) => ({ value: Math.round(hsluvArray(c)[2]), index: i }));\n\n    const colorObjFiltered = removeDuplicates(colorObj, 'value')\n\n    const bgColorArrayFiltered = colorObjFiltered.map((data) => backgroundColorScale[data.index]);\n\n    // Manually cap the background array at 100 colors, then add white back to the end\n    // since it sometimes gets removed.\n    if(bgColorArrayFiltered.length >= 101) {\n      bgColorArrayFiltered.length = 100;\n      bgColorArrayFiltered.push('#ffffff');\n    }\n\n    this._backgroundColorScale = bgColorArrayFiltered.map((color) => convertColorValue(color, this._output));\n\n    return this._backgroundColorScale;\n  }\n}\nexport { BackgroundColor };\n","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport chroma from \"chroma-js\";\n\nimport { colorSpaces, convertColorValue, multiplyRatios, ratioName, round, searchColors } from \"./utils\";\n\nimport { BackgroundColor } from \"./backgroundcolor\";\n\nclass Theme {\n  constructor({ colors, backgroundColor, lightness, contrast = 1, saturation = 100, output = 'HEX', formula = 'wcag2' }) {\n    this._output = output;\n    this._colors = colors;\n    this._lightness = lightness;\n    this._saturation = saturation;\n    this._formula = formula;\n\n    this._setBackgroundColor(backgroundColor);\n    this._setBackgroundColorValue();\n\n    this._contrast = contrast;\n    if (!this._colors) {\n      throw new Error('No colors are defined');\n    }\n    if (!this._backgroundColor) {\n      throw new Error('Background color is undefined');\n    }\n    colors.forEach((color) => {\n      if (!color.ratios) throw new Error(`Color ${color.name}'s ratios are undefined`);\n    });\n    if (!colorSpaces[this._output]) {\n      throw new Error(`Output “${output}” not supported`);\n    }\n\n    // Only run the update if saturation is set below 100%\n    if(this._saturation < 100) this._updateColorSaturation(this._saturation);\n\n    this._findContrastColors();\n    this._findContrastColorPairs();\n    this._findContrastColorValues();\n  }\n\n  set formula(formula) {\n    this._formula = formula;\n    this._findContrastColors();\n  }\n\n  get formula() {\n    return this._formula;\n  }\n\n  set contrast(contrast) {\n    this._contrast = contrast;\n    this._findContrastColors();\n  }\n\n  get contrast() {\n    return this._contrast;\n  }\n\n  set lightness(lightness) {\n    this._lightness = lightness;\n    this._setBackgroundColor(this._backgroundColor);\n    this._findContrastColors();\n  }\n\n  get lightness() {\n    return this._lightness;\n  }\n\n  set saturation(saturation) {\n    this._saturation = saturation;\n    // Update all colors key colors\n    this._updateColorSaturation(saturation);\n    this._findContrastColors();\n  }\n\n  get saturation() {\n    return this._saturation;\n  }\n\n  set backgroundColor(backgroundColor) {\n    this._setBackgroundColor(backgroundColor);\n    this._findContrastColors();\n  }\n\n  get backgroundColorValue() {\n    return this._backgroundColorValue;\n  }\n\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n\n  // Add a getter and setter for colors\n  set colors(colors) {\n    this._colors = colors;\n    this._findContrastColors();\n  }\n\n  get colors() {\n    return this._colors;\n  }\n\n  // add individual new colors\n  set addColor(color) {\n    this._colors.push(color);\n    this._findContrastColors();\n  }\n  // remove individual colors\n  set removeColor(color) {\n    const filteredColors = this._colors.filter(entry => {return entry.name !== color.name});\n    this._colors = filteredColors;\n    this._findContrastColors();\n  }\n  // modify individual colors\n  set updateColor(param) {\n    // pass arguments in the format updateColor: {color: 'ColorToChange', [propertyToChange]: 'newValue'}\n    // eg, changing the name of a color: updateColor: {color: 'blue', name: 'cerulean'}\n    // If param is an array, loop through each object, otherwise execute once\n    if(Array.isArray(param)) {\n      for(let i = 0; i < param.length; i ++) {\n        let currentColor = this._colors.filter(entry => {return entry.name === param[i].color});\n        currentColor = currentColor[0];\n        let index = this._colors.indexOf(currentColor);\n        const filteredColors = this._colors.filter(entry => {return entry.name !== param[i].color});\n        if(param[i].name) currentColor.name = param[i].name;\n        if(param[i].colorKeys) currentColor.colorKeys = param[i].colorKeys;\n        if(param[i].ratios) currentColor.ratios = param[i].ratios;\n        if(param[i].colorspace) currentColor.colorspace = param[i].colorspace;\n        if(param[i].smooth) currentColor.smooth = param[i].smooth;\n        // call _generateColorScale to ensure scale is updated with new params\n        currentColor._generateColorScale();\n\n        // Add the updated color into the filtered array at original index\n        filteredColors.splice(index, 0, currentColor);\n        this._colors = filteredColors;\n      }\n    } else {\n      let currentColor = this._colors.filter(entry => {return entry.name === param.color});\n      currentColor = currentColor[0];\n      let index = this._colors.indexOf(currentColor);\n      const filteredColors = this._colors.filter(entry => {return entry.name !== param.color});\n      if(param.name) currentColor.name = param.name;\n      if(param.colorKeys) currentColor.colorKeys = param.colorKeys;\n      if(param.ratios) currentColor.ratios = param.ratios;\n      if(param.colorspace) currentColor.colorspace = param.colorspace;\n      if(param.smooth) currentColor.smooth = param.smooth;\n      // call _generateColorScale to ensure scale is updated with new params\n      currentColor._generateColorScale();\n  \n      // Add the updated color into the filtered array at original index\n      filteredColors.splice(index, 0, currentColor);\n      this._colors = filteredColors;\n    }\n\n    this._findContrastColors();\n  }\n\n  set output(output) {\n    this._output = output;\n    this._colors.forEach((element) => {\n      element.output = this._output;\n    });\n    this._backgroundColor.output = this._output;\n\n    this._findContrastColors();\n  }\n\n  get output() {\n    return this._output;\n  }\n\n  get contrastColors() {\n    return this._contrastColors;\n  }\n\n  get contrastColorPairs() {\n    return this._contrastColorPairs;\n  }\n\n  get contrastColorValues() {\n    return this._contrastColorValues;\n  }\n\n  _setBackgroundColor(backgroundColor) {\n    if (typeof backgroundColor === 'string') {\n      // If it's a string, convert to Color object and assign lightness.\n      const newBackgroundColor = new BackgroundColor({ name: 'background', colorKeys: [backgroundColor], output: 'RGB' });\n      const calcLightness = round(chroma(String(backgroundColor)).hsluv()[2]);\n\n      this._backgroundColor = newBackgroundColor;\n      this._lightness = calcLightness;\n      this._backgroundColorValue = newBackgroundColor[this._lightness];\n    } else {\n      backgroundColor.output = 'RGB';\n      const calcBackgroundColorValue = backgroundColor.backgroundColorScale[this._lightness];\n\n      this._backgroundColor = backgroundColor;\n      this._backgroundColorValue = calcBackgroundColorValue;\n    }\n  }\n\n  _setBackgroundColorValue() {\n    this._backgroundColorValue = this._backgroundColor.backgroundColorScale[this._lightness];\n  }\n\n  _updateColorSaturation(saturation) {\n    this._colors.map((color) => {\n      color.saturation = saturation;\n    })\n  }\n\n  _findContrastColors() {\n    const bgRgbArray = chroma(String(this._backgroundColorValue)).rgb();\n    const baseV = this._lightness / 100;\n    const convertedBackgroundColorValue = convertColorValue(this._backgroundColorValue, this._output);\n    const baseObj = { background: convertedBackgroundColorValue };\n\n    const returnColors = []; // Array to be populated with JSON objects for each color, including names & contrast values\n    const returnColorValues = []; // Array to be populated with flat list of all color values\n    const returnColorPairs = {...baseObj}; // Objext to be populated with flat list of all color values as named key-value pairs\n    returnColors.push(baseObj);\n\n    this._colors.map((color) => {\n      if (color.ratios !== undefined) {\n        let swatchNames;\n        const newArr = [];\n        const colorObj = {\n          name: color.name,\n          values: newArr,\n        };\n\n        let ratioValues;\n\n        if (Array.isArray(color.ratios)) {\n          ratioValues = color.ratios;\n        } else if (!Array.isArray(color.ratios)) {\n          swatchNames = Object.keys(color.ratios);\n          ratioValues = Object.values(color.ratios);\n        }\n\n        // modify target ratio based on contrast multiplier\n        ratioValues = ratioValues.map((ratio) => multiplyRatios(+ratio, this._contrast));\n\n        const contrastColors = searchColors(color, bgRgbArray, baseV, ratioValues, this._formula).map((clr) => convertColorValue(clr, this._output));\n        \n        for (let i = 0; i < contrastColors.length; i++) {\n          let n;\n          if (!swatchNames) {\n            const rVal = ratioName(color.ratios, this._formula)[i];\n            n = color.name.concat(rVal).replace(/\\s+/g, ''); // concat with ratio name and remove any spaces from original name\n          } else {\n            n = swatchNames[i];\n          }\n\n          const obj = {\n            name: n,\n            contrast: ratioValues[i],\n            value: contrastColors[i],\n          };\n          newArr.push(obj);\n          // Push the same values to the returnColorPairs object\n          returnColorPairs[n] = contrastColors[i];\n          // Push the same value to the returnColorValues array\n          returnColorValues.push(contrastColors[i]);\n        }\n        returnColors.push(colorObj);\n      }\n      return null;\n    });\n    this._contrastColorValues = returnColorValues;\n    this._contrastColorPairs = returnColorPairs;\n    this._contrastColors = returnColors;\n    return this._contrastColors;\n  }\n\n  _findContrastColorPairs() {\n    return this._contrastColorPairs;\n  }\n\n  _findContrastColorValues() {\n    return this._contrastColorValues;\n  }\n}\n\nexport { Theme };\n","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport chroma from \"chroma-js\";\nimport { extendChroma } from \"./chroma-plus\";\nimport { convertColorValue, createScale, getContrast as contrast, luminance, minPositive, ratioName } from \"./utils\";\n\nimport { Color } from \"./color\";\nimport { BackgroundColor } from \"./backgroundcolor\";\nimport { Theme } from \"./theme\";\n\nextendChroma(chroma);\n\n// console.color('#6fa7ff');\n// console.ramp(chroma.scale(['yellow', 'navy']).mode('hsl'))\n\nexport {\n  Color,\n  BackgroundColor,\n  Theme,\n  createScale,\n  luminance,\n  contrast,\n  minPositive,\n  ratioName,\n  convertColorValue\n};\n","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport * as Leo from '@adobe/leonardo-contrast-colors';\nimport './demo.css';\n\n// Define colors and ratios\nlet baseRatios = [-1.1,1,1.12,1.25,1.45,1.75,2.25,3.01,4.52,7,11,16];\nlet uiRatios = [1,1.12,1.3,2,3.01,4.52,7,11,16];\n\nlet purpleScale = new Leo.Color({\n  name: \"purple\",\n  colorKeys: [\"#7a4beb\",\"#ac80f4\",\"#2f0071\"],\n  colorspace: \"LAB\",\n  ratios: uiRatios\n})\n\nlet blueScale = new Leo.Color({\n  name: \"blue\",\n  colorKeys: ['#0272d4','#b2f0ff','#55cfff','#0037d7'],\n  colorspace: \"CAM02\",\n  ratios: uiRatios\n});\n\nlet greenScale = new Leo.Color({\n  name: \"green\",\n  colorKeys: [\"#4eb076\",\"#2a5a45\",\"#a7e3b4\"],\n  colorspace: \"HSL\",\n  ratios: uiRatios\n})\nlet redScale = new Leo.Color({\n  name: \"red\",\n  colorKeys: [\"#ea2825\",\"#ffc1ad\",\"#fd937e\"],\n  colorspace: \"LAB\",\n  ratios: uiRatios\n});\n\nlet goldScale = new Leo.Color ({\n  name: \"gold\",\n  colorKeys: [\"#e8b221\",\"#a06a00\",\"#ffdd7c\"],\n  colorspace: \"HSL\",\n  ratios: uiRatios\n})\n\nlet grayScale =  new Leo.BackgroundColor({\n  name: \"gray\",\n  colorKeys: [\"#4a5b7b\",\"#72829c\",\"#a6b2c6\"],\n  colorspace: 'HSL',\n  ratios: baseRatios\n});\n\nlet myTheme = new Leo.Theme({\n  backgroundColor: grayScale,\n  colors: [grayScale, purpleScale, blueScale, greenScale, redScale, goldScale],\n  lightness: 100,\n  contrast: 1,\n});\n\nfunction setup() {\n  let br = document.getElementById('sliderBrightness');\n  br.min= \"0\";\n  br.max= \"100\";\n  br.defaultValue = \"95\";\n\n  let calendar = document.getElementById('calendar')\n  calendar.innerHTML = ' ';\n\n  let monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n    \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n  ];\n\n  let d = new Date();\n  let month = monthNames[d.getMonth()];\n\n  let colNum = 5;\n  for (let i = 0; i<colNum; i++) {\n    let col = document.createElement('div');\n    col.className = 'calendarColumn';\n    col.id = 'calendarColumn'+i;\n\n    let head = document.createElement('div');\n    head.className = 'calendarColumnHeader';\n\n    let today = new Date();\n    let date = month+' '+ (today.getDate()+i);\n\n    head.innerHTML = date;\n\n    col.appendChild(head);\n\n    let hours = 18;\n    for (let i=0; i<hours; i++) {\n      let half = document.createElement('div');\n      let full = document.createElement('div');\n      half.className = 'calendar30';\n      full.className = 'calendar60';\n\n      col.appendChild(half);\n      col.appendChild(full);\n    }\n\n    calendar.appendChild(col);\n  }\n}\nsetup();\n\nfunction createEvent(col, dur, title, meta, cat, pos, width, customClass) {\n  if(!width){\n    width = 'eventSingle';\n  }\n  // pos is position related to half-hour increments. Ie, how many rows down.\n  let en = document.createElement('div');\n  let head = document.createElement('span');\n  let t = document.createTextNode(title);\n  head.className = 'eventTitle';\n  head.appendChild(t);\n\n  let detail = document.createElement('span');\n  let d = document.createTextNode(meta);\n  detail.className = 'eventMeta';\n  detail.appendChild(d);\n\n  en.classList.add('event', dur, cat, width, customClass);\n  en.appendChild(head);\n  en.appendChild(detail);\n  en.style.top = 56 + (pos * 33) + 'px';\n\n  col.appendChild(en);\n}\n\nlet col0 = document.getElementById('calendarColumn0');\nlet col1 = document.getElementById('calendarColumn1');\nlet col2 = document.getElementById('calendarColumn2');\nlet col3 = document.getElementById('calendarColumn3');\nlet col4 = document.getElementById('calendarColumn4');\n\n// Populate calendar with events\n// Col 0\ncreateEvent(col0, 'event30', 'Gym', '-', 'catPersonal', 1, 'eventDouble');\ncreateEvent(col0, 'event90', 'Office Hour', 'UT-331', 'catPrimary', 1, 'eventDouble');\ncreateEvent(col0, 'event60', 'Research Planning', 'UT-105', 'catDefault', 6);\ncreateEvent(col0, 'event90', 'Office Hour', 'UT-201', 'catPrimary', 10);\ncreateEvent(col0, 'event60', 'Project Sync', 'UT-220', 'catBlue', 16);\n// Col 1\ncreateEvent(col1, 'event30', 'Gym', '-', 'catPersonal', 1);\ncreateEvent(col1, 'event120', 'Employee Meeting', 'UT-203', 'catImportant', 4);\ncreateEvent(col1, 'event90', 'Leonardo integration', 'https://leonardocolor.io', 'catBlue', 12, 'eventSingle', 'is-selected');\n\n// Col 2\ncreateEvent(col2, 'event30', 'Gym', '-', 'catPersonal', 1);\ncreateEvent(col2, 'event60', 'Workshop', 'UT-440', 'catBlue', 4);\ncreateEvent(col2, 'event90', 'Office Hour', 'UT-201', 'catPrimary', 10, 'eventDouble');\ncreateEvent(col2, 'event30', 'Color sync', 'UT-220', 'catDefault', 10, 'eventDouble');\ncreateEvent(col2, 'event30', 'Submission Deadline', '-', 'catUrgent', 18);\n\n// Col 3\ncreateEvent(col3, 'event30', 'Gym', '-', 'catPersonal', 1);\ncreateEvent(col3, 'event60', 'User Interview', 'UT-203', 'catDefault', 4);\ncreateEvent(col3, 'event60', 'User Interview', 'UT-203', 'catDefault', 7);\ncreateEvent(col3, 'event60', 'User Interview', 'UT-203', 'catDefault', 12);\ncreateEvent(col3, 'event120', 'Sprint Demo', 'UT-440', 'catImportant', 16, 'eventDouble');\ncreateEvent(col3, 'event60', 'Color palette review', 'UT-330', 'catBlue', 19, 'eventDouble');\n\n// Col 4\ncreateEvent(col4, 'event30', 'Gym', '-', 'catPersonal', 1);\ncreateEvent(col4, 'event60', 'Workshop', 'UT-440', 'catBlue', 4);\ncreateEvent(col4, 'event120', 'Backlog grooming', 'UT-112', 'catPrimary', 8);\n\nfunction createColors() {\n  let br = document.getElementById('sliderBrightness');\n  let con = document.getElementById('sliderContrast');\n  let sat = document.getElementById('sliderSaturation');\n  let mode = document.getElementById('darkMode');\n\n  let brVal = Number(br.value);\n  let conVal = Number(con.value);\n  let satVal = Number(sat.value);\n\n  if(mode.checked == true) {\n    br.min= \"0\";\n    br.max= \"30\";\n    if(brVal > 30) {\n      brVal = 15;\n      br.value = 15;\n    }\n\n    document.documentElement.style.setProperty('--shadow-color', 'rgba(0, 0, 0, 0.5)');\n  } else {\n    br.min= \"85\";\n    br.max= \"100\";\n    if(brVal < 80) {\n      brVal = 95;\n      br.value = 95;\n    }\n\n    document.documentElement.style.setProperty('--shadow-color', 'rgba(0, 0, 0, 0.1)');\n  }\n\n  myTheme.lightness = brVal;\n  myTheme.contrast = conVal;\n  myTheme.saturation = satVal;\n\n  let colorPairs = myTheme.contrastColorPairs;\n\n  for (const [key, value] of Object.entries(colorPairs)) {\n    document.documentElement.style\n      .setProperty(`--${key}`, value);\n  }\n}\ncreateColors();\n\ndocument.getElementById('darkMode').addEventListener('input', createColors)\ndocument.getElementById('sliderBrightness').addEventListener('input', createColors)\ndocument.getElementById('sliderContrast').addEventListener('input', createColors)\ndocument.getElementById('sliderSaturation').addEventListener('input', createColors)\n\nwindow.createColors = createColors;"]}